   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8.c"
 965              		.align	2
 966              		.global	autoasignar
 968              	autoasignar:
 969              	.LFB2:
   1:../reversi8.c **** // Tamaño del tablero
   2:../reversi8.c **** enum { DIM=8 };
   3:../reversi8.c **** 
   4:../reversi8.c **** // Valores que puede devolver la función patron_volteo())
   5:../reversi8.c **** enum {
   6:../reversi8.c **** 	NO_HAY_PATRON = 0,
   7:../reversi8.c ****   PATRON_ENCONTRADO = 1
   8:../reversi8.c **** };
   9:../reversi8.c **** 
  10:../reversi8.c **** enum {
  11:../reversi8.c **** 	TABLEROS_NO_IGUALES = 0,
  12:../reversi8.c ****   TABLEROS_IGUALES = 1
  13:../reversi8.c **** };
  14:../reversi8.c **** 
  15:../reversi8.c **** enum {
  16:../reversi8.c **** 	PATRONES_IGUALES = 0,
  17:../reversi8.c ****   PATRONES_NO_IGUALES = 1
  18:../reversi8.c **** };
  19:../reversi8.c **** 
  20:../reversi8.c **** 
  21:../reversi8.c **** 
  22:../reversi8.c **** // Estados de las casillas del tablero
  23:../reversi8.c **** // deberia ser enum, lo dejamos como const para usar char...
  24:../reversi8.c **** //const char CASILLA_VACIA = 0;
  25:../reversi8.c **** //const char FICHA_BLANCA  = 1;
  26:../reversi8.c **** //const char FICHA_NEGRA   = 2;
  27:../reversi8.c **** 
  28:../reversi8.c **** enum {
  29:../reversi8.c **** 	CASILLA_VACIA = 0,
  30:../reversi8.c **** 	FICHA_BLANCA = 1,
  31:../reversi8.c **** 	FICHA_NEGRA = 2
  32:../reversi8.c **** };
  33:../reversi8.c **** 
  34:../reversi8.c **** // candidatas: indica las posiciones a explorar
  35:../reversi8.c **** // Se usa para no explorar todo el tablero innecesariamente
  36:../reversi8.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  37:../reversi8.c **** const char  NO              = 0;
  38:../reversi8.c **** const char  SI              = 1;
  39:../reversi8.c **** const char  CASILLA_OCUPADA = 2;
  40:../reversi8.c **** 
  41:../reversi8.c **** /////////////////////////////////////////////////////////////////////////////
  42:../reversi8.c **** // TABLAS AUXILIARES
  43:../reversi8.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  44:../reversi8.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  45:../reversi8.c **** 
  46:../reversi8.c **** static const char __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  47:../reversi8.c **** {
  48:../reversi8.c ****     {8,2,7,3,3,7,2,8},
  49:../reversi8.c ****     {2,1,4,4,4,4,1,2},
  50:../reversi8.c ****     {7,4,6,5,5,6,4,7},
  51:../reversi8.c ****     {3,4,5,0,0,5,4,3},
  52:../reversi8.c ****     {3,4,5,0,0,5,4,3},
  53:../reversi8.c ****     {7,4,6,5,5,6,4,7},
  54:../reversi8.c ****     {2,1,4,4,4,4,1,2},
  55:../reversi8.c ****     {8,2,7,3,3,7,2,8}
  56:../reversi8.c **** };
  57:../reversi8.c **** 
  58:../reversi8.c **** 
  59:../reversi8.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  60:../reversi8.c **** const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  61:../reversi8.c **** const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  62:../reversi8.c **** 
  63:../reversi8.c **** //////////////////////////////////////////////////////////////////////////////////////
  64:../reversi8.c **** // Variables globales que no deberían serlo
  65:../reversi8.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  66:../reversi8.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  67:../reversi8.c **** //////////////////////////////////////////////////////////////////////////////////////
  68:../reversi8.c **** 
  69:../reversi8.c **** ////////////////////////////////////////////////////////////////////
  70:../reversi8.c **** // Tablero sin inicializar
  71:../reversi8.c **** ////////////////////////////////////////////////////////////////////
  72:../reversi8.c **** static char __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  73:../reversi8.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  74:../reversi8.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  75:../reversi8.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  76:../reversi8.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  77:../reversi8.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  78:../reversi8.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  79:../reversi8.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  80:../reversi8.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  81:../reversi8.c **** 	    };
  82:../reversi8.c **** 
  83:../reversi8.c **** static char __attribute__ ((aligned (8))) tablero2[DIM][DIM];
  84:../reversi8.c **** static char __attribute__ ((aligned (8))) tablero3[DIM][DIM];
  85:../reversi8.c **** 
  86:../reversi8.c ****   ////////////////////////////////////////////////////////////////////
  87:../reversi8.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
  88:../reversi8.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
  89:../reversi8.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
  90:../reversi8.c **** static volatile char // Poner volatile!!!
  91:../reversi8.c **** 		 fila=0,
  92:../reversi8.c **** 	    columna=0,
  93:../reversi8.c **** 	    ready = 0;
  94:../reversi8.c **** 
  95:../reversi8.c **** 
  96:../reversi8.c **** // extern int patron_volteo_arm(char tablero[][8], int *longitud,char f, char c, char SF, char SC, 
  97:../reversi8.c **** 
  98:../reversi8.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  99:../reversi8.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
 100:../reversi8.c **** // pone el tablero a cero y luego coloca las fichas centrales.
 101:../reversi8.c **** void init_table(char tablero[][DIM], char candidatas[][DIM])
 102:../reversi8.c **** {
 103:../reversi8.c ****     int i, j;
 104:../reversi8.c **** 
 105:../reversi8.c ****     for (i = 0; i < DIM; i++)
 106:../reversi8.c ****     {
 107:../reversi8.c ****         for (j = 0; j < DIM; j++)
 108:../reversi8.c ****             tablero[i][j] = CASILLA_VACIA;
 109:../reversi8.c ****     }
 110:../reversi8.c **** #if 0
 111:../reversi8.c ****     for (i = 3; i < 5; ++i) {
 112:../reversi8.c **** 	for(j = 3; j < 5; ++j) {
 113:../reversi8.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
 114:../reversi8.c **** 	}
 115:../reversi8.c ****     }
 116:../reversi8.c **** 
 117:../reversi8.c ****     for (i = 2; i < 6; ++i) {
 118:../reversi8.c **** 	for (j = 2; j < 6; ++j) {
 119:../reversi8.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
 120:../reversi8.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 121:../reversi8.c **** 	    } else {
 122:../reversi8.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 123:../reversi8.c **** 	    }
 124:../reversi8.c **** 	}
 125:../reversi8.c ****     }
 126:../reversi8.c **** #endif
 127:../reversi8.c ****     // arriba hay versión alternativa
 128:../reversi8.c ****     tablero[3][3] = FICHA_BLANCA;
 129:../reversi8.c ****     tablero[4][4] = FICHA_BLANCA;
 130:../reversi8.c ****     tablero[3][4] = FICHA_NEGRA;
 131:../reversi8.c ****     tablero[4][3] = FICHA_NEGRA;
 132:../reversi8.c **** 
 133:../reversi8.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 134:../reversi8.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 135:../reversi8.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 136:../reversi8.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 137:../reversi8.c **** 
 138:../reversi8.c ****     // casillas a explorar:
 139:../reversi8.c ****     candidatas[2][2] = SI;
 140:../reversi8.c ****     candidatas[2][3] = SI;
 141:../reversi8.c ****     candidatas[2][4] = SI;
 142:../reversi8.c ****     candidatas[2][5] = SI;
 143:../reversi8.c ****     candidatas[3][2] = SI;
 144:../reversi8.c ****     candidatas[3][5] = SI;
 145:../reversi8.c ****     candidatas[4][2] = SI;
 146:../reversi8.c ****     candidatas[4][5] = SI;
 147:../reversi8.c ****     candidatas[5][2] = SI;
 148:../reversi8.c ****     candidatas[5][3] = SI;
 149:../reversi8.c ****     candidatas[5][4] = SI;
 150:../reversi8.c ****     candidatas[5][5] = SI;
 151:../reversi8.c **** }
 152:../reversi8.c **** 
 153:../reversi8.c **** ////////////////////////////////////////////////////////////////////////////////
 154:../reversi8.c **** // Espera a que ready valga 1.
 155:../reversi8.c **** // CUIDADO: si el compilador coloca esta variable en un registro, no funcionará.
 156:../reversi8.c **** // Hay que definirla como "volatile" para forzar a que antes de cada uso la cargue de memoria
 157:../reversi8.c **** 
 158:../reversi8.c **** void esperar_mov(char *ready)
 159:../reversi8.c **** {
 160:../reversi8.c **** 
 161:../reversi8.c **** 	autoasignar();
 162:../reversi8.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 163:../reversi8.c **** 
 164:../reversi8.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 165:../reversi8.c **** }
 166:../reversi8.c **** 
 167:../reversi8.c **** void autoasignar() {
 970              		.loc 1 167 0
 971              		.cfi_startproc
 972              		@ Function supports interworking.
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              		@ link register save eliminated.
 168:../reversi8.c **** 	fila = 2;
 976              		.loc 1 168 0
 977 0000 18309FE5 		ldr	r3, .L2
 978 0004 0210A0E3 		mov	r1, #2
 169:../reversi8.c **** 	columna = 3;
 979              		.loc 1 169 0
 980 0008 0300A0E3 		mov	r0, #3
 170:../reversi8.c **** 	ready = 1;
 981              		.loc 1 170 0
 982 000c 0120A0E3 		mov	r2, #1
 168:../reversi8.c **** 	fila = 2;
 983              		.loc 1 168 0
 984 0010 0010C3E5 		strb	r1, [r3, #0]
 169:../reversi8.c **** 	columna = 3;
 985              		.loc 1 169 0
 986 0014 0100C3E5 		strb	r0, [r3, #1]
 987              		.loc 1 170 0
 988 0018 0220C3E5 		strb	r2, [r3, #2]
 171:../reversi8.c **** }
 989              		.loc 1 171 0
 990 001c 1EFF2FE1 		bx	lr
 991              	.L3:
 992              		.align	2
 993              	.L2:
 994 0020 00000000 		.word	.LANCHOR0
 995              		.cfi_endproc
 996              	.LFE2:
 998              		.align	2
 1000              	actualizar_tablero.clone.0:
 1001              	.LFB18:
 172:../reversi8.c **** 
 173:../reversi8.c **** ////////////////////////////////////////////////////////////////////////////////
 174:../reversi8.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 175:../reversi8.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 176:../reversi8.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 177:../reversi8.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 178:../reversi8.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 179:../reversi8.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 180:../reversi8.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 181:../reversi8.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 182:../reversi8.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 183:../reversi8.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 184:../reversi8.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 185:../reversi8.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 186:../reversi8.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 187:../reversi8.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 188:../reversi8.c **** ////////////////////////////////////////////////////////////////////////////////
 189:../reversi8.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 190:../reversi8.c **** // Además informa si la posición es válida y contiene alguna ficha.
 191:../reversi8.c **** // Esto lo hace por referencia (en *posicion_valida)
 192:../reversi8.c **** // Si devuelve un 0 no es válida o está vacia.
 193:../reversi8.c **** char ficha_valida(char tablero[][DIM], char f, char c, int *posicion_valida)
 194:../reversi8.c **** {
 195:../reversi8.c ****     char ficha;
 196:../reversi8.c **** 
 197:../reversi8.c **** //    printf("%c, %c, %i",f, c, *posicion_valida);
 198:../reversi8.c ****     // ficha = tablero[f][c];
 199:../reversi8.c ****     // no puede accederse a tablero[f][c]
 200:../reversi8.c ****     // ya que algún índice puede ser negativo
 201:../reversi8.c **** 
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 203:../reversi8.c ****     {
 204:../reversi8.c ****         *posicion_valida = 1;
 205:../reversi8.c ****         ficha = tablero[f][c];
 206:../reversi8.c ****     }
 207:../reversi8.c ****     else
 208:../reversi8.c ****     {
 209:../reversi8.c ****         *posicion_valida = 0;
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 211:../reversi8.c ****     }
 212:../reversi8.c ****     return ficha;
 213:../reversi8.c **** }
 214:../reversi8.c **** 
 215:../reversi8.c **** 
 216:../reversi8.c **** ////////////////////////////////////////////////////////////////////////////////
 217:../reversi8.c **** // La función patrón volteo comprueba si hay que actualizar una determinada direccion,
 218:../reversi8.c **** // busca el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual)
 219:../reversi8.c **** // en una dirección determinada
 220:../reversi8.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 221:../reversi8.c **** // color indica el color de la pieza que se acaba de colocar
 222:../reversi8.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 223:../reversi8.c **** // FA y CA son la fila y columna a analizar
 224:../reversi8.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 225:../reversi8.c **** //          Se usa para saber cuantas fichas habría que voltear
 226:../reversi8.c **** extern int patron_volteo_arm_arm(char tablero[][DIM], int *longitud, char FA, char CA, char SF, cha
 227:../reversi8.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 228:../reversi8.c **** {
 229:../reversi8.c **** 	int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 230:../reversi8.c **** 	char casilla;   // casilla es la casilla que se lee del tablerotes();
 231:../reversi8.c **** 
 232:../reversi8.c **** 	FA = FA + SF;
 233:../reversi8.c **** 	CA = CA + SC;
 234:../reversi8.c **** 	casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 235:../reversi8.c **** 	while ((posicion_valida == 1) && (casilla != color))
 236:../reversi8.c **** 	// mientras la casilla está en el tablero, no está vací­a,
 237:../reversi8.c **** 	// y es del color rival seguimos buscando el patron de volteo
 238:../reversi8.c **** 	{
 239:../reversi8.c **** 		FA = FA + SF;
 240:../reversi8.c **** 		CA = CA + SC;
 241:../reversi8.c **** 		*longitud = *longitud + 1;
 242:../reversi8.c **** 		casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 243:../reversi8.c **** 	}
 244:../reversi8.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 245:../reversi8.c ****     // entonces hemos encontrado el patrón
 246:../reversi8.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0)) {
 247:../reversi8.c **** 
 248:../reversi8.c **** 		return PATRON_ENCONTRADO;
 249:../reversi8.c **** 	}// si hay que voltear una ficha o más hemos encontrado el patrón
 250:../reversi8.c **** 	else {
 251:../reversi8.c **** 		return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 252:../reversi8.c **** 	}
 253:../reversi8.c **** }
 254:../reversi8.c **** 
 255:../reversi8.c **** 
 256:../reversi8.c **** ////////////////////////////////////////////////////////////////////////////////
 257:../reversi8.c **** // voltea n fichas en la dirección que toque
 258:../reversi8.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 259:../reversi8.c **** // color indica el color de la pieza que se acaba de colocar
 260:../reversi8.c **** // FA y CA son la fila y columna a analizar
 261:../reversi8.c **** void voltear(char tablero[][DIM], char FA, char CA, char SF, char SC, int n, char color)
 262:../reversi8.c **** {
 263:../reversi8.c ****     int i;
 264:../reversi8.c **** 
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 266:../reversi8.c ****     {
 267:../reversi8.c ****         FA = FA + SF;
 268:../reversi8.c ****         CA = CA + SC;
 269:../reversi8.c ****         tablero[FA][CA] = color;
 270:../reversi8.c ****     }
 271:../reversi8.c **** }
 272:../reversi8.c **** 
 273:../reversi8.c **** 
 274:../reversi8.c **** ////////////////////////////////////////////////////////////////////////////////
 275:../reversi8.c **** // comprueba si hay que actualizar alguna ficha
 276:../reversi8.c **** // no comprueba que el movimiento realizado sea válido
 277:../reversi8.c **** // f y c son la fila y columna a analizar
 278:../reversi8.c **** // char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 279:../reversi8.c **** // char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 280:../reversi8.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 1002              		.loc 1 280 0
 1003              		.cfi_startproc
 1004              		@ Function supports interworking.
 1005              		@ args = 0, pretend = 0, frame = 40
 1006              		@ frame_needed = 1, uses_anonymous_args = 0
 1007              	.LVL0:
 1008 0024 0DC0A0E1 		mov	ip, sp
 1009              	.LCFI0:
 1010              		.cfi_def_cfa_register 12
 1011 0028 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 1012 002c 04B04CE2 		sub	fp, ip, #4
 1013              		.cfi_offset 14, -8
 1014              		.cfi_offset 13, -12
 1015              		.cfi_offset 11, -16
 1016              		.cfi_offset 10, -20
 1017              		.cfi_offset 9, -24
 1018              		.cfi_offset 8, -28
 1019              		.cfi_offset 7, -32
 1020              		.cfi_offset 6, -36
 1021              		.cfi_offset 5, -40
 1022              		.cfi_offset 4, -44
 1023              	.LCFI1:
 1024              		.cfi_def_cfa 11, 4
 1025 0030 2CD04DE2 		sub	sp, sp, #44
 281:../reversi8.c **** {
 282:../reversi8.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 283:../reversi8.c ****     int i, flip, patron;
 284:../reversi8.c ****     volatile int tiempo = 0;
 1026              		.loc 1 284 0
 1027 0034 0050A0E3 		mov	r5, #0
 280:../reversi8.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 1028              		.loc 1 280 0
 1029 0038 3C100BE5 		str	r1, [fp, #-60]
 1030 003c 0240A0E1 		mov	r4, r2
 1031 0040 38000BE5 		str	r0, [fp, #-56]
 1032              		.loc 1 284 0
 1033 0044 30500BE5 		str	r5, [fp, #-48]
 1034              	.LVL1:
 285:../reversi8.c **** 
 286:../reversi8.c ****     timer2_inicializar();
 1035              		.loc 1 286 0
 1036 0048 FEFFFFEB 		bl	timer2_inicializar
 1037              	.LVL2:
 287:../reversi8.c ****     timer2_empezar();
 1038              		.loc 1 287 0
 1039 004c FEFFFFEB 		bl	timer2_empezar
 1040              	.LVL3:
 1041              	.LBB30:
 1042              	.LBB31:
 1043              	.LBB32:
 1044              	.LBB33:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1045              		.loc 1 202 0
 1046 0050 60029FE5 		ldr	r0, .L34
 1047              	.LBE33:
 1048              	.LBE32:
 1049              	.LBE31:
 1050              	.LBE30:
 288:../reversi8.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1051              		.loc 1 288 0
 1052 0054 05C0A0E1 		mov	ip, r5
 1053              	.LVL4:
 1054              	.L11:
 289:../reversi8.c ****     {
 290:../reversi8.c ****         SF = vSF[i];
 1055              		.loc 1 290 0
 1056 0058 5C529FE5 		ldr	r5, .L34+4
 291:../reversi8.c ****         SC = vSC[i];
 1057              		.loc 1 291 0
 1058 005c 082085E2 		add	r2, r5, #8
 290:../reversi8.c ****         SF = vSF[i];
 1059              		.loc 1 290 0
 1060 0060 0C10D5E7 		ldrb	r1, [r5, ip]	@ zero_extendqisi2
 1061              	.LVL5:
 1062              		.loc 1 291 0
 1063 0064 0C20D2E7 		ldrb	r2, [r2, ip]	@ zero_extendqisi2
 1064              	.LVL6:
 1065              	.LBB41:
 1066              	.LBB40:
 232:../reversi8.c **** 	FA = FA + SF;
 1067              		.loc 1 232 0
 1068 0068 3C304BE2 		sub	r3, fp, #60
 1069 006c 080193E8 		ldmia	r3, {r3, r8}	@ phole ldm
 1070 0070 017088E0 		add	r7, r8, r1
 233:../reversi8.c **** 	CA = CA + SC;
 1071              		.loc 1 233 0
 1072 0074 02E083E0 		add	lr, r3, r2
 232:../reversi8.c **** 	FA = FA + SF;
 1073              		.loc 1 232 0
 1074 0078 FF5007E2 		and	r5, r7, #255
 1075              	.LVL7:
 233:../reversi8.c **** 	CA = CA + SC;
 1076              		.loc 1 233 0
 1077 007c FFE00EE2 		and	lr, lr, #255
 1078              	.LVL8:
 1079              	.LBB35:
 1080              	.LBB34:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1081              		.loc 1 202 0
 1082 0080 07005EE3 		cmp	lr, #7
 1083 0084 07005593 		cmpls	r5, #7
 1084 0088 0070A083 		movhi	r7, #0
 1085 008c 0170A093 		movls	r7, #1
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 1086              		.loc 1 210 0
 1087 0090 0760A081 		movhi	r6, r7
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1088              		.loc 1 202 0
 1089 0094 0500008A 		bhi	.L5
 1090 0098 857180E0 		add	r7, r0, r5, asl #3
 1091 009c 0E6087E0 		add	r6, r7, lr
 1092 00a0 0860D6E5 		ldrb	r6, [r6, #8]	@ zero_extendqisi2
 204:../reversi8.c ****         *posicion_valida = 1;
 1093              		.loc 1 204 0
 1094 00a4 000056E3 		cmp	r6, #0
 1095 00a8 0670A001 		moveq	r7, r6
 1096 00ac 0170A013 		movne	r7, #1
 1097              	.L5:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1098              		.loc 1 202 0
 1099 00b0 013085E0 		add	r3, r5, r1
 1100 00b4 02E08EE0 		add	lr, lr, r2
 1101              	.LVL9:
 1102 00b8 FF5003E2 		and	r5, r3, #255
 1103              	.LVL10:
 1104 00bc FFE00EE2 		and	lr, lr, #255
 1105              	.LBE34:
 1106              	.LBE35:
 1107              	.LBB36:
 1108              	.LBB37:
 204:../reversi8.c ****         *posicion_valida = 1;
 1109              		.loc 1 204 0
 1110 00c0 0030A0E3 		mov	r3, #0
 1111 00c4 100000EA 		b	.L6
 1112              	.LVL11:
 1113              	.L8:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1114              		.loc 1 202 0
 1115 00c8 07005EE3 		cmp	lr, #7
 1116 00cc 07005593 		cmpls	r5, #7
 1117 00d0 0070A083 		movhi	r7, #0
 1118 00d4 0170A093 		movls	r7, #1
 1119              	.LBE37:
 1120              	.LBE36:
 241:../reversi8.c **** 		*longitud = *longitud + 1;
 1121              		.loc 1 241 0
 1122 00d8 013083E2 		add	r3, r3, #1
 1123              	.LVL12:
 1124              	.LBB39:
 1125              	.LBB38:
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 1126              		.loc 1 210 0
 1127 00dc 0760A081 		movhi	r6, r7
 1128              	.LVL13:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1129              		.loc 1 202 0
 1130 00e0 0500008A 		bhi	.L7
 1131 00e4 856180E0 		add	r6, r0, r5, asl #3
 1132 00e8 0E8086E0 		add	r8, r6, lr
 1133 00ec 0860D8E5 		ldrb	r6, [r8, #8]	@ zero_extendqisi2
 204:../reversi8.c ****         *posicion_valida = 1;
 1134              		.loc 1 204 0
 1135 00f0 000056E3 		cmp	r6, #0
 1136 00f4 0670A001 		moveq	r7, r6
 1137 00f8 0170A013 		movne	r7, #1
 1138              	.L7:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1139              		.loc 1 202 0
 1140 00fc 015085E0 		add	r5, r5, r1
 1141              	.LVL14:
 1142 0100 02E08EE0 		add	lr, lr, r2
 1143              	.LVL15:
 1144 0104 FF5005E2 		and	r5, r5, #255
 1145 0108 FFE00EE2 		and	lr, lr, #255
 1146              	.LVL16:
 1147              	.L6:
 1148              	.LBE38:
 1149              	.LBE39:
 235:../reversi8.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1150              		.loc 1 235 0
 1151 010c FF7007E2 		and	r7, r7, #255
 1152              	.LVL17:
 1153 0110 060054E1 		cmp	r4, r6
 1154 0114 0080A003 		moveq	r8, #0
 1155 0118 01800712 		andne	r8, r7, #1
 1156 011c 000058E3 		cmp	r8, #0
 1157 0120 E8FFFF1A 		bne	.L8
 246:../reversi8.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0)) {
 1158              		.loc 1 246 0
 1159 0124 060054E1 		cmp	r4, r6
 1160 0128 0070A013 		movne	r7, #0
 1161 012c 01700702 		andeq	r7, r7, #1
 1162 0130 000057E3 		cmp	r7, #0
 1163 0134 5600000A 		beq	.L9
 1164 0138 000053E3 		cmp	r3, #0
 1165 013c 5400000A 		beq	.L9
 1166              	.LBE40:
 1167              	.LBE41:
 1168              	.LBB42:
 1169              	.LBB43:
 267:../reversi8.c ****         FA = FA + SF;
 1170              		.loc 1 267 0
 1171              	.LVL18:
 1172 0140 3C504BE2 		sub	r5, fp, #60
 1173 0144 600095E8 		ldmia	r5, {r5, r6}	@ phole ldm
 1174 0148 01E086E0 		add	lr, r6, r1
 268:../reversi8.c ****         CA = CA + SC;
 1175              		.loc 1 268 0
 1176 014c 028085E0 		add	r8, r5, r2
 267:../reversi8.c ****         FA = FA + SF;
 1177              		.loc 1 267 0
 1178 0150 FFE00EE2 		and	lr, lr, #255
 1179              	.LVL19:
 268:../reversi8.c ****         CA = CA + SC;
 1180              		.loc 1 268 0
 1181 0154 FF8008E2 		and	r8, r8, #255
 1182              	.LVL20:
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1183              		.loc 1 269 0
 1184 0158 8E7180E0 		add	r7, r0, lr, asl #3
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1185              		.loc 1 265 0
 1186 015c 0150A0E3 		mov	r5, #1
 1187 0160 016043E2 		sub	r6, r3, #1
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1188              		.loc 1 269 0
 1189 0164 087087E0 		add	r7, r7, r8
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1190              		.loc 1 265 0
 1191 0168 030055E1 		cmp	r5, r3
 1192 016c 036006E2 		and	r6, r6, #3
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1193              		.loc 1 269 0
 1194 0170 0840C7E5 		strb	r4, [r7, #8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1195              		.loc 1 265 0
 1196 0174 4600000A 		beq	.L9
 1197 0178 000056E3 		cmp	r6, #0
 1198 017c 1D00000A 		beq	.L32
 1199 0180 010056E3 		cmp	r6, #1
 1200 0184 1100000A 		beq	.L29
 1201 0188 020056E3 		cmp	r6, #2
 1202 018c 0700000A 		beq	.L30
 267:../reversi8.c ****         FA = FA + SF;
 1203              		.loc 1 267 0
 1204 0190 01E08EE0 		add	lr, lr, r1
 1205 0194 FFE00EE2 		and	lr, lr, #255
 1206              	.LVL21:
 268:../reversi8.c ****         CA = CA + SC;
 1207              		.loc 1 268 0
 1208 0198 028088E0 		add	r8, r8, r2
 1209 019c FF8008E2 		and	r8, r8, #255
 1210              	.LVL22:
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1211              		.loc 1 269 0
 1212 01a0 8E6180E0 		add	r6, r0, lr, asl #3
 1213 01a4 085086E0 		add	r5, r6, r8
 1214 01a8 0840C5E5 		strb	r4, [r5, #8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1215              		.loc 1 265 0
 1216 01ac 0250A0E3 		mov	r5, #2
 1217              	.L30:
 267:../reversi8.c ****         FA = FA + SF;
 1218              		.loc 1 267 0
 1219 01b0 01E08EE0 		add	lr, lr, r1
 1220 01b4 FFE00EE2 		and	lr, lr, #255
 268:../reversi8.c ****         CA = CA + SC;
 1221              		.loc 1 268 0
 1222 01b8 028088E0 		add	r8, r8, r2
 1223 01bc FF8008E2 		and	r8, r8, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1224              		.loc 1 269 0
 1225 01c0 8E6180E0 		add	r6, r0, lr, asl #3
 1226 01c4 086086E0 		add	r6, r6, r8
 1227 01c8 0840C6E5 		strb	r4, [r6, #8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1228              		.loc 1 265 0
 1229 01cc 015085E2 		add	r5, r5, #1
 1230              	.L29:
 267:../reversi8.c ****         FA = FA + SF;
 1231              		.loc 1 267 0
 1232 01d0 01E08EE0 		add	lr, lr, r1
 1233 01d4 FFE00EE2 		and	lr, lr, #255
 268:../reversi8.c ****         CA = CA + SC;
 1234              		.loc 1 268 0
 1235 01d8 028088E0 		add	r8, r8, r2
 1236 01dc FF8008E2 		and	r8, r8, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1237              		.loc 1 269 0
 1238 01e0 8E6180E0 		add	r6, r0, lr, asl #3
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1239              		.loc 1 265 0
 1240 01e4 015085E2 		add	r5, r5, #1
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1241              		.loc 1 269 0
 1242 01e8 086086E0 		add	r6, r6, r8
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1243              		.loc 1 265 0
 1244 01ec 030055E1 		cmp	r5, r3
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1245              		.loc 1 269 0
 1246 01f0 0840C6E5 		strb	r4, [r6, #8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1247              		.loc 1 265 0
 1248 01f4 2600000A 		beq	.L9
 1249              	.L32:
 1250 01f8 48C00BE5 		str	ip, [fp, #-72]
 1251 01fc 44300BE5 		str	r3, [fp, #-68]
 1252              	.LVL23:
 1253              	.L10:
 267:../reversi8.c ****         FA = FA + SF;
 1254              		.loc 1 267 0
 1255 0200 01A08EE0 		add	sl, lr, r1
 1256 0204 FF900AE2 		and	r9, sl, #255
 1257 0208 017089E0 		add	r7, r9, r1
 268:../reversi8.c ****         CA = CA + SC;
 1258              		.loc 1 268 0
 1259 020c 026088E0 		add	r6, r8, r2
 267:../reversi8.c ****         FA = FA + SF;
 1260              		.loc 1 267 0
 1261 0210 FFA007E2 		and	sl, r7, #255
 268:../reversi8.c ****         CA = CA + SC;
 1262              		.loc 1 268 0
 1263 0214 FF6006E2 		and	r6, r6, #255
 267:../reversi8.c ****         FA = FA + SF;
 1264              		.loc 1 267 0
 1265 0218 01808AE0 		add	r8, sl, r1
 268:../reversi8.c ****         CA = CA + SC;
 1266              		.loc 1 268 0
 1267 021c 02C086E0 		add	ip, r6, r2
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1268              		.loc 1 269 0
 1269 0220 899180E0 		add	r9, r0, r9, asl #3
 267:../reversi8.c ****         FA = FA + SF;
 1270              		.loc 1 267 0
 1271 0224 FF7008E2 		and	r7, r8, #255
 268:../reversi8.c ****         CA = CA + SC;
 1272              		.loc 1 268 0
 1273 0228 FFC00CE2 		and	ip, ip, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1274              		.loc 1 269 0
 1275 022c 40900BE5 		str	r9, [fp, #-64]
 268:../reversi8.c ****         CA = CA + SC;
 1276              		.loc 1 268 0
 1277 0230 02308CE0 		add	r3, ip, r2
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1278              		.loc 1 269 0
 1279 0234 879180E0 		add	r9, r0, r7, asl #3
 267:../reversi8.c ****         FA = FA + SF;
 1280              		.loc 1 267 0
 1281 0238 01E087E0 		add	lr, r7, r1
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1282              		.loc 1 269 0
 1283 023c 40701BE5 		ldr	r7, [fp, #-64]
 268:../reversi8.c ****         CA = CA + SC;
 1284              		.loc 1 268 0
 1285 0240 FF3003E2 		and	r3, r3, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1286              		.loc 1 269 0
 1287 0244 50900BE5 		str	r9, [fp, #-80]
 1288 0248 8AA180E0 		add	sl, r0, sl, asl #3
 1289 024c 066087E0 		add	r6, r7, r6
 1290 0250 0CA08AE0 		add	sl, sl, ip
 267:../reversi8.c ****         FA = FA + SF;
 1291              		.loc 1 267 0
 1292 0254 FFE00EE2 		and	lr, lr, #255
 268:../reversi8.c ****         CA = CA + SC;
 1293              		.loc 1 268 0
 1294 0258 028083E0 		add	r8, r3, r2
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1295              		.loc 1 269 0
 1296 025c 50701BE5 		ldr	r7, [fp, #-80]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1297              		.loc 1 265 0
 1298 0260 44C01BE5 		ldr	ip, [fp, #-68]
 268:../reversi8.c ****         CA = CA + SC;
 1299              		.loc 1 268 0
 1300 0264 FF8008E2 		and	r8, r8, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1301              		.loc 1 269 0
 1302 0268 8E9180E0 		add	r9, r0, lr, asl #3
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1303              		.loc 1 265 0
 1304 026c 045085E2 		add	r5, r5, #4
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1305              		.loc 1 269 0
 1306 0270 037087E0 		add	r7, r7, r3
 1307 0274 089089E0 		add	r9, r9, r8
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1308              		.loc 1 265 0
 1309 0278 0C0055E1 		cmp	r5, ip
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1310              		.loc 1 269 0
 1311 027c 0840C6E5 		strb	r4, [r6, #8]
 1312 0280 0840CAE5 		strb	r4, [sl, #8]
 1313 0284 0840C7E5 		strb	r4, [r7, #8]
 1314 0288 0840C9E5 		strb	r4, [r9, #8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1315              		.loc 1 265 0
 1316 028c DBFFFF1A 		bne	.L10
 1317 0290 48C01BE5 		ldr	ip, [fp, #-72]
 1318              	.LVL24:
 1319              	.L9:
 1320              	.LBE43:
 1321              	.LBE42:
 288:../reversi8.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1322              		.loc 1 288 0
 1323 0294 02C08CE2 		add	ip, ip, #2
 1324              	.LVL25:
 1325 0298 08005CE3 		cmp	ip, #8
 1326 029c 6DFFFF1A 		bne	.L11
 292:../reversi8.c ****         // flip: numero de fichas a voltear
 293:../reversi8.c ****         flip = 0;
 294:../reversi8.c ****         // patron = patron_volteo(tablero, &flip, f, c, SF, SC, color);
 295:../reversi8.c ****         // patron = patron_volteo_test(tablero, &flip, f, c, SF, SC, color);
 296:../reversi8.c **** 
 297:../reversi8.c ****         patron = patron_volteo(tablero, &flip, f, c, SF, SC, color);
 298:../reversi8.c ****         //printf("Flip: %d \n", flip);
 299:../reversi8.c ****         if (patron == PATRON_ENCONTRADO )
 300:../reversi8.c ****         {
 301:../reversi8.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 302:../reversi8.c ****         }
 303:../reversi8.c ****         i++;
 304:../reversi8.c ****     }
 305:../reversi8.c ****     tiempo = timer2_parar();
 1327              		.loc 1 305 0
 1328 02a0 FEFFFFEB 		bl	timer2_parar
 1329              	.LVL26:
 1330 02a4 30000BE5 		str	r0, [fp, #-48]
 306:../reversi8.c ****     return 0;
 307:../reversi8.c **** }
 1331              		.loc 1 307 0
 1332 02a8 0000A0E3 		mov	r0, #0
 1333 02ac 28D04BE2 		sub	sp, fp, #40
 1334 02b0 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 1335 02b4 1EFF2FE1 		bx	lr
 1336              	.L35:
 1337              		.align	2
 1338              	.L34:
 1339 02b8 00000000 		.word	.LANCHOR0
 1340 02bc 00000000 		.word	.LANCHOR1
 1341              		.cfi_endproc
 1342              	.LFE18:
 1344              		.align	2
 1345              		.global	init_table
 1347              	init_table:
 1348              	.LFB0:
 102:../reversi8.c **** {
 1349              		.loc 1 102 0
 1350              		.cfi_startproc
 1351              		@ Function supports interworking.
 1352              		@ args = 0, pretend = 0, frame = 24
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 1354              		@ link register save eliminated.
 1355              	.LVL27:
 1356 02c0 F0072DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 1357              	.LCFI2:
 1358              		.cfi_def_cfa_offset 28
 1359 02c4 033010E2 		ands	r3, r0, #3
 1360 02c8 1CD04DE2 		sub	sp, sp, #28
 1361              	.LCFI3:
 1362              		.cfi_def_cfa_offset 56
 102:../reversi8.c **** {
 1363              		.loc 1 102 0
 1364 02cc 3B00001A 		bne	.L37
 1365              		.cfi_offset 10, -4
 1366              		.cfi_offset 9, -8
 1367              		.cfi_offset 8, -12
 1368              		.cfi_offset 7, -16
 1369              		.cfi_offset 6, -20
 1370              		.cfi_offset 5, -24
 1371              		.cfi_offset 4, -28
 1372              	.LVL28:
 108:../reversi8.c ****             tablero[i][j] = CASILLA_VACIA;
 1373              		.loc 1 108 0
 1374 02d0 0020A0E1 		mov	r2, r0
 1375 02d4 043082E4 		str	r3, [r2], #4
 1376 02d8 20C082E2 		add	ip, r2, #32
 1377 02dc 04C08DE5 		str	ip, [sp, #4]
 1378 02e0 24C082E2 		add	ip, r2, #36
 1379 02e4 08C08DE5 		str	ip, [sp, #8]
 1380 02e8 04C08CE2 		add	ip, ip, #4
 1381 02ec 0CC08DE5 		str	ip, [sp, #12]
 1382 02f0 04C08CE2 		add	ip, ip, #4
 1383 02f4 10C08DE5 		str	ip, [sp, #16]
 1384 02f8 04A082E2 		add	sl, r2, #4
 1385 02fc 04C08CE2 		add	ip, ip, #4
 1386 0300 14C08DE5 		str	ip, [sp, #20]
 1387 0304 043080E5 		str	r3, [r0, #4]
 1388              	.LVL29:
 1389 0308 043082E5 		str	r3, [r2, #4]
 1390 030c 04308AE5 		str	r3, [sl, #4]
 1391 0310 08308AE5 		str	r3, [sl, #8]
 1392 0314 0C308AE5 		str	r3, [sl, #12]
 1393 0318 10308AE5 		str	r3, [sl, #16]
 1394 031c 14308AE5 		str	r3, [sl, #20]
 1395 0320 18308AE5 		str	r3, [sl, #24]
 1396 0324 1C308AE5 		str	r3, [sl, #28]
 1397 0328 18C080E2 		add	ip, r0, #24
 1398 032c 202080E2 		add	r2, r0, #32
 1399 0330 04009DE5 		ldr	r0, [sp, #4]
 1400              	.LVL30:
 1401 0334 043080E5 		str	r3, [r0, #4]
 1402 0338 08009DE5 		ldr	r0, [sp, #8]
 1403 033c 043080E5 		str	r3, [r0, #4]
 1404 0340 0C009DE5 		ldr	r0, [sp, #12]
 1405 0344 043080E5 		str	r3, [r0, #4]
 1406 0348 10009DE5 		ldr	r0, [sp, #16]
 1407 034c 043080E5 		str	r3, [r0, #4]
 1408 0350 14009DE5 		ldr	r0, [sp, #20]
 1409 0354 043080E5 		str	r3, [r0, #4]
 1410 0358 083080E5 		str	r3, [r0, #8]
 1411              	.LVL31:
 1412              	.L38:
 128:../reversi8.c ****     tablero[3][3] = FICHA_BLANCA;
 1413              		.loc 1 128 0
 1414 035c 0130A0E3 		mov	r3, #1
 130:../reversi8.c ****     tablero[3][4] = FICHA_NEGRA;
 1415              		.loc 1 130 0
 1416 0360 0200A0E3 		mov	r0, #2
 128:../reversi8.c ****     tablero[3][3] = FICHA_BLANCA;
 1417              		.loc 1 128 0
 1418 0364 0330CCE5 		strb	r3, [ip, #3]
 129:../reversi8.c ****     tablero[4][4] = FICHA_BLANCA;
 1419              		.loc 1 129 0
 1420 0368 0430C2E5 		strb	r3, [r2, #4]
 130:../reversi8.c ****     tablero[3][4] = FICHA_NEGRA;
 1421              		.loc 1 130 0
 1422 036c 0400CCE5 		strb	r0, [ip, #4]
 131:../reversi8.c ****     tablero[4][3] = FICHA_NEGRA;
 1423              		.loc 1 131 0
 1424 0370 0300C2E5 		strb	r0, [r2, #3]
 133:../reversi8.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1425              		.loc 1 133 0
 1426 0374 1B00C1E5 		strb	r0, [r1, #27]
 134:../reversi8.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1427              		.loc 1 134 0
 1428 0378 2400C1E5 		strb	r0, [r1, #36]
 135:../reversi8.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1429              		.loc 1 135 0
 1430 037c 1C00C1E5 		strb	r0, [r1, #28]
 136:../reversi8.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1431              		.loc 1 136 0
 1432 0380 2300C1E5 		strb	r0, [r1, #35]
 139:../reversi8.c ****     candidatas[2][2] = SI;
 1433              		.loc 1 139 0
 1434 0384 1230C1E5 		strb	r3, [r1, #18]
 140:../reversi8.c ****     candidatas[2][3] = SI;
 1435              		.loc 1 140 0
 1436 0388 1330C1E5 		strb	r3, [r1, #19]
 141:../reversi8.c ****     candidatas[2][4] = SI;
 1437              		.loc 1 141 0
 1438 038c 1430C1E5 		strb	r3, [r1, #20]
 142:../reversi8.c ****     candidatas[2][5] = SI;
 1439              		.loc 1 142 0
 1440 0390 1530C1E5 		strb	r3, [r1, #21]
 143:../reversi8.c ****     candidatas[3][2] = SI;
 1441              		.loc 1 143 0
 1442 0394 1A30C1E5 		strb	r3, [r1, #26]
 144:../reversi8.c ****     candidatas[3][5] = SI;
 1443              		.loc 1 144 0
 1444 0398 1D30C1E5 		strb	r3, [r1, #29]
 145:../reversi8.c ****     candidatas[4][2] = SI;
 1445              		.loc 1 145 0
 1446 039c 2230C1E5 		strb	r3, [r1, #34]
 146:../reversi8.c ****     candidatas[4][5] = SI;
 1447              		.loc 1 146 0
 1448 03a0 2530C1E5 		strb	r3, [r1, #37]
 147:../reversi8.c ****     candidatas[5][2] = SI;
 1449              		.loc 1 147 0
 1450 03a4 2A30C1E5 		strb	r3, [r1, #42]
 148:../reversi8.c ****     candidatas[5][3] = SI;
 1451              		.loc 1 148 0
 1452 03a8 2B30C1E5 		strb	r3, [r1, #43]
 149:../reversi8.c ****     candidatas[5][4] = SI;
 1453              		.loc 1 149 0
 1454 03ac 2C30C1E5 		strb	r3, [r1, #44]
 150:../reversi8.c ****     candidatas[5][5] = SI;
 1455              		.loc 1 150 0
 1456 03b0 2D30C1E5 		strb	r3, [r1, #45]
 151:../reversi8.c **** }
 1457              		.loc 1 151 0
 1458 03b4 1CD08DE2 		add	sp, sp, #28
 1459 03b8 F007BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 1460 03bc 1EFF2FE1 		bx	lr
 1461              	.LVL32:
 1462              	.L37:
 108:../reversi8.c ****             tablero[i][j] = CASILLA_VACIA;
 1463              		.loc 1 108 0
 1464 03c0 0030A0E3 		mov	r3, #0
 1465 03c4 0030C0E5 		strb	r3, [r0, #0]
 1466              	.LVL33:
 1467 03c8 0130C0E5 		strb	r3, [r0, #1]
 1468              	.LVL34:
 1469 03cc 0230C0E5 		strb	r3, [r0, #2]
 1470              	.LVL35:
 1471 03d0 0330C0E5 		strb	r3, [r0, #3]
 1472              	.LVL36:
 1473 03d4 0430C0E5 		strb	r3, [r0, #4]
 1474              	.LVL37:
 1475 03d8 0530C0E5 		strb	r3, [r0, #5]
 1476              	.LVL38:
 1477 03dc 0630C0E5 		strb	r3, [r0, #6]
 1478              	.LVL39:
 1479 03e0 0730C0E5 		strb	r3, [r0, #7]
 1480              	.LVL40:
 1481 03e4 0830C0E5 		strb	r3, [r0, #8]
 1482              	.LVL41:
 1483 03e8 0930C0E5 		strb	r3, [r0, #9]
 1484              	.LVL42:
 1485 03ec 0A30C0E5 		strb	r3, [r0, #10]
 1486              	.LVL43:
 1487 03f0 0B30C0E5 		strb	r3, [r0, #11]
 1488              	.LVL44:
 1489 03f4 0C30C0E5 		strb	r3, [r0, #12]
 1490              	.LVL45:
 1491 03f8 0D30C0E5 		strb	r3, [r0, #13]
 1492              	.LVL46:
 1493 03fc 0E30C0E5 		strb	r3, [r0, #14]
 1494              	.LVL47:
 1495 0400 0F30C0E5 		strb	r3, [r0, #15]
 1496              	.LVL48:
 1497 0404 1030C0E5 		strb	r3, [r0, #16]
 1498              	.LVL49:
 1499 0408 1130C0E5 		strb	r3, [r0, #17]
 1500              	.LVL50:
 1501 040c 1230C0E5 		strb	r3, [r0, #18]
 1502              	.LVL51:
 1503 0410 1330C0E5 		strb	r3, [r0, #19]
 1504              	.LVL52:
 1505 0414 1430C0E5 		strb	r3, [r0, #20]
 1506              	.LVL53:
 1507 0418 1530C0E5 		strb	r3, [r0, #21]
 1508              	.LVL54:
 1509 041c 1630C0E5 		strb	r3, [r0, #22]
 1510              	.LVL55:
 1511 0420 1730C0E5 		strb	r3, [r0, #23]
 1512              	.LVL56:
 1513 0424 1830C0E5 		strb	r3, [r0, #24]
 1514              	.LVL57:
 1515 0428 1930C0E5 		strb	r3, [r0, #25]
 1516              	.LVL58:
 1517 042c 1A30C0E5 		strb	r3, [r0, #26]
 1518              	.LVL59:
 1519 0430 1B30C0E5 		strb	r3, [r0, #27]
 1520              	.LVL60:
 1521 0434 1C30C0E5 		strb	r3, [r0, #28]
 1522              	.LVL61:
 1523 0438 1D30C0E5 		strb	r3, [r0, #29]
 1524              	.LVL62:
 1525 043c 1E30C0E5 		strb	r3, [r0, #30]
 1526              	.LVL63:
 1527 0440 1F30C0E5 		strb	r3, [r0, #31]
 1528              	.LVL64:
 1529 0444 2030C0E5 		strb	r3, [r0, #32]
 1530              	.LVL65:
 1531 0448 18C080E2 		add	ip, r0, #24
 1532 044c 2130C0E5 		strb	r3, [r0, #33]
 1533              	.LVL66:
 1534 0450 202080E2 		add	r2, r0, #32
 1535 0454 2230C0E5 		strb	r3, [r0, #34]
 1536              	.LVL67:
 1537 0458 2330C0E5 		strb	r3, [r0, #35]
 1538              	.LVL68:
 1539 045c 2430C0E5 		strb	r3, [r0, #36]
 1540              	.LVL69:
 1541 0460 2530C0E5 		strb	r3, [r0, #37]
 1542              	.LVL70:
 1543 0464 2630C0E5 		strb	r3, [r0, #38]
 1544              	.LVL71:
 1545 0468 2730C0E5 		strb	r3, [r0, #39]
 1546              	.LVL72:
 1547 046c 2830C0E5 		strb	r3, [r0, #40]
 1548              	.LVL73:
 1549 0470 2930C0E5 		strb	r3, [r0, #41]
 1550              	.LVL74:
 1551 0474 2A30C0E5 		strb	r3, [r0, #42]
 1552              	.LVL75:
 1553 0478 2B30C0E5 		strb	r3, [r0, #43]
 1554              	.LVL76:
 1555 047c 2C30C0E5 		strb	r3, [r0, #44]
 1556              	.LVL77:
 1557 0480 2D30C0E5 		strb	r3, [r0, #45]
 1558              	.LVL78:
 1559 0484 2E30C0E5 		strb	r3, [r0, #46]
 1560              	.LVL79:
 1561 0488 2F30C0E5 		strb	r3, [r0, #47]
 1562              	.LVL80:
 1563 048c 3030C0E5 		strb	r3, [r0, #48]
 1564              	.LVL81:
 1565 0490 3130C0E5 		strb	r3, [r0, #49]
 1566              	.LVL82:
 1567 0494 3230C0E5 		strb	r3, [r0, #50]
 1568              	.LVL83:
 1569 0498 3330C0E5 		strb	r3, [r0, #51]
 1570              	.LVL84:
 1571 049c 3430C0E5 		strb	r3, [r0, #52]
 1572              	.LVL85:
 1573 04a0 3530C0E5 		strb	r3, [r0, #53]
 1574              	.LVL86:
 1575 04a4 3630C0E5 		strb	r3, [r0, #54]
 1576              	.LVL87:
 1577 04a8 3730C0E5 		strb	r3, [r0, #55]
 1578              	.LVL88:
 1579 04ac 3830C0E5 		strb	r3, [r0, #56]
 1580              	.LVL89:
 1581 04b0 3930C0E5 		strb	r3, [r0, #57]
 1582              	.LVL90:
 1583 04b4 3A30C0E5 		strb	r3, [r0, #58]
 1584              	.LVL91:
 1585 04b8 3B30C0E5 		strb	r3, [r0, #59]
 1586              	.LVL92:
 1587 04bc 3C30C0E5 		strb	r3, [r0, #60]
 1588              	.LVL93:
 1589 04c0 3D30C0E5 		strb	r3, [r0, #61]
 1590              	.LVL94:
 1591 04c4 3E30C0E5 		strb	r3, [r0, #62]
 1592              	.LVL95:
 1593 04c8 3F30C0E5 		strb	r3, [r0, #63]
 1594              	.LVL96:
 1595 04cc A2FFFFEA 		b	.L38
 1596              		.cfi_endproc
 1597              	.LFE0:
 1599              		.align	2
 1600              		.global	esperar_mov
 1602              	esperar_mov:
 1603              	.LFB1:
 159:../reversi8.c **** {
 1604              		.loc 1 159 0
 1605              		.cfi_startproc
 1606              		@ Function supports interworking.
 1607              		@ args = 0, pretend = 0, frame = 0
 1608              		@ frame_needed = 1, uses_anonymous_args = 0
 1609              	.LVL97:
 1610 04d0 0DC0A0E1 		mov	ip, sp
 1611              	.LCFI4:
 1612              		.cfi_def_cfa_register 12
 1613 04d4 18D82DE9 		stmfd	sp!, {r3, r4, fp, ip, lr, pc}
 1614 04d8 0040A0E1 		mov	r4, r0
 1615              		.cfi_offset 14, -8
 1616              		.cfi_offset 13, -12
 1617              		.cfi_offset 11, -16
 1618              		.cfi_offset 4, -20
 1619              		.cfi_offset 3, -24
 1620 04dc 04B04CE2 		sub	fp, ip, #4
 1621              	.LCFI5:
 1622              		.cfi_def_cfa 11, 4
 161:../reversi8.c **** 	autoasignar();
 1623              		.loc 1 161 0
 1624 04e0 FEFFFFEB 		bl	autoasignar
 1625              	.LVL98:
 1626 04e4 0030D4E5 		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1627 04e8 000053E3 		cmp	r3, #0
 1628 04ec 0000001A 		bne	.L40
 1629              	.L42:
 1630 04f0 FEFFFFEA 		b	.L42
 1631              	.L40:
 164:../reversi8.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 1632              		.loc 1 164 0
 1633 04f4 0000A0E3 		mov	r0, #0
 1634 04f8 0000C4E5 		strb	r0, [r4, #0]
 165:../reversi8.c **** }
 1635              		.loc 1 165 0
 1636 04fc 14D04BE2 		sub	sp, fp, #20
 1637 0500 18689DE8 		ldmfd	sp, {r3, r4, fp, sp, lr}
 1638 0504 1EFF2FE1 		bx	lr
 1639              		.cfi_endproc
 1640              	.LFE1:
 1642              		.align	2
 1643              		.global	ficha_valida
 1645              	ficha_valida:
 1646              	.LFB3:
 194:../reversi8.c **** {
 1647              		.loc 1 194 0
 1648              		.cfi_startproc
 1649              		@ Function supports interworking.
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              		@ link register save eliminated.
 1653              	.LVL99:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1654              		.loc 1 202 0
 1655 0508 070052E3 		cmp	r2, #7
 1656 050c 07005193 		cmpls	r1, #7
 1657 0510 0300008A 		bhi	.L44
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1658              		.loc 1 202 0 is_stmt 0 discriminator 1
 1659 0514 811180E0 		add	r1, r0, r1, asl #3
 1660              	.LVL100:
 1661 0518 0200D1E7 		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 1662              	.LVL101:
 1663 051c 000050E3 		cmp	r0, #0
 1664 0520 0200001A 		bne	.L46
 1665              	.L44:
 209:../reversi8.c ****         *posicion_valida = 0;
 1666              		.loc 1 209 0 is_stmt 1
 1667 0524 0000A0E3 		mov	r0, #0
 1668 0528 000083E5 		str	r0, [r3, #0]
 1669              	.LVL102:
 213:../reversi8.c **** }
 1670              		.loc 1 213 0
 1671 052c 1EFF2FE1 		bx	lr
 1672              	.LVL103:
 1673              	.L46:
 204:../reversi8.c ****         *posicion_valida = 1;
 1674              		.loc 1 204 0
 1675 0530 01C0A0E3 		mov	ip, #1
 1676 0534 00C083E5 		str	ip, [r3, #0]
 205:../reversi8.c ****         ficha = tablero[f][c];
 1677              		.loc 1 205 0
 1678 0538 0200D1E7 		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 1679              	.LVL104:
 1680 053c 1EFF2FE1 		bx	lr
 1681              		.cfi_endproc
 1682              	.LFE3:
 1684              		.align	2
 1685              		.global	patron_volteo
 1687              	patron_volteo:
 1688              	.LFB4:
 228:../reversi8.c **** {
 1689              		.loc 1 228 0
 1690              		.cfi_startproc
 1691              		@ Function supports interworking.
 1692              		@ args = 12, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              		@ link register save eliminated.
 1695              	.LVL105:
 1696 0540 F0012DE9 		stmfd	sp!, {r4, r5, r6, r7, r8}
 1697              	.LCFI6:
 1698              		.cfi_def_cfa_offset 20
 228:../reversi8.c **** {
 1699              		.loc 1 228 0
 1700 0544 1440DDE5 		ldrb	r4, [sp, #20]	@ zero_extendqisi2
 1701              		.cfi_offset 8, -4
 1702              		.cfi_offset 7, -8
 1703              		.cfi_offset 6, -12
 1704              		.cfi_offset 5, -16
 1705              		.cfi_offset 4, -20
 1706 0548 18C0DDE5 		ldrb	ip, [sp, #24]	@ zero_extendqisi2
 232:../reversi8.c **** 	FA = FA + SF;
 1707              		.loc 1 232 0
 1708 054c 022084E0 		add	r2, r4, r2
 1709              	.LVL106:
 233:../reversi8.c **** 	CA = CA + SC;
 1710              		.loc 1 233 0
 1711 0550 03308CE0 		add	r3, ip, r3
 1712              	.LVL107:
 232:../reversi8.c **** 	FA = FA + SF;
 1713              		.loc 1 232 0
 1714 0554 FF2002E2 		and	r2, r2, #255
 1715              	.LVL108:
 233:../reversi8.c **** 	CA = CA + SC;
 1716              		.loc 1 233 0
 1717 0558 FF3003E2 		and	r3, r3, #255
 1718              	.LVL109:
 1719              	.LBB52:
 1720              	.LBB53:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1721              		.loc 1 202 0
 1722 055c 070053E3 		cmp	r3, #7
 1723 0560 07005293 		cmpls	r2, #7
 1724 0564 0050A083 		movhi	r5, #0
 1725 0568 0150A093 		movls	r5, #1
 1726              	.LVL110:
 1727              	.LBE53:
 1728              	.LBE52:
 228:../reversi8.c **** {
 1729              		.loc 1 228 0
 1730 056c 1C70DDE5 		ldrb	r7, [sp, #28]	@ zero_extendqisi2
 1731              	.LBB55:
 1732              	.LBB54:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1733              		.loc 1 202 0
 1734 0570 1600008A 		bhi	.L55
 1735              	.LVL111:
 1736              	.L58:
 1737              	.LBE54:
 1738              	.LBE55:
 1739              	.LBB56:
 1740              	.LBB59:
 1741 0574 825180E0 		add	r5, r0, r2, asl #3
 1742 0578 0360D5E7 		ldrb	r6, [r5, r3]	@ zero_extendqisi2
 1743 057c 000056E3 		cmp	r6, #0
 204:../reversi8.c ****         *posicion_valida = 1;
 1744              		.loc 1 204 0
 1745 0580 0650A001 		moveq	r5, r6
 1746 0584 0150A013 		movne	r5, #1
 1747              	.L50:
 1748              	.LBE59:
 1749              	.LBE56:
 235:../reversi8.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1750              		.loc 1 235 0 discriminator 1
 1751 0588 FF5005E2 		and	r5, r5, #255
 1752 058c 070056E1 		cmp	r6, r7
 1753 0590 0080A003 		moveq	r8, #0
 1754 0594 01800512 		andne	r8, r5, #1
 1755              	.LBB63:
 1756              	.LBB60:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1757              		.loc 1 202 0 discriminator 1
 1758 0598 042082E0 		add	r2, r2, r4
 1759 059c 0C3083E0 		add	r3, r3, ip
 1760              	.LBE60:
 1761              	.LBE63:
 235:../reversi8.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1762              		.loc 1 235 0 discriminator 1
 1763 05a0 000058E3 		cmp	r8, #0
 1764              	.LBB64:
 1765              	.LBB58:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1766              		.loc 1 202 0 discriminator 1
 1767 05a4 FF2002E2 		and	r2, r2, #255
 1768 05a8 FF3003E2 		and	r3, r3, #255
 1769              	.LVL112:
 1770              	.LBE58:
 1771              	.LBE64:
 235:../reversi8.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1772              		.loc 1 235 0 discriminator 1
 1773 05ac 0900000A 		beq	.L59
 1774              	.LVL113:
 241:../reversi8.c **** 		*longitud = *longitud + 1;
 1775              		.loc 1 241 0
 1776 05b0 006091E5 		ldr	r6, [r1, #0]
 1777              	.LVL114:
 1778              	.LBB65:
 1779              	.LBB61:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1780              		.loc 1 202 0
 1781 05b4 070053E3 		cmp	r3, #7
 1782 05b8 07005293 		cmpls	r2, #7
 1783              	.LBE61:
 1784              	.LBE65:
 241:../reversi8.c **** 		*longitud = *longitud + 1;
 1785              		.loc 1 241 0
 1786 05bc 018086E2 		add	r8, r6, #1
 1787              	.LBB66:
 1788              	.LBB57:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1789              		.loc 1 202 0
 1790 05c0 0050A083 		movhi	r5, #0
 1791 05c4 0150A093 		movls	r5, #1
 1792              	.LBE57:
 1793              	.LBE66:
 241:../reversi8.c **** 		*longitud = *longitud + 1;
 1794              		.loc 1 241 0
 1795 05c8 008081E5 		str	r8, [r1, #0]
 1796              	.LVL115:
 1797              	.LBB67:
 1798              	.LBB62:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1799              		.loc 1 202 0
 1800 05cc E8FFFF9A 		bls	.L58
 1801              	.LVL116:
 1802              	.L55:
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 1803              		.loc 1 210 0
 1804 05d0 0560A0E1 		mov	r6, r5
 1805 05d4 EBFFFFEA 		b	.L50
 1806              	.LVL117:
 1807              	.L59:
 1808              	.LBE62:
 1809              	.LBE67:
 246:../reversi8.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0)) {
 1810              		.loc 1 246 0
 1811 05d8 060057E1 		cmp	r7, r6
 1812 05dc 0050A013 		movne	r5, #0
 1813 05e0 01500502 		andeq	r5, r5, #1
 1814 05e4 000055E3 		cmp	r5, #0
 251:../reversi8.c **** 		return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1815              		.loc 1 251 0
 1816 05e8 0500A001 		moveq	r0, r5
 1817              	.LVL118:
 246:../reversi8.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0)) {
 1818              		.loc 1 246 0
 1819 05ec 0300000A 		beq	.L52
 227:../reversi8.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 1820              		.loc 1 227 0 discriminator 1
 1821 05f0 000091E5 		ldr	r0, [r1, #0]
 1822 05f4 000050E3 		cmp	r0, #0
 1823 05f8 0000A0D3 		movle	r0, #0
 1824 05fc 0100A0C3 		movgt	r0, #1
 1825              	.L52:
 253:../reversi8.c **** }
 1826              		.loc 1 253 0
 1827 0600 F001BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8}
 1828 0604 1EFF2FE1 		bx	lr
 1829              		.cfi_endproc
 1830              	.LFE4:
 1832              		.align	2
 1833              		.global	voltear
 1835              	voltear:
 1836              	.LFB5:
 262:../reversi8.c **** {
 1837              		.loc 1 262 0
 1838              		.cfi_startproc
 1839              		@ Function supports interworking.
 1840              		@ args = 12, pretend = 0, frame = 24
 1841              		@ frame_needed = 0, uses_anonymous_args = 0
 1842              		@ link register save eliminated.
 1843              	.LVL119:
 1844 0608 F0072DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 1845              	.LCFI7:
 1846              		.cfi_def_cfa_offset 28
 1847 060c 1CD04DE2 		sub	sp, sp, #28
 1848              	.LCFI8:
 1849              		.cfi_def_cfa_offset 56
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1850              		.loc 1 265 0
 1851 0610 3C609DE5 		ldr	r6, [sp, #60]
 1852              		.cfi_offset 10, -4
 1853              		.cfi_offset 9, -8
 1854              		.cfi_offset 8, -12
 1855              		.cfi_offset 7, -16
 1856              		.cfi_offset 6, -20
 1857              		.cfi_offset 5, -24
 1858              		.cfi_offset 4, -28
 1859 0614 000056E3 		cmp	r6, #0
 262:../reversi8.c **** {
 1860              		.loc 1 262 0
 1861 0618 3850DDE5 		ldrb	r5, [sp, #56]	@ zero_extendqisi2
 1862 061c 4040DDE5 		ldrb	r4, [sp, #64]	@ zero_extendqisi2
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1863              		.loc 1 265 0
 1864 0620 4B0000DA 		ble	.L60
 267:../reversi8.c ****         FA = FA + SF;
 1865              		.loc 1 267 0 discriminator 2
 1866 0624 031081E0 		add	r1, r1, r3
 1867              	.LVL120:
 1868 0628 0680A0E1 		mov	r8, r6
 1869 062c FF1001E2 		and	r1, r1, #255
 268:../reversi8.c ****         CA = CA + SC;
 1870              		.loc 1 268 0 discriminator 2
 1871 0630 052082E0 		add	r2, r2, r5
 1872              	.LVL121:
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1873              		.loc 1 265 0 discriminator 2
 1874 0634 01C0A0E3 		mov	ip, #1
 1875 0638 016046E2 		sub	r6, r6, #1
 268:../reversi8.c ****         CA = CA + SC;
 1876              		.loc 1 268 0 discriminator 2
 1877 063c FF2002E2 		and	r2, r2, #255
 1878              	.LVL122:
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1879              		.loc 1 269 0 discriminator 2
 1880 0640 817180E0 		add	r7, r0, r1, asl #3
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1881              		.loc 1 265 0 discriminator 2
 1882 0644 08005CE1 		cmp	ip, r8
 1883 0648 036006E2 		and	r6, r6, #3
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1884              		.loc 1 269 0 discriminator 2
 1885 064c 0240C7E7 		strb	r4, [r7, r2]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1886              		.loc 1 265 0 discriminator 2
 1887 0650 3F00000A 		beq	.L60
 1888 0654 000056E3 		cmp	r6, #0
 1889 0658 1B00000A 		beq	.L62
 1890 065c 010056E3 		cmp	r6, #1
 1891 0660 0F00000A 		beq	.L75
 1892 0664 020056E3 		cmp	r6, #2
 1893 0668 0600000A 		beq	.L76
 267:../reversi8.c ****         FA = FA + SF;
 1894              		.loc 1 267 0
 1895 066c 031081E0 		add	r1, r1, r3
 1896 0670 FF1001E2 		and	r1, r1, #255
 268:../reversi8.c ****         CA = CA + SC;
 1897              		.loc 1 268 0
 1898 0674 056082E0 		add	r6, r2, r5
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1899              		.loc 1 269 0
 1900 0678 81C180E0 		add	ip, r0, r1, asl #3
 268:../reversi8.c ****         CA = CA + SC;
 1901              		.loc 1 268 0
 1902 067c FF2006E2 		and	r2, r6, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1903              		.loc 1 269 0
 1904 0680 0240CCE7 		strb	r4, [ip, r2]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1905              		.loc 1 265 0
 1906 0684 02C0A0E3 		mov	ip, #2
 1907              	.L76:
 267:../reversi8.c ****         FA = FA + SF;
 1908              		.loc 1 267 0
 1909 0688 036081E0 		add	r6, r1, r3
 1910 068c FF1006E2 		and	r1, r6, #255
 268:../reversi8.c ****         CA = CA + SC;
 1911              		.loc 1 268 0
 1912 0690 052082E0 		add	r2, r2, r5
 1913 0694 FF2002E2 		and	r2, r2, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1914              		.loc 1 269 0
 1915 0698 817180E0 		add	r7, r0, r1, asl #3
 1916 069c 0240C7E7 		strb	r4, [r7, r2]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1917              		.loc 1 265 0
 1918 06a0 01C08CE2 		add	ip, ip, #1
 1919              	.L75:
 268:../reversi8.c ****         CA = CA + SC;
 1920              		.loc 1 268 0
 1921 06a4 057082E0 		add	r7, r2, r5
 1922 06a8 FF2007E2 		and	r2, r7, #255
 267:../reversi8.c ****         FA = FA + SF;
 1923              		.loc 1 267 0
 1924 06ac 031081E0 		add	r1, r1, r3
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1925              		.loc 1 265 0
 1926 06b0 3C709DE5 		ldr	r7, [sp, #60]
 267:../reversi8.c ****         FA = FA + SF;
 1927              		.loc 1 267 0
 1928 06b4 FF1001E2 		and	r1, r1, #255
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1929              		.loc 1 265 0
 1930 06b8 01C08CE2 		add	ip, ip, #1
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1931              		.loc 1 269 0
 1932 06bc 816180E0 		add	r6, r0, r1, asl #3
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1933              		.loc 1 265 0
 1934 06c0 07005CE1 		cmp	ip, r7
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1935              		.loc 1 269 0
 1936 06c4 0240C6E7 		strb	r4, [r6, r2]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1937              		.loc 1 265 0
 1938 06c8 2100000A 		beq	.L60
 1939              	.L62:
 268:../reversi8.c ****         CA = CA + SC;
 1940              		.loc 1 268 0 discriminator 2
 1941 06cc 057082E0 		add	r7, r2, r5
 1942 06d0 FF7007E2 		and	r7, r7, #255
 267:../reversi8.c ****         FA = FA + SF;
 1943              		.loc 1 267 0 discriminator 2
 1944 06d4 03A081E0 		add	sl, r1, r3
 1945 06d8 FFA00AE2 		and	sl, sl, #255
 268:../reversi8.c ****         CA = CA + SC;
 1946              		.loc 1 268 0 discriminator 2
 1947 06dc 051087E0 		add	r1, r7, r5
 1948 06e0 FF6001E2 		and	r6, r1, #255
 267:../reversi8.c ****         FA = FA + SF;
 1949              		.loc 1 267 0 discriminator 2
 1950 06e4 03808AE0 		add	r8, sl, r3
 1951 06e8 FF8008E2 		and	r8, r8, #255
 268:../reversi8.c ****         CA = CA + SC;
 1952              		.loc 1 268 0 discriminator 2
 1953 06ec 059086E0 		add	r9, r6, r5
 267:../reversi8.c ****         FA = FA + SF;
 1954              		.loc 1 267 0 discriminator 2
 1955 06f0 032088E0 		add	r2, r8, r3
 268:../reversi8.c ****         CA = CA + SC;
 1956              		.loc 1 268 0 discriminator 2
 1957 06f4 FF9009E2 		and	r9, r9, #255
 1958 06f8 04608DE5 		str	r6, [sp, #4]
 267:../reversi8.c ****         FA = FA + SF;
 1959              		.loc 1 267 0 discriminator 2
 1960 06fc FF2002E2 		and	r2, r2, #255
 268:../reversi8.c ****         CA = CA + SC;
 1961              		.loc 1 268 0 discriminator 2
 1962 0700 056089E0 		add	r6, r9, r5
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1963              		.loc 1 269 0 discriminator 2
 1964 0704 8AA180E0 		add	sl, r0, sl, asl #3
 1965 0708 0CA08DE5 		str	sl, [sp, #12]
 267:../reversi8.c ****         FA = FA + SF;
 1966              		.loc 1 267 0 discriminator 2
 1967 070c 031082E0 		add	r1, r2, r3
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1968              		.loc 1 269 0 discriminator 2
 1969 0710 82A180E0 		add	sl, r0, r2, asl #3
 268:../reversi8.c ****         CA = CA + SC;
 1970              		.loc 1 268 0 discriminator 2
 1971 0714 FF2006E2 		and	r2, r6, #255
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1972              		.loc 1 265 0 discriminator 2
 1973 0718 3C609DE5 		ldr	r6, [sp, #60]
 1974 071c 04C08CE2 		add	ip, ip, #4
 1975 0720 06005CE1 		cmp	ip, r6
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1976              		.loc 1 269 0 discriminator 2
 1977 0724 0C609DE5 		ldr	r6, [sp, #12]
 1978 0728 888180E0 		add	r8, r0, r8, asl #3
 1979 072c 10808DE5 		str	r8, [sp, #16]
 1980 0730 0740C6E7 		strb	r4, [r6, r7]
 1981 0734 10609DE5 		ldr	r6, [sp, #16]
 1982 0738 04709DE5 		ldr	r7, [sp, #4]
 267:../reversi8.c ****         FA = FA + SF;
 1983              		.loc 1 267 0 discriminator 2
 1984 073c FF1001E2 		and	r1, r1, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 1985              		.loc 1 269 0 discriminator 2
 1986 0740 818180E0 		add	r8, r0, r1, asl #3
 1987 0744 0740C6E7 		strb	r4, [r6, r7]
 1988 0748 0940CAE7 		strb	r4, [sl, r9]
 1989 074c 0240C8E7 		strb	r4, [r8, r2]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 1990              		.loc 1 265 0 discriminator 2
 1991 0750 DDFFFF1A 		bne	.L62
 1992              	.L60:
 271:../reversi8.c **** }
 1993              		.loc 1 271 0
 1994 0754 1CD08DE2 		add	sp, sp, #28
 1995 0758 F007BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 1996 075c 1EFF2FE1 		bx	lr
 1997              		.cfi_endproc
 1998              	.LFE5:
 2000              		.align	2
 2001              		.global	actualizar_tablero
 2003              	actualizar_tablero:
 2004              	.LFB6:
 281:../reversi8.c **** {
 2005              		.loc 1 281 0
 2006              		.cfi_startproc
 2007              		@ Function supports interworking.
 2008              		@ args = 0, pretend = 0, frame = 40
 2009              		@ frame_needed = 1, uses_anonymous_args = 0
 2010              	.LVL123:
 2011 0760 0DC0A0E1 		mov	ip, sp
 2012              	.LCFI9:
 2013              		.cfi_def_cfa_register 12
 2014 0764 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 2015 0768 04B04CE2 		sub	fp, ip, #4
 2016              		.cfi_offset 14, -8
 2017              		.cfi_offset 13, -12
 2018              		.cfi_offset 11, -16
 2019              		.cfi_offset 10, -20
 2020              		.cfi_offset 9, -24
 2021              		.cfi_offset 8, -28
 2022              		.cfi_offset 7, -32
 2023              		.cfi_offset 6, -36
 2024              		.cfi_offset 5, -40
 2025              		.cfi_offset 4, -44
 2026              	.LCFI10:
 2027              		.cfi_def_cfa 11, 4
 2028 076c 2CD04DE2 		sub	sp, sp, #44
 284:../reversi8.c ****     volatile int tiempo = 0;
 2029              		.loc 1 284 0
 2030 0770 0060A0E3 		mov	r6, #0
 281:../reversi8.c **** {
 2031              		.loc 1 281 0
 2032 0774 38100BE5 		str	r1, [fp, #-56]
 2033 0778 3C200BE5 		str	r2, [fp, #-60]
 2034 077c 0340A0E1 		mov	r4, r3
 2035 0780 0050A0E1 		mov	r5, r0
 284:../reversi8.c ****     volatile int tiempo = 0;
 2036              		.loc 1 284 0
 2037 0784 30600BE5 		str	r6, [fp, #-48]
 2038              	.LVL124:
 286:../reversi8.c ****     timer2_inicializar();
 2039              		.loc 1 286 0
 2040 0788 FEFFFFEB 		bl	timer2_inicializar
 2041              	.LVL125:
 287:../reversi8.c ****     timer2_empezar();
 2042              		.loc 1 287 0
 2043 078c FEFFFFEB 		bl	timer2_empezar
 2044              	.LVL126:
 288:../reversi8.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 2045              		.loc 1 288 0
 2046 0790 0600A0E1 		mov	r0, r6
 2047              	.LVL127:
 2048              	.L86:
 290:../reversi8.c ****         SF = vSF[i];
 2049              		.loc 1 290 0
 2050 0794 30829FE5 		ldr	r8, .L108
 291:../reversi8.c ****         SC = vSC[i];
 2051              		.loc 1 291 0
 2052 0798 082088E2 		add	r2, r8, #8
 2053              	.LBB76:
 2054              	.LBB77:
 233:../reversi8.c **** 	CA = CA + SC;
 2055              		.loc 1 233 0
 2056 079c 3C701BE5 		ldr	r7, [fp, #-60]
 2057              	.LBE77:
 2058              	.LBE76:
 290:../reversi8.c ****         SF = vSF[i];
 2059              		.loc 1 290 0
 2060 07a0 0010D8E7 		ldrb	r1, [r8, r0]	@ zero_extendqisi2
 2061              	.LVL128:
 291:../reversi8.c ****         SC = vSC[i];
 2062              		.loc 1 291 0
 2063 07a4 0020D2E7 		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 2064              	.LVL129:
 2065              	.LBB85:
 2066              	.LBB84:
 232:../reversi8.c **** 	FA = FA + SF;
 2067              		.loc 1 232 0
 2068 07a8 38301BE5 		ldr	r3, [fp, #-56]
 233:../reversi8.c **** 	CA = CA + SC;
 2069              		.loc 1 233 0
 2070 07ac 02C087E0 		add	ip, r7, r2
 232:../reversi8.c **** 	FA = FA + SF;
 2071              		.loc 1 232 0
 2072 07b0 01E083E0 		add	lr, r3, r1
 2073 07b4 FFE00EE2 		and	lr, lr, #255
 2074              	.LVL130:
 233:../reversi8.c **** 	CA = CA + SC;
 2075              		.loc 1 233 0
 2076 07b8 FFC00CE2 		and	ip, ip, #255
 2077              	.LVL131:
 2078              	.LBB78:
 2079              	.LBB79:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2080              		.loc 1 202 0
 2081 07bc 07005CE3 		cmp	ip, #7
 2082 07c0 07005E93 		cmpls	lr, #7
 2083 07c4 0070A083 		movhi	r7, #0
 2084 07c8 0170A093 		movls	r7, #1
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 2085              		.loc 1 210 0
 2086 07cc 0760A081 		movhi	r6, r7
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2087              		.loc 1 202 0
 2088 07d0 0400008A 		bhi	.L80
 2089 07d4 8E6185E0 		add	r6, r5, lr, asl #3
 2090 07d8 0C60D6E7 		ldrb	r6, [r6, ip]	@ zero_extendqisi2
 204:../reversi8.c ****         *posicion_valida = 1;
 2091              		.loc 1 204 0
 2092 07dc 000056E3 		cmp	r6, #0
 2093 07e0 0670A001 		moveq	r7, r6
 2094 07e4 0170A013 		movne	r7, #1
 2095              	.L80:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2096              		.loc 1 202 0
 2097 07e8 01E08EE0 		add	lr, lr, r1
 2098              	.LVL132:
 2099 07ec 02C08CE0 		add	ip, ip, r2
 2100              	.LVL133:
 2101 07f0 FFE00EE2 		and	lr, lr, #255
 2102 07f4 FFC00CE2 		and	ip, ip, #255
 2103              	.LBE79:
 2104              	.LBE78:
 2105              	.LBB80:
 2106              	.LBB81:
 204:../reversi8.c ****         *posicion_valida = 1;
 2107              		.loc 1 204 0
 2108 07f8 0030A0E3 		mov	r3, #0
 2109 07fc 0F0000EA 		b	.L81
 2110              	.LVL134:
 2111              	.L83:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2112              		.loc 1 202 0
 2113 0800 07005CE3 		cmp	ip, #7
 2114 0804 07005E93 		cmpls	lr, #7
 2115 0808 0070A083 		movhi	r7, #0
 2116 080c 0170A093 		movls	r7, #1
 2117              	.LBE81:
 2118              	.LBE80:
 241:../reversi8.c **** 		*longitud = *longitud + 1;
 2119              		.loc 1 241 0
 2120 0810 013083E2 		add	r3, r3, #1
 2121              	.LVL135:
 2122              	.LBB83:
 2123              	.LBB82:
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 2124              		.loc 1 210 0
 2125 0814 0760A081 		movhi	r6, r7
 2126              	.LVL136:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2127              		.loc 1 202 0
 2128 0818 0400008A 		bhi	.L82
 2129 081c 8E7185E0 		add	r7, r5, lr, asl #3
 2130 0820 0C60D7E7 		ldrb	r6, [r7, ip]	@ zero_extendqisi2
 204:../reversi8.c ****         *posicion_valida = 1;
 2131              		.loc 1 204 0
 2132 0824 000056E3 		cmp	r6, #0
 2133 0828 0670A001 		moveq	r7, r6
 2134 082c 0170A013 		movne	r7, #1
 2135              	.L82:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2136              		.loc 1 202 0
 2137 0830 01E08EE0 		add	lr, lr, r1
 2138              	.LVL137:
 2139 0834 02808CE0 		add	r8, ip, r2
 2140 0838 FFE00EE2 		and	lr, lr, #255
 2141 083c FFC008E2 		and	ip, r8, #255
 2142              	.LVL138:
 2143              	.L81:
 2144              	.LBE82:
 2145              	.LBE83:
 235:../reversi8.c **** 	while ((posicion_valida == 1) && (casilla != color))
 2146              		.loc 1 235 0
 2147 0840 FF7007E2 		and	r7, r7, #255
 2148              	.LVL139:
 2149 0844 060054E1 		cmp	r4, r6
 2150 0848 0080A003 		moveq	r8, #0
 2151 084c 01800712 		andne	r8, r7, #1
 2152 0850 000058E3 		cmp	r8, #0
 2153 0854 E9FFFF1A 		bne	.L83
 246:../reversi8.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0)) {
 2154              		.loc 1 246 0
 2155 0858 060054E1 		cmp	r4, r6
 2156 085c 0070A013 		movne	r7, #0
 2157 0860 01700702 		andeq	r7, r7, #1
 2158 0864 000057E3 		cmp	r7, #0
 2159 0868 4E00000A 		beq	.L84
 2160 086c 000053E3 		cmp	r3, #0
 2161 0870 4C00000A 		beq	.L84
 2162              	.LBE84:
 2163              	.LBE85:
 2164              	.LBB86:
 2165              	.LBB87:
 267:../reversi8.c ****         FA = FA + SF;
 2166              		.loc 1 267 0
 2167 0874 3C804BE2 		sub	r8, fp, #60
 2168 0878 004198E8 		ldmia	r8, {r8, lr}	@ phole ldm
 2169 087c 01C08EE0 		add	ip, lr, r1
 268:../reversi8.c ****         CA = CA + SC;
 2170              		.loc 1 268 0
 2171 0880 027088E0 		add	r7, r8, r2
 267:../reversi8.c ****         FA = FA + SF;
 2172              		.loc 1 267 0
 2173 0884 FFC00CE2 		and	ip, ip, #255
 2174              	.LVL140:
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2175              		.loc 1 265 0
 2176 0888 01E0A0E3 		mov	lr, #1
 268:../reversi8.c ****         CA = CA + SC;
 2177              		.loc 1 268 0
 2178 088c FF8007E2 		and	r8, r7, #255
 2179              	.LVL141:
 2180 0890 016043E2 		sub	r6, r3, #1
 2181              	.LVL142:
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2182              		.loc 1 269 0
 2183 0894 8C7185E0 		add	r7, r5, ip, asl #3
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2184              		.loc 1 265 0
 2185 0898 03005EE1 		cmp	lr, r3
 2186 089c 036006E2 		and	r6, r6, #3
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2187              		.loc 1 269 0
 2188 08a0 0840C7E7 		strb	r4, [r7, r8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2189              		.loc 1 265 0
 2190 08a4 3F00000A 		beq	.L84
 2191 08a8 000056E3 		cmp	r6, #0
 2192 08ac 1A00000A 		beq	.L107
 2193 08b0 010056E3 		cmp	r6, #1
 2194 08b4 0F00000A 		beq	.L104
 2195 08b8 020056E3 		cmp	r6, #2
 2196 08bc 0600000A 		beq	.L105
 267:../reversi8.c ****         FA = FA + SF;
 2197              		.loc 1 267 0
 2198 08c0 01C08CE0 		add	ip, ip, r1
 2199 08c4 FFC00CE2 		and	ip, ip, #255
 2200              	.LVL143:
 268:../reversi8.c ****         CA = CA + SC;
 2201              		.loc 1 268 0
 2202 08c8 028088E0 		add	r8, r8, r2
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2203              		.loc 1 269 0
 2204 08cc 8CE185E0 		add	lr, r5, ip, asl #3
 268:../reversi8.c ****         CA = CA + SC;
 2205              		.loc 1 268 0
 2206 08d0 FF8008E2 		and	r8, r8, #255
 2207              	.LVL144:
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2208              		.loc 1 269 0
 2209 08d4 0840CEE7 		strb	r4, [lr, r8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2210              		.loc 1 265 0
 2211 08d8 02E0A0E3 		mov	lr, #2
 2212              	.L105:
 267:../reversi8.c ****         FA = FA + SF;
 2213              		.loc 1 267 0
 2214 08dc 01C08CE0 		add	ip, ip, r1
 2215 08e0 FFC00CE2 		and	ip, ip, #255
 268:../reversi8.c ****         CA = CA + SC;
 2216              		.loc 1 268 0
 2217 08e4 028088E0 		add	r8, r8, r2
 2218 08e8 FF8008E2 		and	r8, r8, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2219              		.loc 1 269 0
 2220 08ec 8C6185E0 		add	r6, r5, ip, asl #3
 2221 08f0 0840C6E7 		strb	r4, [r6, r8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2222              		.loc 1 265 0
 2223 08f4 01E08EE2 		add	lr, lr, #1
 2224              	.L104:
 267:../reversi8.c ****         FA = FA + SF;
 2225              		.loc 1 267 0
 2226 08f8 01C08CE0 		add	ip, ip, r1
 268:../reversi8.c ****         CA = CA + SC;
 2227              		.loc 1 268 0
 2228 08fc 026088E0 		add	r6, r8, r2
 267:../reversi8.c ****         FA = FA + SF;
 2229              		.loc 1 267 0
 2230 0900 FFC00CE2 		and	ip, ip, #255
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2231              		.loc 1 265 0
 2232 0904 01E08EE2 		add	lr, lr, #1
 268:../reversi8.c ****         CA = CA + SC;
 2233              		.loc 1 268 0
 2234 0908 FF8006E2 		and	r8, r6, #255
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2235              		.loc 1 265 0
 2236 090c 03005EE1 		cmp	lr, r3
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2237              		.loc 1 269 0
 2238 0910 8C6185E0 		add	r6, r5, ip, asl #3
 2239 0914 0840C6E7 		strb	r4, [r6, r8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2240              		.loc 1 265 0
 2241 0918 2200000A 		beq	.L84
 2242              	.L107:
 2243 091c 48000BE5 		str	r0, [fp, #-72]
 2244 0920 44300BE5 		str	r3, [fp, #-68]
 2245              	.LVL145:
 2246              	.L85:
 267:../reversi8.c ****         FA = FA + SF;
 2247              		.loc 1 267 0
 2248 0924 01A08CE0 		add	sl, ip, r1
 2249 0928 FF900AE2 		and	r9, sl, #255
 2250 092c 017089E0 		add	r7, r9, r1
 2251 0930 FFA007E2 		and	sl, r7, #255
 268:../reversi8.c ****         CA = CA + SC;
 2252              		.loc 1 268 0
 2253 0934 026088E0 		add	r6, r8, r2
 267:../reversi8.c ****         FA = FA + SF;
 2254              		.loc 1 267 0
 2255 0938 01808AE0 		add	r8, sl, r1
 2256 093c FF7008E2 		and	r7, r8, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2257              		.loc 1 269 0
 2258 0940 899185E0 		add	r9, r5, r9, asl #3
 2259 0944 40900BE5 		str	r9, [fp, #-64]
 268:../reversi8.c ****         CA = CA + SC;
 2260              		.loc 1 268 0
 2261 0948 FF6006E2 		and	r6, r6, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2262              		.loc 1 269 0
 2263 094c 879185E0 		add	r9, r5, r7, asl #3
 267:../reversi8.c ****         FA = FA + SF;
 2264              		.loc 1 267 0
 2265 0950 01C087E0 		add	ip, r7, r1
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2266              		.loc 1 265 0
 2267 0954 44701BE5 		ldr	r7, [fp, #-68]
 268:../reversi8.c ****         CA = CA + SC;
 2268              		.loc 1 268 0
 2269 0958 020086E0 		add	r0, r6, r2
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2270              		.loc 1 265 0
 2271 095c 04E08EE2 		add	lr, lr, #4
 268:../reversi8.c ****         CA = CA + SC;
 2272              		.loc 1 268 0
 2273 0960 FF0000E2 		and	r0, r0, #255
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2274              		.loc 1 265 0
 2275 0964 07005EE1 		cmp	lr, r7
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2276              		.loc 1 269 0
 2277 0968 40701BE5 		ldr	r7, [fp, #-64]
 268:../reversi8.c ****         CA = CA + SC;
 2278              		.loc 1 268 0
 2279 096c 023080E0 		add	r3, r0, r2
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2280              		.loc 1 269 0
 2281 0970 8AA185E0 		add	sl, r5, sl, asl #3
 2282 0974 50900BE5 		str	r9, [fp, #-80]
 268:../reversi8.c ****         CA = CA + SC;
 2283              		.loc 1 268 0
 2284 0978 FF3003E2 		and	r3, r3, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2285              		.loc 1 269 0
 2286 097c 0640C7E7 		strb	r4, [r7, r6]
 2287 0980 0040CAE7 		strb	r4, [sl, r0]
 2288 0984 50001BE5 		ldr	r0, [fp, #-80]
 267:../reversi8.c ****         FA = FA + SF;
 2289              		.loc 1 267 0
 2290 0988 FFC00CE2 		and	ip, ip, #255
 268:../reversi8.c ****         CA = CA + SC;
 2291              		.loc 1 268 0
 2292 098c 028083E0 		add	r8, r3, r2
 2293 0990 FF8008E2 		and	r8, r8, #255
 269:../reversi8.c ****         tablero[FA][CA] = color;
 2294              		.loc 1 269 0
 2295 0994 8C9185E0 		add	r9, r5, ip, asl #3
 2296 0998 0340C0E7 		strb	r4, [r0, r3]
 2297 099c 0840C9E7 		strb	r4, [r9, r8]
 265:../reversi8.c ****     for (i = 0; i < n; i++)
 2298              		.loc 1 265 0
 2299 09a0 DFFFFF1A 		bne	.L85
 2300 09a4 48001BE5 		ldr	r0, [fp, #-72]
 2301              	.LVL146:
 2302              	.L84:
 2303              	.LBE87:
 2304              	.LBE86:
 288:../reversi8.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 2305              		.loc 1 288 0
 2306 09a8 020080E2 		add	r0, r0, #2
 2307              	.LVL147:
 2308 09ac 080050E3 		cmp	r0, #8
 2309 09b0 77FFFF1A 		bne	.L86
 305:../reversi8.c ****     tiempo = timer2_parar();
 2310              		.loc 1 305 0
 2311 09b4 FEFFFFEB 		bl	timer2_parar
 2312              	.LVL148:
 2313 09b8 30000BE5 		str	r0, [fp, #-48]
 2314              		.loc 1 307 0
 2315 09bc 0000A0E3 		mov	r0, #0
 2316 09c0 28D04BE2 		sub	sp, fp, #40
 2317 09c4 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 2318 09c8 1EFF2FE1 		bx	lr
 2319              	.L109:
 2320              		.align	2
 2321              	.L108:
 2322 09cc 00000000 		.word	.LANCHOR1
 2323              		.cfi_endproc
 2324              	.LFE6:
 2326              		.align	2
 2327              		.global	elegir_mov
 2329              	elegir_mov:
 2330              	.LFB7:
 308:../reversi8.c **** 
 309:../reversi8.c **** /////////////////////////////////////////////////////////////////////////////////
 310:../reversi8.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 311:../reversi8.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 312:../reversi8.c **** // que se ha encontrado la guarda
 313:../reversi8.c **** // Al acabar escribe el movimiento seleccionado en f y c
 314:../reversi8.c **** 
 315:../reversi8.c **** // Candidatas
 316:../reversi8.c **** // NO    0
 317:../reversi8.c **** // SI    1
 318:../reversi8.c **** // CASILLA_OCUPADA 2
 319:../reversi8.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 320:../reversi8.c **** {
 2331              		.loc 1 320 0
 2332              		.cfi_startproc
 2333              		@ Function supports interworking.
 2334              		@ args = 0, pretend = 0, frame = 40
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 2336              		@ link register save eliminated.
 2337              	.LVL149:
 2338 09d0 F0072DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 2339              	.LCFI11:
 2340              		.cfi_def_cfa_offset 28
 2341 09d4 2CD04DE2 		sub	sp, sp, #44
 2342              	.LCFI12:
 2343              		.cfi_def_cfa_offset 72
 2344              	.LBB94:
 2345              	.LBB97:
 2346              	.LBB99:
 2347              	.LBB102:
 321:../reversi8.c ****     int i, j, k, found;
 322:../reversi8.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 323:../reversi8.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 324:../reversi8.c ****     char mejor = 0; // almacena el mejor valor encontrado
 325:../reversi8.c ****     int patron, longitud;
 326:../reversi8.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 327:../reversi8.c **** 
 328:../reversi8.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 329:../reversi8.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 330:../reversi8.c ****     for (i=0; i<DIM; i++)
 2348              		.loc 1 330 0
 2349 09d8 00C0A0E3 		mov	ip, #0
 2350              	.LBE102:
 2351              	.LBE99:
 2352              	.LBE97:
 2353              	.LBE94:
 331:../reversi8.c ****     {
 332:../reversi8.c ****         for (j=0; j<DIM; j++)
 333:../reversi8.c ****         {   // indica en qué casillas quizá se pueda mover
 334:../reversi8.c ****             if (candidatas[i][j] == SI)
 335:../reversi8.c ****             {
 336:../reversi8.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 337:../reversi8.c ****                 {
 338:../reversi8.c ****                     found = 0;
 339:../reversi8.c ****                     k = 0;
 340:../reversi8.c **** 
 341:../reversi8.c ****                     // en este bucle comprobamos si es un movimiento válido
 342:../reversi8.c ****                     // (es decir si implica voltear en alguna dirección)
 343:../reversi8.c ****                     while ((found == 0) && (k < DIM))
 344:../reversi8.c ****                     {
 345:../reversi8.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 346:../reversi8.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 347:../reversi8.c **** 
 348:../reversi8.c ****                         // nos dice qué hay que voltear en cada dirección
 349:../reversi8.c ****                         longitud = 0;
 350:../reversi8.c ****                         // patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA);
 351:../reversi8.c ****                         // patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLAN
 352:../reversi8.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA);
 353:../reversi8.c ****                         //  //printf("%d ", patron);
 354:../reversi8.c ****                         if (patron == PATRON_ENCONTRADO)
 355:../reversi8.c ****                         {
 356:../reversi8.c ****                             found = 1;
 357:../reversi8.c ****                             if (tabla_valor[i][j] > mejor)
 2354              		.loc 1 357 0
 2355 09dc 00008DE5 		str	r0, [sp, #0]
 2356              	.LBB112:
 2357              	.LBB96:
 2358              	.LBB98:
 2359              	.LBB101:
 322:../reversi8.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 2360              		.loc 1 322 0
 2361 09e0 0000E0E3 		mvn	r0, #0
 2362              	.LVL150:
 330:../reversi8.c ****     for (i=0; i<DIM; i++)
 2363              		.loc 1 330 0
 2364 09e4 0CC08DE5 		str	ip, [sp, #12]
 2365              	.LBE101:
 2366              	.LBE98:
 2367              	.LBE96:
 2368              	.LBE112:
 320:../reversi8.c **** {
 2369              		.loc 1 320 0
 2370 09e8 20208DE5 		str	r2, [sp, #32]
 2371              		.loc 1 357 0
 2372 09ec 14108DE5 		str	r1, [sp, #20]
 2373              	.LBB113:
 2374              	.LBB110:
 2375              	.LBB105:
 2376              	.LBB103:
 324:../reversi8.c ****     char mejor = 0; // almacena el mejor valor encontrado
 2377              		.loc 1 324 0
 2378 09f0 10C08DE5 		str	ip, [sp, #16]
 322:../reversi8.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 2379              		.loc 1 322 0
 2380 09f4 18008DE5 		str	r0, [sp, #24]
 2381              	.LBE103:
 2382              	.LBE105:
 2383              	.LBE110:
 2384              	.LBE113:
 320:../reversi8.c **** {
 2385              		.loc 1 320 0
 2386 09f8 24308DE5 		str	r3, [sp, #36]
 2387 09fc 0C30A0E1 		mov	r3, ip
 2388              	.LVL151:
 2389              	.L111:
 319:../reversi8.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 2390              		.loc 1 319 0 discriminator 1
 2391 0a00 BC819FE5 		ldr	r8, .L129
 2392              		.cfi_offset 10, -4
 2393              		.cfi_offset 9, -8
 2394              		.cfi_offset 8, -12
 2395              		.cfi_offset 7, -16
 2396              		.cfi_offset 6, -20
 2397              		.cfi_offset 5, -24
 2398              		.cfi_offset 4, -28
 336:../reversi8.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 2399              		.loc 1 336 0 discriminator 1
 2400 0a04 FF0003E2 		and	r0, r3, #255
 319:../reversi8.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 2401              		.loc 1 319 0 discriminator 1
 2402 0a08 839188E0 		add	r9, r8, r3, asl #3
 336:../reversi8.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 2403              		.loc 1 336 0 discriminator 1
 2404 0a0c 08008DE5 		str	r0, [sp, #8]
 319:../reversi8.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 2405              		.loc 1 319 0 discriminator 1
 2406 0a10 0080A0E3 		mov	r8, #0
 2407 0a14 030000EA 		b	.L120
 2408              	.LVL152:
 2409              	.L112:
 332:../reversi8.c ****         for (j=0; j<DIM; j++)
 2410              		.loc 1 332 0
 2411 0a18 018088E2 		add	r8, r8, #1
 2412              	.LVL153:
 2413 0a1c 080058E3 		cmp	r8, #8
 2414 0a20 019089E2 		add	r9, r9, #1
 2415 0a24 4D00000A 		beq	.L128
 2416              	.LVL154:
 2417              	.L120:
 334:../reversi8.c ****             if (candidatas[i][j] == SI)
 2418              		.loc 1 334 0
 2419 0a28 00209DE5 		ldr	r2, [sp, #0]
 2420 0a2c 0830D2E7 		ldrb	r3, [r2, r8]	@ zero_extendqisi2
 2421 0a30 010053E3 		cmp	r3, #1
 2422 0a34 F7FFFF1A 		bne	.L112
 336:../reversi8.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 2423              		.loc 1 336 0
 2424 0a38 14709DE5 		ldr	r7, [sp, #20]
 2425 0a3c 0870D7E7 		ldrb	r7, [r7, r8]	@ zero_extendqisi2
 2426 0a40 000057E3 		cmp	r7, #0
 2427 0a44 F3FFFF1A 		bne	.L112
 2428 0a48 FF4008E2 		and	r4, r8, #255
 2429 0a4c 04408DE5 		str	r4, [sp, #4]
 2430              	.LVL155:
 2431              	.L119:
 345:../reversi8.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 2432              		.loc 1 345 0
 2433 0a50 70019FE5 		ldr	r0, .L129+4
 346:../reversi8.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 2434              		.loc 1 346 0
 2435 0a54 085080E2 		add	r5, r0, #8
 345:../reversi8.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 2436              		.loc 1 345 0
 2437 0a58 0760D0E7 		ldrb	r6, [r0, r7]	@ zero_extendqisi2
 2438              	.LVL156:
 2439              	.LBB114:
 2440              	.LBB95:
 232:../reversi8.c **** 	FA = FA + SF;
 2441              		.loc 1 232 0
 2442 0a5c 08209DE5 		ldr	r2, [sp, #8]
 233:../reversi8.c **** 	CA = CA + SC;
 2443              		.loc 1 233 0
 2444 0a60 04C09DE5 		ldr	ip, [sp, #4]
 2445              	.LBE95:
 2446              	.LBE114:
 346:../reversi8.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 2447              		.loc 1 346 0
 2448 0a64 0750D5E7 		ldrb	r5, [r5, r7]	@ zero_extendqisi2
 2449              	.LVL157:
 2450              	.LBB115:
 2451              	.LBB111:
 232:../reversi8.c **** 	FA = FA + SF;
 2452              		.loc 1 232 0
 2453 0a68 023086E0 		add	r3, r6, r2
 233:../reversi8.c **** 	CA = CA + SC;
 2454              		.loc 1 233 0
 2455 0a6c 0CA085E0 		add	sl, r5, ip
 232:../reversi8.c **** 	FA = FA + SF;
 2456              		.loc 1 232 0
 2457 0a70 FF2003E2 		and	r2, r3, #255
 2458              	.LVL158:
 233:../reversi8.c **** 	CA = CA + SC;
 2459              		.loc 1 233 0
 2460 0a74 FF300AE2 		and	r3, sl, #255
 2461              	.LVL159:
 2462              	.LBB106:
 2463              	.LBB107:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2464              		.loc 1 202 0
 2465 0a78 070053E3 		cmp	r3, #7
 2466 0a7c 07005293 		cmpls	r2, #7
 2467 0a80 00C0A083 		movhi	ip, #0
 2468 0a84 01C0A093 		movls	ip, #1
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 2469              		.loc 1 210 0
 2470 0a88 0C00A081 		movhi	r0, ip
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2471              		.loc 1 202 0
 2472 0a8c 0400008A 		bhi	.L113
 2473 0a90 820181E0 		add	r0, r1, r2, asl #3
 2474 0a94 0300D0E7 		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 204:../reversi8.c ****         *posicion_valida = 1;
 2475              		.loc 1 204 0
 2476 0a98 000050E3 		cmp	r0, #0
 2477 0a9c 00C0A001 		moveq	ip, r0
 2478 0aa0 01C0A013 		movne	ip, #1
 2479              	.L113:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2480              		.loc 1 202 0
 2481 0aa4 054083E0 		add	r4, r3, r5
 2482 0aa8 06A082E0 		add	sl, r2, r6
 2483 0aac FF3004E2 		and	r3, r4, #255
 2484              	.LVL160:
 2485 0ab0 FF200AE2 		and	r2, sl, #255
 2486              	.LVL161:
 2487              	.LBE107:
 2488              	.LBE106:
 2489              	.LBB108:
 2490              	.LBB100:
 204:../reversi8.c ****         *posicion_valida = 1;
 2491              		.loc 1 204 0
 2492 0ab4 0040A0E3 		mov	r4, #0
 2493 0ab8 0F0000EA 		b	.L114
 2494              	.LVL162:
 2495              	.L116:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2496              		.loc 1 202 0
 2497 0abc 070053E3 		cmp	r3, #7
 2498 0ac0 07005293 		cmpls	r2, #7
 2499 0ac4 00C0A083 		movhi	ip, #0
 2500 0ac8 01C0A093 		movls	ip, #1
 2501              	.LBE100:
 2502              	.LBE108:
 241:../reversi8.c **** 		*longitud = *longitud + 1;
 2503              		.loc 1 241 0
 2504 0acc 014084E2 		add	r4, r4, #1
 2505              	.LVL163:
 2506              	.LBB109:
 2507              	.LBB104:
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 2508              		.loc 1 210 0
 2509 0ad0 0C00A081 		movhi	r0, ip
 2510              	.LVL164:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2511              		.loc 1 202 0
 2512 0ad4 0400008A 		bhi	.L115
 2513 0ad8 82C181E0 		add	ip, r1, r2, asl #3
 2514 0adc 0300DCE7 		ldrb	r0, [ip, r3]	@ zero_extendqisi2
 204:../reversi8.c ****         *posicion_valida = 1;
 2515              		.loc 1 204 0
 2516 0ae0 000050E3 		cmp	r0, #0
 2517 0ae4 00C0A001 		moveq	ip, r0
 2518 0ae8 01C0A013 		movne	ip, #1
 2519              	.L115:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 2520              		.loc 1 202 0
 2521 0aec 062082E0 		add	r2, r2, r6
 2522              	.LVL165:
 2523 0af0 053083E0 		add	r3, r3, r5
 2524              	.LVL166:
 2525 0af4 FF2002E2 		and	r2, r2, #255
 2526 0af8 FF3003E2 		and	r3, r3, #255
 2527              	.LVL167:
 2528              	.L114:
 2529              	.LBE104:
 2530              	.LBE109:
 235:../reversi8.c **** 	while ((posicion_valida == 1) && (casilla != color))
 2531              		.loc 1 235 0
 2532 0afc FFC00CE2 		and	ip, ip, #255
 2533              	.LVL168:
 2534 0b00 010050E3 		cmp	r0, #1
 2535 0b04 00A0A003 		moveq	sl, #0
 2536 0b08 01A00C12 		andne	sl, ip, #1
 2537 0b0c 00005AE3 		cmp	sl, #0
 2538 0b10 E9FFFF1A 		bne	.L116
 246:../reversi8.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0)) {
 2539              		.loc 1 246 0
 2540 0b14 010050E3 		cmp	r0, #1
 2541 0b18 00C0A013 		movne	ip, #0
 2542 0b1c 01C00C02 		andeq	ip, ip, #1
 2543 0b20 00005CE3 		cmp	ip, #0
 2544 0b24 2200000A 		beq	.L117
 2545 0b28 000054E3 		cmp	r4, #0
 2546 0b2c 2000000A 		beq	.L117
 2547              	.LVL169:
 2548              	.LBE111:
 2549              	.LBE115:
 2550              		.loc 1 357 0
 2551 0b30 0030D9E5 		ldrb	r3, [r9, #0]	@ zero_extendqisi2
 2552 0b34 10009DE5 		ldr	r0, [sp, #16]
 2553              	.LVL170:
 2554 0b38 000053E1 		cmp	r3, r0
 2555 0b3c B5FFFF9A 		bls	.L112
 2556 0b40 1C808DE5 		str	r8, [sp, #28]
 2557 0b44 0CC09DE5 		ldr	ip, [sp, #12]
 332:../reversi8.c ****         for (j=0; j<DIM; j++)
 2558              		.loc 1 332 0
 2559 0b48 018088E2 		add	r8, r8, #1
 2560 0b4c 080058E3 		cmp	r8, #8
 2561              		.loc 1 357 0
 2562 0b50 10308DE5 		str	r3, [sp, #16]
 2563 0b54 18C08DE5 		str	ip, [sp, #24]
 2564              	.LVL171:
 332:../reversi8.c ****         for (j=0; j<DIM; j++)
 2565              		.loc 1 332 0
 2566 0b58 019089E2 		add	r9, r9, #1
 2567 0b5c B1FFFF1A 		bne	.L120
 2568              	.LVL172:
 2569              	.L128:
 330:../reversi8.c ****     for (i=0; i<DIM; i++)
 2570              		.loc 1 330 0
 2571 0b60 0C309DE5 		ldr	r3, [sp, #12]
 2572 0b64 00209DE5 		ldr	r2, [sp, #0]
 2573 0b68 14009DE5 		ldr	r0, [sp, #20]
 2574 0b6c 013083E2 		add	r3, r3, #1
 2575 0b70 08C082E2 		add	ip, r2, #8
 2576 0b74 080053E3 		cmp	r3, #8
 2577 0b78 082080E2 		add	r2, r0, #8
 2578 0b7c 0C308DE5 		str	r3, [sp, #12]
 2579              	.LVL173:
 2580 0b80 00C08DE5 		str	ip, [sp, #0]
 2581 0b84 14208DE5 		str	r2, [sp, #20]
 2582 0b88 9CFFFF1A 		bne	.L111
 358:../reversi8.c ****                             {
 359:../reversi8.c ****                                 mf = i;
 360:../reversi8.c ****                                 mc = j;
 361:../reversi8.c ****                                 mejor = tabla_valor[i][j];
 362:../reversi8.c ****                             }
 363:../reversi8.c ****                         }
 364:../reversi8.c ****                         k++;
 365:../reversi8.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 366:../reversi8.c ****                     }
 367:../reversi8.c ****                 }
 368:../reversi8.c ****             }
 369:../reversi8.c ****         }
 370:../reversi8.c ****     }
 371:../reversi8.c ****     *f = (char) mf;
 2583              		.loc 1 371 0
 2584 0b8c 18309DE5 		ldr	r3, [sp, #24]
 2585              	.LVL174:
 2586 0b90 20209DE5 		ldr	r2, [sp, #32]
 2587 0b94 0030C2E5 		strb	r3, [r2, #0]
 372:../reversi8.c ****     *c = (char) mc;
 2588              		.loc 1 372 0
 2589 0b98 1C109DE5 		ldr	r1, [sp, #28]
 2590              	.LVL175:
 2591 0b9c 24C09DE5 		ldr	ip, [sp, #36]
 373:../reversi8.c ****     // si no se ha encontrado una posición válida devuelve -1
 374:../reversi8.c ****     return mf;
 375:../reversi8.c **** }
 2592              		.loc 1 375 0
 2593 0ba0 18009DE5 		ldr	r0, [sp, #24]
 372:../reversi8.c ****     *c = (char) mc;
 2594              		.loc 1 372 0
 2595 0ba4 0010CCE5 		strb	r1, [ip, #0]
 2596              		.loc 1 375 0
 2597 0ba8 2CD08DE2 		add	sp, sp, #44
 2598 0bac F007BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 2599 0bb0 1EFF2FE1 		bx	lr
 2600              	.LVL176:
 2601              	.L117:
 364:../reversi8.c ****                         k++;
 2602              		.loc 1 364 0
 2603 0bb4 017087E2 		add	r7, r7, #1
 2604              	.LVL177:
 343:../reversi8.c ****                     while ((found == 0) && (k < DIM))
 2605              		.loc 1 343 0
 2606 0bb8 080057E3 		cmp	r7, #8
 2607 0bbc A3FFFF1A 		bne	.L119
 2608 0bc0 94FFFFEA 		b	.L112
 2609              	.L130:
 2610              		.align	2
 2611              	.L129:
 2612 0bc4 10000000 		.word	.LANCHOR1+16
 2613 0bc8 00000000 		.word	.LANCHOR1
 2614              		.cfi_endproc
 2615              	.LFE7:
 2617              		.align	2
 2618              		.global	contar
 2620              	contar:
 2621              	.LFB8:
 376:../reversi8.c **** ////////////////////////////////////////////////////////////////////////////////
 377:../reversi8.c **** // Cuenta el número de fichas de cada color.
 378:../reversi8.c **** // Los guarda en la dirección b (blancas) y n (negras)
 379:../reversi8.c **** void contar(char tablero[][DIM], int *b, int *n)
 380:../reversi8.c **** {
 2622              		.loc 1 380 0
 2623              		.cfi_startproc
 2624              		@ Function supports interworking.
 2625              		@ args = 0, pretend = 0, frame = 0
 2626              		@ frame_needed = 0, uses_anonymous_args = 0
 2627              		@ link register save eliminated.
 2628              	.LVL178:
 381:../reversi8.c ****     int i,j;
 382:../reversi8.c **** 
 383:../reversi8.c ****     *b = 0;
 2629              		.loc 1 383 0
 2630 0bcc 0030A0E3 		mov	r3, #0
 2631 0bd0 003081E5 		str	r3, [r1, #0]
 379:../reversi8.c **** void contar(char tablero[][DIM], int *b, int *n)
 2632              		.loc 1 379 0
 2633 0bd4 40C080E2 		add	ip, r0, #64
 384:../reversi8.c ****     *n = 0;
 2634              		.loc 1 384 0
 2635 0bd8 003082E5 		str	r3, [r2, #0]
 2636              	.LVL179:
 2637 0bdc 270000EA 		b	.L148
 2638              	.LVL180:
 2639              	.L159:
 385:../reversi8.c **** 
 386:../reversi8.c ****     // recorremos todo el tablero contando las fichas de cada color
 387:../reversi8.c ****     for (i=0; i<DIM; i++)
 388:../reversi8.c ****     {
 389:../reversi8.c ****         for (j=0; j<DIM; j++)
 390:../reversi8.c ****         {
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 392:../reversi8.c ****             {
 393:../reversi8.c ****                 (*b)++;
 394:../reversi8.c ****             }
 395:../reversi8.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 2640              		.loc 1 395 0
 2641 0be0 020053E3 		cmp	r3, #2
 2642 0be4 5900000A 		beq	.L150
 2643              	.L133:
 2644              	.LVL181:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2645              		.loc 1 391 0
 2646 0be8 0130D0E5 		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2647 0bec 010053E3 		cmp	r3, #1
 2648 0bf0 2B00000A 		beq	.L134
 2649              	.L160:
 2650              		.loc 1 395 0
 2651 0bf4 020053E3 		cmp	r3, #2
 2652 0bf8 6400000A 		beq	.L151
 2653              	.L135:
 2654              	.LVL182:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2655              		.loc 1 391 0
 2656 0bfc 0230D0E5 		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2657 0c00 010053E3 		cmp	r3, #1
 2658 0c04 2C00000A 		beq	.L136
 2659              	.L161:
 2660              		.loc 1 395 0
 2661 0c08 020053E3 		cmp	r3, #2
 2662 0c0c 5B00000A 		beq	.L152
 2663              	.L137:
 2664              	.LVL183:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2665              		.loc 1 391 0
 2666 0c10 0330D0E5 		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2667 0c14 010053E3 		cmp	r3, #1
 2668 0c18 2D00000A 		beq	.L138
 2669              	.L162:
 2670              		.loc 1 395 0
 2671 0c1c 020053E3 		cmp	r3, #2
 2672 0c20 5200000A 		beq	.L153
 2673              	.L139:
 2674              	.LVL184:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2675              		.loc 1 391 0
 2676 0c24 0430D0E5 		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2677 0c28 010053E3 		cmp	r3, #1
 2678 0c2c 2E00000A 		beq	.L140
 2679              	.L163:
 2680              		.loc 1 395 0
 2681 0c30 020053E3 		cmp	r3, #2
 2682 0c34 4900000A 		beq	.L154
 2683              	.L141:
 2684              	.LVL185:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2685              		.loc 1 391 0
 2686 0c38 0530D0E5 		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 2687 0c3c 010053E3 		cmp	r3, #1
 2688 0c40 2F00000A 		beq	.L142
 2689              	.L164:
 2690              		.loc 1 395 0
 2691 0c44 020053E3 		cmp	r3, #2
 2692 0c48 5C00000A 		beq	.L155
 2693              	.L143:
 2694              	.LVL186:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2695              		.loc 1 391 0
 2696 0c4c 0630D0E5 		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2697 0c50 010053E3 		cmp	r3, #1
 2698 0c54 3000000A 		beq	.L144
 2699              	.L165:
 2700              		.loc 1 395 0
 2701 0c58 020053E3 		cmp	r3, #2
 2702 0c5c 5300000A 		beq	.L156
 2703              	.L145:
 2704              	.LVL187:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2705              		.loc 1 391 0
 2706 0c60 0730D0E5 		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 2707 0c64 010053E3 		cmp	r3, #1
 2708 0c68 3100000A 		beq	.L146
 2709              	.L166:
 2710              		.loc 1 395 0
 2711 0c6c 020053E3 		cmp	r3, #2
 2712 0c70 4A00000A 		beq	.L157
 2713              	.L147:
 2714              	.LVL188:
 393:../reversi8.c ****                 (*b)++;
 2715              		.loc 1 393 0
 2716 0c74 080080E2 		add	r0, r0, #8
 387:../reversi8.c ****     for (i=0; i<DIM; i++)
 2717              		.loc 1 387 0
 2718 0c78 0C0050E1 		cmp	r0, ip
 2719 0c7c 3200000A 		beq	.L158
 2720              	.LVL189:
 2721              	.L148:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2722              		.loc 1 391 0 discriminator 1
 2723 0c80 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 2724 0c84 010053E3 		cmp	r3, #1
 2725 0c88 D4FFFF1A 		bne	.L159
 393:../reversi8.c ****                 (*b)++;
 2726              		.loc 1 393 0
 2727 0c8c 003091E5 		ldr	r3, [r1, #0]
 2728 0c90 013083E2 		add	r3, r3, #1
 2729 0c94 003081E5 		str	r3, [r1, #0]
 2730              	.LVL190:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2731              		.loc 1 391 0
 2732 0c98 0130D0E5 		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2733 0c9c 010053E3 		cmp	r3, #1
 2734 0ca0 D3FFFF1A 		bne	.L160
 2735              	.L134:
 393:../reversi8.c ****                 (*b)++;
 2736              		.loc 1 393 0
 2737 0ca4 003091E5 		ldr	r3, [r1, #0]
 2738 0ca8 013083E2 		add	r3, r3, #1
 2739 0cac 003081E5 		str	r3, [r1, #0]
 2740              	.LVL191:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2741              		.loc 1 391 0
 2742 0cb0 0230D0E5 		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2743 0cb4 010053E3 		cmp	r3, #1
 2744 0cb8 D2FFFF1A 		bne	.L161
 2745              	.L136:
 393:../reversi8.c ****                 (*b)++;
 2746              		.loc 1 393 0
 2747 0cbc 003091E5 		ldr	r3, [r1, #0]
 2748 0cc0 013083E2 		add	r3, r3, #1
 2749 0cc4 003081E5 		str	r3, [r1, #0]
 2750              	.LVL192:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2751              		.loc 1 391 0
 2752 0cc8 0330D0E5 		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2753 0ccc 010053E3 		cmp	r3, #1
 2754 0cd0 D1FFFF1A 		bne	.L162
 2755              	.L138:
 393:../reversi8.c ****                 (*b)++;
 2756              		.loc 1 393 0
 2757 0cd4 003091E5 		ldr	r3, [r1, #0]
 2758 0cd8 013083E2 		add	r3, r3, #1
 2759 0cdc 003081E5 		str	r3, [r1, #0]
 2760              	.LVL193:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2761              		.loc 1 391 0
 2762 0ce0 0430D0E5 		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2763 0ce4 010053E3 		cmp	r3, #1
 2764 0ce8 D0FFFF1A 		bne	.L163
 2765              	.L140:
 393:../reversi8.c ****                 (*b)++;
 2766              		.loc 1 393 0
 2767 0cec 003091E5 		ldr	r3, [r1, #0]
 2768 0cf0 013083E2 		add	r3, r3, #1
 2769 0cf4 003081E5 		str	r3, [r1, #0]
 2770              	.LVL194:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2771              		.loc 1 391 0
 2772 0cf8 0530D0E5 		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 2773 0cfc 010053E3 		cmp	r3, #1
 2774 0d00 CFFFFF1A 		bne	.L164
 2775              	.L142:
 393:../reversi8.c ****                 (*b)++;
 2776              		.loc 1 393 0
 2777 0d04 003091E5 		ldr	r3, [r1, #0]
 2778 0d08 013083E2 		add	r3, r3, #1
 2779 0d0c 003081E5 		str	r3, [r1, #0]
 2780              	.LVL195:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2781              		.loc 1 391 0
 2782 0d10 0630D0E5 		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2783 0d14 010053E3 		cmp	r3, #1
 2784 0d18 CEFFFF1A 		bne	.L165
 2785              	.L144:
 393:../reversi8.c ****                 (*b)++;
 2786              		.loc 1 393 0
 2787 0d1c 003091E5 		ldr	r3, [r1, #0]
 2788 0d20 013083E2 		add	r3, r3, #1
 2789 0d24 003081E5 		str	r3, [r1, #0]
 2790              	.LVL196:
 391:../reversi8.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2791              		.loc 1 391 0
 2792 0d28 0730D0E5 		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 2793 0d2c 010053E3 		cmp	r3, #1
 2794 0d30 CDFFFF1A 		bne	.L166
 2795              	.L146:
 393:../reversi8.c ****                 (*b)++;
 2796              		.loc 1 393 0
 2797 0d34 003091E5 		ldr	r3, [r1, #0]
 2798 0d38 080080E2 		add	r0, r0, #8
 2799 0d3c 013083E2 		add	r3, r3, #1
 387:../reversi8.c ****     for (i=0; i<DIM; i++)
 2800              		.loc 1 387 0
 2801 0d40 0C0050E1 		cmp	r0, ip
 393:../reversi8.c ****                 (*b)++;
 2802              		.loc 1 393 0
 2803 0d44 003081E5 		str	r3, [r1, #0]
 2804              	.LVL197:
 387:../reversi8.c ****     for (i=0; i<DIM; i++)
 2805              		.loc 1 387 0
 2806 0d48 CCFFFF1A 		bne	.L148
 2807              	.L158:
 396:../reversi8.c ****             {
 397:../reversi8.c ****                 (*n)++;
 398:../reversi8.c ****             }
 399:../reversi8.c ****         }
 400:../reversi8.c ****     }
 401:../reversi8.c **** }
 2808              		.loc 1 401 0
 2809 0d4c 1EFF2FE1 		bx	lr
 2810              	.LVL198:
 2811              	.L150:
 397:../reversi8.c ****                 (*n)++;
 2812              		.loc 1 397 0
 2813 0d50 003092E5 		ldr	r3, [r2, #0]
 2814 0d54 013083E2 		add	r3, r3, #1
 2815 0d58 003082E5 		str	r3, [r2, #0]
 2816 0d5c A1FFFFEA 		b	.L133
 2817              	.LVL199:
 2818              	.L154:
 2819 0d60 003092E5 		ldr	r3, [r2, #0]
 2820 0d64 013083E2 		add	r3, r3, #1
 2821 0d68 003082E5 		str	r3, [r2, #0]
 2822 0d6c B1FFFFEA 		b	.L141
 2823              	.LVL200:
 2824              	.L153:
 2825 0d70 003092E5 		ldr	r3, [r2, #0]
 2826 0d74 013083E2 		add	r3, r3, #1
 2827 0d78 003082E5 		str	r3, [r2, #0]
 2828 0d7c A8FFFFEA 		b	.L139
 2829              	.LVL201:
 2830              	.L152:
 2831 0d80 003092E5 		ldr	r3, [r2, #0]
 2832 0d84 013083E2 		add	r3, r3, #1
 2833 0d88 003082E5 		str	r3, [r2, #0]
 2834 0d8c 9FFFFFEA 		b	.L137
 2835              	.LVL202:
 2836              	.L151:
 2837 0d90 003092E5 		ldr	r3, [r2, #0]
 2838 0d94 013083E2 		add	r3, r3, #1
 2839 0d98 003082E5 		str	r3, [r2, #0]
 2840 0d9c 96FFFFEA 		b	.L135
 2841              	.LVL203:
 2842              	.L157:
 2843 0da0 003092E5 		ldr	r3, [r2, #0]
 2844 0da4 013083E2 		add	r3, r3, #1
 2845 0da8 003082E5 		str	r3, [r2, #0]
 2846 0dac B0FFFFEA 		b	.L147
 2847              	.LVL204:
 2848              	.L156:
 2849 0db0 003092E5 		ldr	r3, [r2, #0]
 2850 0db4 013083E2 		add	r3, r3, #1
 2851 0db8 003082E5 		str	r3, [r2, #0]
 2852 0dbc A7FFFFEA 		b	.L145
 2853              	.LVL205:
 2854              	.L155:
 2855 0dc0 003092E5 		ldr	r3, [r2, #0]
 2856 0dc4 013083E2 		add	r3, r3, #1
 2857 0dc8 003082E5 		str	r3, [r2, #0]
 2858 0dcc 9EFFFFEA 		b	.L143
 2859              		.cfi_endproc
 2860              	.LFE8:
 2862              		.align	2
 2863              		.global	actualizar_candidatas
 2865              	actualizar_candidatas:
 2866              	.LFB9:
 402:../reversi8.c **** 
 403:../reversi8.c **** void actualizar_candidatas(char candidatas[][DIM], char f, char c)
 404:../reversi8.c **** {
 2867              		.loc 1 404 0
 2868              		.cfi_startproc
 2869              		@ Function supports interworking.
 2870              		@ args = 0, pretend = 0, frame = 0
 2871              		@ frame_needed = 0, uses_anonymous_args = 0
 2872              		@ link register save eliminated.
 2873              	.LVL206:
 405:../reversi8.c ****     // donde ya se ha colocado no se puede volver a colocar
 406:../reversi8.c ****     // En las posiciones alrededor sí
 407:../reversi8.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2874              		.loc 1 407 0
 2875 0dd0 813180E0 		add	r3, r0, r1, asl #3
 2876 0dd4 02C0A0E3 		mov	ip, #2
 408:../reversi8.c ****     if (f > 0)
 2877              		.loc 1 408 0
 2878 0dd8 000051E3 		cmp	r1, #0
 404:../reversi8.c **** {
 2879              		.loc 1 404 0
 2880 0ddc 30002DE9 		stmfd	sp!, {r4, r5}
 2881              	.LCFI13:
 2882              		.cfi_def_cfa_offset 8
 407:../reversi8.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2883              		.loc 1 407 0
 2884 0de0 02C0C3E7 		strb	ip, [r3, r2]
 2885              		.loc 1 408 0
 2886 0de4 0E00000A 		beq	.L168
 2887              		.cfi_offset 5, -4
 2888              		.cfi_offset 4, -8
 409:../reversi8.c ****     {
 410:../reversi8.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 2889              		.loc 1 410 0
 2890 0de8 015041E2 		sub	r5, r1, #1
 2891 0dec 85C180E0 		add	ip, r0, r5, asl #3
 2892 0df0 0240DCE7 		ldrb	r4, [ip, r2]	@ zero_extendqisi2
 2893 0df4 020054E3 		cmp	r4, #2
 411:../reversi8.c ****             candidatas[f-1][c] = SI;
 2894              		.loc 1 411 0
 2895 0df8 0140A013 		movne	r4, #1
 2896 0dfc 0240CC17 		strneb	r4, [ip, r2]
 412:../reversi8.c **** 
 413:../reversi8.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2897              		.loc 1 413 0
 2898 0e00 000052E3 		cmp	r2, #0
 2899 0e04 2A00001A 		bne	.L181
 2900              	.L170:
 414:../reversi8.c ****             candidatas[f-1][c-1] = SI;
 415:../reversi8.c **** 
 416:../reversi8.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2901              		.loc 1 416 0 discriminator 1
 2902 0e08 014082E2 		add	r4, r2, #1
 2903 0e0c 0450DCE7 		ldrb	r5, [ip, r4]	@ zero_extendqisi2
 2904 0e10 020055E3 		cmp	r5, #2
 417:../reversi8.c ****             candidatas[f-1][c+1] = SI;
 2905              		.loc 1 417 0 discriminator 1
 2906 0e14 0150A013 		movne	r5, #1
 2907 0e18 0450CC17 		strneb	r5, [ip, r4]
 2908              	.L172:
 418:../reversi8.c ****     }
 419:../reversi8.c ****     if (f < 7)
 2909              		.loc 1 419 0
 2910 0e1c 060051E3 		cmp	r1, #6
 2911 0e20 0C00008A 		bhi	.L173
 2912              	.L168:
 420:../reversi8.c ****     {
 421:../reversi8.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2913              		.loc 1 421 0
 2914 0e24 01C081E2 		add	ip, r1, #1
 2915 0e28 8C0180E0 		add	r0, r0, ip, asl #3
 2916              	.LVL207:
 2917 0e2c 0210D0E7 		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 2918              	.LVL208:
 2919 0e30 020051E3 		cmp	r1, #2
 422:../reversi8.c ****             candidatas[f+1][c] = SI;
 2920              		.loc 1 422 0
 2921 0e34 0110A013 		movne	r1, #1
 2922 0e38 0210C017 		strneb	r1, [r0, r2]
 423:../reversi8.c **** 
 424:../reversi8.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2923              		.loc 1 424 0
 2924 0e3c 000052E3 		cmp	r2, #0
 2925 0e40 0D00001A 		bne	.L182
 2926              	.L175:
 425:../reversi8.c ****             candidatas[f+1][c-1] = SI;
 426:../reversi8.c **** 
 427:../reversi8.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2927              		.loc 1 427 0 discriminator 1
 2928 0e44 011082E2 		add	r1, r2, #1
 2929 0e48 01C0D0E7 		ldrb	ip, [r0, r1]	@ zero_extendqisi2
 2930 0e4c 02005CE3 		cmp	ip, #2
 428:../reversi8.c ****             candidatas[f+1][c+1] = SI;
 2931              		.loc 1 428 0 discriminator 1
 2932 0e50 01C0A013 		movne	ip, #1
 2933 0e54 01C0C017 		strneb	ip, [r0, r1]
 2934              	.L173:
 429:../reversi8.c ****     }
 430:../reversi8.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2935              		.loc 1 430 0
 2936 0e58 000052E3 		cmp	r2, #0
 2937 0e5c 1C00001A 		bne	.L183
 2938              	.L178:
 431:../reversi8.c ****         candidatas[f][c-1] = SI;
 432:../reversi8.c **** 
 433:../reversi8.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2939              		.loc 1 433 0 discriminator 1
 2940 0e60 012082E2 		add	r2, r2, #1
 2941              	.LVL209:
 2942 0e64 0210D3E7 		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 2943 0e68 020051E3 		cmp	r1, #2
 434:../reversi8.c ****         candidatas[f][c+1] = SI;
 2944              		.loc 1 434 0 discriminator 1
 2945 0e6c 0110A013 		movne	r1, #1
 2946 0e70 0210C317 		strneb	r1, [r3, r2]
 2947              	.L167:
 435:../reversi8.c **** }
 2948              		.loc 1 435 0
 2949 0e74 3000BDE8 		ldmfd	sp!, {r4, r5}
 2950 0e78 1EFF2FE1 		bx	lr
 2951              	.LVL210:
 2952              	.L182:
 424:../reversi8.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2953              		.loc 1 424 0 discriminator 1
 2954 0e7c 011042E2 		sub	r1, r2, #1
 2955 0e80 01C0D0E7 		ldrb	ip, [r0, r1]	@ zero_extendqisi2
 2956 0e84 02005CE3 		cmp	ip, #2
 425:../reversi8.c ****             candidatas[f+1][c-1] = SI;
 2957              		.loc 1 425 0 discriminator 1
 2958 0e88 01C0A013 		movne	ip, #1
 2959 0e8c 01C0C017 		strneb	ip, [r0, r1]
 427:../reversi8.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2960              		.loc 1 427 0 discriminator 1
 2961 0e90 060052E3 		cmp	r2, #6
 2962 0e94 EAFFFF9A 		bls	.L175
 2963              	.L177:
 430:../reversi8.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2964              		.loc 1 430 0 discriminator 1
 2965 0e98 0100D3E7 		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 2966 0e9c 020050E3 		cmp	r0, #2
 431:../reversi8.c ****         candidatas[f][c-1] = SI;
 2967              		.loc 1 431 0 discriminator 1
 2968 0ea0 0100A013 		movne	r0, #1
 2969 0ea4 0100C317 		strneb	r0, [r3, r1]
 433:../reversi8.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2970              		.loc 1 433 0 discriminator 1
 2971 0ea8 060052E3 		cmp	r2, #6
 2972 0eac F0FFFF8A 		bhi	.L167
 2973 0eb0 EAFFFFEA 		b	.L178
 2974              	.LVL211:
 2975              	.L181:
 413:../reversi8.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2976              		.loc 1 413 0 discriminator 1
 2977 0eb4 014042E2 		sub	r4, r2, #1
 2978 0eb8 0450DCE7 		ldrb	r5, [ip, r4]	@ zero_extendqisi2
 2979 0ebc 020055E3 		cmp	r5, #2
 414:../reversi8.c ****             candidatas[f-1][c-1] = SI;
 2980              		.loc 1 414 0 discriminator 1
 2981 0ec0 0150A013 		movne	r5, #1
 2982 0ec4 0450CC17 		strneb	r5, [ip, r4]
 416:../reversi8.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2983              		.loc 1 416 0 discriminator 1
 2984 0ec8 060052E3 		cmp	r2, #6
 2985 0ecc D2FFFF8A 		bhi	.L172
 2986 0ed0 CCFFFFEA 		b	.L170
 2987              	.LVL212:
 2988              	.L183:
 430:../reversi8.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2989              		.loc 1 430 0
 2990 0ed4 011042E2 		sub	r1, r2, #1
 2991 0ed8 EEFFFFEA 		b	.L177
 2992              		.cfi_endproc
 2993              	.LFE9:
 2995              		.align	2
 2996              		.global	reversi8
 2998              	reversi8:
 2999              	.LFB10:
 436:../reversi8.c **** 
 437:../reversi8.c **** 
 438:../reversi8.c **** 
 439:../reversi8.c **** 
 440:../reversi8.c **** ////////////////////////////////////////////////////////////////////////////////
 441:../reversi8.c **** // Proceso principal del juego
 442:../reversi8.c **** // Utiliza el tablero,
 443:../reversi8.c **** // y las direcciones en las que indica el jugador la fila y la columna
 444:../reversi8.c **** // y la señal de ready que indica que se han actualizado fila y columna
 445:../reversi8.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 446:../reversi8.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 447:../reversi8.c **** // en esta versión el humano lleva negras y la máquina blancas
 448:../reversi8.c **** // no se comprueba que el humano mueva correctamente.
 449:../reversi8.c **** // Sólo que la máquina realice un movimiento correcto.
 450:../reversi8.c **** void reversi8()
 451:../reversi8.c **** {
 3000              		.loc 1 451 0
 3001              		.cfi_startproc
 3002              		@ Function supports interworking.
 3003              		@ args = 0, pretend = 0, frame = 112
 3004              		@ frame_needed = 1, uses_anonymous_args = 0
 3005 0edc 0DC0A0E1 		mov	ip, sp
 3006              	.LCFI14:
 3007              		.cfi_def_cfa_register 12
 3008 0ee0 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 3009 0ee4 04B04CE2 		sub	fp, ip, #4
 3010              		.cfi_offset 14, -8
 3011              		.cfi_offset 13, -12
 3012              		.cfi_offset 11, -16
 3013              		.cfi_offset 10, -20
 3014              		.cfi_offset 9, -24
 3015              		.cfi_offset 8, -28
 3016              		.cfi_offset 7, -32
 3017              		.cfi_offset 6, -36
 3018              		.cfi_offset 5, -40
 3019              		.cfi_offset 4, -44
 3020              	.LCFI15:
 3021              		.cfi_def_cfa 11, 4
 3022 0ee8 74D04DE2 		sub	sp, sp, #116
 452:../reversi8.c **** 
 453:../reversi8.c **** 	 ////////////////////////////////////////////////////////////////////
 454:../reversi8.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 455:../reversi8.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 456:../reversi8.c **** 	 ////////////////////////////////////////////////////////////////////
 457:../reversi8.c **** 	char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
 458:../reversi8.c ****     {
 459:../reversi8.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 460:../reversi8.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 461:../reversi8.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 462:../reversi8.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 463:../reversi8.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 464:../reversi8.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 465:../reversi8.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 466:../reversi8.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
 467:../reversi8.c ****     };
 468:../reversi8.c **** 
 469:../reversi8.c **** 
 470:../reversi8.c ****     int done;     // la máquina ha conseguido mover o no
 471:../reversi8.c ****     int move = 0; // el humano ha conseguido mover o no
 472:../reversi8.c ****     int blancas, negras; // número de fichas de cada color
 473:../reversi8.c ****     int fin = 0;  // fin vale 1 si el humano no ha podido mover
 474:../reversi8.c ****                   // (ha introducido un valor de movimiento con algún 8)
 475:../reversi8.c ****                   // y luego la máquina tampoco puede
 476:../reversi8.c ****     char f, c;    // fila y columna elegidas por la máquina para su movimiento
 477:../reversi8.c ****     volatile int tiempo = 0; // Para medidas de tiempo. Con volatile para que no se lo coma
 3023              		.loc 1 477 0
 3024 0eec 8C439FE5 		ldr	r4, .L213
 457:../reversi8.c **** 	char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
 3025              		.loc 1 457 0
 3026 0ef0 0010A0E3 		mov	r1, #0
 3027 0ef4 4020A0E3 		mov	r2, #64
 457:../reversi8.c **** 	char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
 3028              		.loc 1 457 0
 3029 0ef8 74004BE2 		sub	r0, fp, #116
 3030 0efc FEFFFFEB 		bl	memset
 3031              	.LVL213:
 3032              		.loc 1 477 0
 3033 0f00 0030A0E3 		mov	r3, #0
 3034              	.LBB130:
 3035              	.LBB131:
 128:../reversi8.c ****     tablero[3][3] = FICHA_BLANCA;
 3036              		.loc 1 128 0
 3037 0f04 0120A0E3 		mov	r2, #1
 130:../reversi8.c ****     tablero[3][4] = FICHA_NEGRA;
 3038              		.loc 1 130 0
 3039 0f08 0210A0E3 		mov	r1, #2
 3040              	.LBE131:
 3041              	.LBE130:
 108:../reversi8.c ****             tablero[i][j] = CASILLA_VACIA;
 3042              		.loc 1 108 0
 3043 0f0c 203084E5 		str	r3, [r4, #32]
 3044 0f10 243084E5 		str	r3, [r4, #36]
 3045 0f14 283084E5 		str	r3, [r4, #40]
 3046 0f18 2C3084E5 		str	r3, [r4, #44]
 3047              		.loc 1 477 0
 3048 0f1c 30300BE5 		str	r3, [fp, #-48]
 3049              	.LVL214:
 108:../reversi8.c ****             tablero[i][j] = CASILLA_VACIA;
 3050              		.loc 1 108 0
 3051 0f20 083084E5 		str	r3, [r4, #8]
 3052 0f24 0C3084E5 		str	r3, [r4, #12]
 3053              	.LVL215:
 3054 0f28 103084E5 		str	r3, [r4, #16]
 3055 0f2c 143084E5 		str	r3, [r4, #20]
 3056 0f30 183084E5 		str	r3, [r4, #24]
 3057 0f34 1C3084E5 		str	r3, [r4, #28]
 3058 0f38 303084E5 		str	r3, [r4, #48]
 3059 0f3c 343084E5 		str	r3, [r4, #52]
 3060 0f40 383084E5 		str	r3, [r4, #56]
 3061 0f44 3C3084E5 		str	r3, [r4, #60]
 3062 0f48 403084E5 		str	r3, [r4, #64]
 3063 0f4c 443084E5 		str	r3, [r4, #68]
 3064              	.LVL216:
 3065              	.LBB133:
 3066              	.LBB132:
 128:../reversi8.c ****     tablero[3][3] = FICHA_BLANCA;
 3067              		.loc 1 128 0
 3068 0f50 2320C4E5 		strb	r2, [r4, #35]
 129:../reversi8.c ****     tablero[4][4] = FICHA_BLANCA;
 3069              		.loc 1 129 0
 3070 0f54 2C20C4E5 		strb	r2, [r4, #44]
 130:../reversi8.c ****     tablero[3][4] = FICHA_NEGRA;
 3071              		.loc 1 130 0
 3072 0f58 2410C4E5 		strb	r1, [r4, #36]
 131:../reversi8.c ****     tablero[4][3] = FICHA_NEGRA;
 3073              		.loc 1 131 0
 3074 0f5c 2B10C4E5 		strb	r1, [r4, #43]
 133:../reversi8.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 3075              		.loc 1 133 0
 3076 0f60 59104BE5 		strb	r1, [fp, #-89]
 134:../reversi8.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 3077              		.loc 1 134 0
 3078 0f64 50104BE5 		strb	r1, [fp, #-80]
 135:../reversi8.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 3079              		.loc 1 135 0
 3080 0f68 58104BE5 		strb	r1, [fp, #-88]
 136:../reversi8.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 3081              		.loc 1 136 0
 3082 0f6c 51104BE5 		strb	r1, [fp, #-81]
 139:../reversi8.c ****     candidatas[2][2] = SI;
 3083              		.loc 1 139 0
 3084 0f70 62204BE5 		strb	r2, [fp, #-98]
 140:../reversi8.c ****     candidatas[2][3] = SI;
 3085              		.loc 1 140 0
 3086 0f74 61204BE5 		strb	r2, [fp, #-97]
 141:../reversi8.c ****     candidatas[2][4] = SI;
 3087              		.loc 1 141 0
 3088 0f78 60204BE5 		strb	r2, [fp, #-96]
 142:../reversi8.c ****     candidatas[2][5] = SI;
 3089              		.loc 1 142 0
 3090 0f7c 5F204BE5 		strb	r2, [fp, #-95]
 143:../reversi8.c ****     candidatas[3][2] = SI;
 3091              		.loc 1 143 0
 3092 0f80 5A204BE5 		strb	r2, [fp, #-90]
 144:../reversi8.c ****     candidatas[3][5] = SI;
 3093              		.loc 1 144 0
 3094 0f84 57204BE5 		strb	r2, [fp, #-87]
 145:../reversi8.c ****     candidatas[4][2] = SI;
 3095              		.loc 1 145 0
 3096 0f88 52204BE5 		strb	r2, [fp, #-82]
 146:../reversi8.c ****     candidatas[4][5] = SI;
 3097              		.loc 1 146 0
 3098 0f8c 4F204BE5 		strb	r2, [fp, #-79]
 147:../reversi8.c ****     candidatas[5][2] = SI;
 3099              		.loc 1 147 0
 3100 0f90 4A204BE5 		strb	r2, [fp, #-74]
 148:../reversi8.c ****     candidatas[5][3] = SI;
 3101              		.loc 1 148 0
 3102 0f94 49204BE5 		strb	r2, [fp, #-73]
 149:../reversi8.c ****     candidatas[5][4] = SI;
 3103              		.loc 1 149 0
 3104 0f98 48204BE5 		strb	r2, [fp, #-72]
 150:../reversi8.c ****     candidatas[5][5] = SI;
 3105              		.loc 1 150 0
 3106 0f9c 47204BE5 		strb	r2, [fp, #-71]
 3107              	.LVL217:
 3108              	.L211:
 3109              	.LBE132:
 3110              	.LBE133:
 3111              	.LBB134:
 3112              	.LBB135:
 161:../reversi8.c **** 	autoasignar();
 3113              		.loc 1 161 0
 3114 0fa0 FEFFFFEB 		bl	autoasignar
 3115              	.L185:
 162:../reversi8.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 3116              		.loc 1 162 0
 3117 0fa4 0200D4E5 		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 3118 0fa8 000050E3 		cmp	r0, #0
 3119 0fac FCFFFF0A 		beq	.L185
 164:../reversi8.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 3120              		.loc 1 164 0
 3121 0fb0 C8229FE5 		ldr	r2, .L213
 3122 0fb4 0080A0E3 		mov	r8, #0
 3123 0fb8 0280C2E5 		strb	r8, [r2, #2]
 3124              	.LBE135:
 3125              	.LBE134:
 478:../reversi8.c ****     						 // el compilador en -O3
 479:../reversi8.c **** 
 480:../reversi8.c ****     init_table(tablero, candidatas);
 481:../reversi8.c **** 
 482:../reversi8.c ****     while (fin == 0)
 483:../reversi8.c ****     {
 484:../reversi8.c ****         move = 0;
 485:../reversi8.c ****         esperar_mov(&ready);
 486:../reversi8.c ****         // si la fila o columna son 8 asumimos que el jugador no puede mover
 487:../reversi8.c ****         if (((fila) != DIM) && ((columna) != DIM))
 3126              		.loc 1 487 0
 3127 0fbc 0090D2E5 		ldrb	r9, [r2, #0]	@ zero_extendqisi2
 3128 0fc0 080059E3 		cmp	r9, #8
 484:../reversi8.c ****         move = 0;
 3129              		.loc 1 484 0
 3130 0fc4 0080A003 		moveq	r8, #0
 3131 0fc8 98800B05 		streq	r8, [fp, #-152]
 3132              		.loc 1 487 0
 3133 0fcc 1600000A 		beq	.L186
 3134              		.loc 1 487 0 is_stmt 0 discriminator 1
 3135 0fd0 01C0D2E5 		ldrb	ip, [r2, #1]	@ zero_extendqisi2
 3136 0fd4 08005CE3 		cmp	ip, #8
 484:../reversi8.c ****         move = 0;
 3137              		.loc 1 484 0 is_stmt 1 discriminator 1
 3138 0fd8 0020A003 		moveq	r2, #0
 3139 0fdc 98200B05 		streq	r2, [fp, #-152]
 3140              		.loc 1 487 0 discriminator 1
 3141 0fe0 1100000A 		beq	.L186
 488:../reversi8.c ****         {
 489:../reversi8.c ****             tablero[fila][columna] = FICHA_NEGRA;
 3142              		.loc 1 489 0
 3143 0fe4 00C0D2E5 		ldrb	ip, [r2, #0]	@ zero_extendqisi2
 490:../reversi8.c ****             actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 3144              		.loc 1 490 0
 3145 0fe8 90329FE5 		ldr	r3, .L213
 489:../reversi8.c ****             tablero[fila][columna] = FICHA_NEGRA;
 3146              		.loc 1 489 0
 3147 0fec 0120D2E5 		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 3148 0ff0 8C9183E0 		add	r9, r3, ip, asl #3
 3149 0ff4 02E0A0E3 		mov	lr, #2
 3150 0ff8 028089E0 		add	r8, r9, r2
 3151              		.loc 1 490 0
 3152 0ffc 0000D3E5 		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 3153 1000 0E20A0E1 		mov	r2, lr
 3154 1004 0110D3E5 		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 489:../reversi8.c ****             tablero[fila][columna] = FICHA_NEGRA;
 3155              		.loc 1 489 0
 3156 1008 08E0C8E5 		strb	lr, [r8, #8]
 3157              		.loc 1 490 0
 3158 100c 04FCFFEB 		bl	actualizar_tablero.clone.0
 491:../reversi8.c ****             actualizar_candidatas(candidatas, fila, columna);
 3159              		.loc 1 491 0
 3160 1010 68329FE5 		ldr	r3, .L213
 3161 1014 74004BE2 		sub	r0, fp, #116
 3162              	.LVL218:
 3163 1018 0010D3E5 		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3164 101c 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 3165 1020 FEFFFFEB 		bl	actualizar_candidatas
 3166              	.LVL219:
 492:../reversi8.c ****             move = 1;
 3167              		.loc 1 492 0
 3168 1024 0120A0E3 		mov	r2, #1
 3169 1028 98200BE5 		str	r2, [fp, #-152]
 3170              	.LVL220:
 3171              	.L186:
 491:../reversi8.c ****             actualizar_candidatas(candidatas, fila, columna);
 3172              		.loc 1 491 0
 3173 102c 50E29FE5 		ldr	lr, .L213+4
 3174              	.LBB136:
 3175              	.LBB138:
 3176              	.LBB142:
 3177              	.LBB145:
 3178              	.LBB147:
 3179              	.LBB149:
 330:../reversi8.c ****     for (i=0; i<DIM; i++)
 3180              		.loc 1 330 0
 3181 1030 0000A0E3 		mov	r0, #0
 322:../reversi8.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 3182              		.loc 1 322 0
 3183 1034 0010E0E3 		mvn	r1, #0
 330:../reversi8.c ****     for (i=0; i<DIM; i++)
 3184              		.loc 1 330 0
 3185 1038 84000BE5 		str	r0, [fp, #-132]
 3186              	.LBE149:
 3187              	.LBE147:
 3188              	.LBE145:
 3189              	.LBE142:
 3190              	.LBE138:
 3191              	.LBE136:
 491:../reversi8.c ****             actualizar_candidatas(candidatas, fila, columna);
 3192              		.loc 1 491 0
 3193 103c 88E00BE5 		str	lr, [fp, #-136]
 3194              	.LBB161:
 3195              	.LBB159:
 3196              	.LBB158:
 3197              	.LBB144:
 3198              	.LBB146:
 3199              	.LBB150:
 204:../reversi8.c ****         *posicion_valida = 1;
 3200              		.loc 1 204 0
 3201 1040 94000BE5 		str	r0, [fp, #-148]
 324:../reversi8.c ****     char mejor = 0; // almacena el mejor valor encontrado
 3202              		.loc 1 324 0
 3203 1044 8C000BE5 		str	r0, [fp, #-140]
 322:../reversi8.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 3204              		.loc 1 322 0
 3205 1048 90100BE5 		str	r1, [fp, #-144]
 3206              	.LVL221:
 3207              	.L187:
 3208              	.LBE150:
 3209              	.LBE146:
 3210              	.LBE144:
 3211              	.LBE158:
 450:../reversi8.c **** void reversi8()
 3212              		.loc 1 450 0
 3213 104c 84001BE5 		ldr	r0, [fp, #-132]
 336:../reversi8.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 3214              		.loc 1 336 0
 3215 1050 84301BE5 		ldr	r3, [fp, #-132]
 450:../reversi8.c **** void reversi8()
 3216              		.loc 1 450 0
 3217 1054 8091A0E1 		mov	r9, r0, asl #3
 3218 1058 012049E2 		sub	r2, r9, #1
 3219 105c 24829FE5 		ldr	r8, .L213+8
 3220 1060 74E04BE2 		sub	lr, fp, #116
 3221              	.LVL222:
 3222 1064 02108EE0 		add	r1, lr, r2
 336:../reversi8.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 3223              		.loc 1 336 0
 3224 1068 FFC003E2 		and	ip, r3, #255
 450:../reversi8.c **** void reversi8()
 3225              		.loc 1 450 0
 3226 106c 099088E0 		add	r9, r8, r9
 3227 1070 78100BE5 		str	r1, [fp, #-120]
 3228              	.LBE159:
 3229              	.LBE161:
 3230 1074 0080A0E3 		mov	r8, #0
 3231              	.LBB162:
 3232              	.LBB137:
 336:../reversi8.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 3233              		.loc 1 336 0
 3234 1078 80C00BE5 		str	ip, [fp, #-128]
 3235 107c 030000EA 		b	.L196
 3236              	.LVL223:
 3237              	.L188:
 332:../reversi8.c ****         for (j=0; j<DIM; j++)
 3238              		.loc 1 332 0
 3239 1080 018088E2 		add	r8, r8, #1
 3240              	.LVL224:
 3241 1084 080058E3 		cmp	r8, #8
 3242 1088 019089E2 		add	r9, r9, #1
 3243 108c 5400000A 		beq	.L212
 3244              	.LVL225:
 3245              	.L196:
 334:../reversi8.c ****             if (candidatas[i][j] == SI)
 3246              		.loc 1 334 0
 3247 1090 78C01BE5 		ldr	ip, [fp, #-120]
 3248 1094 0120FCE5 		ldrb	r2, [ip, #1]!	@ zero_extendqisi2
 3249 1098 010052E3 		cmp	r2, #1
 3250 109c 78C00BE5 		str	ip, [fp, #-120]
 3251 10a0 F6FFFF1A 		bne	.L188
 336:../reversi8.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 3252              		.loc 1 336 0
 3253 10a4 0070D9E5 		ldrb	r7, [r9, #0]	@ zero_extendqisi2
 3254 10a8 000057E3 		cmp	r7, #0
 3255 10ac F3FFFF1A 		bne	.L188
 3256 10b0 FF5008E2 		and	r5, r8, #255
 3257 10b4 7C500BE5 		str	r5, [fp, #-124]
 3258 10b8 08A0A0E1 		mov	sl, r8
 3259              	.LVL226:
 3260              	.L195:
 345:../reversi8.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 3261              		.loc 1 345 0
 3262 10bc C8E19FE5 		ldr	lr, .L213+12
 3263              	.LBB141:
 3264              	.LBB156:
 232:../reversi8.c **** 	FA = FA + SF;
 3265              		.loc 1 232 0
 3266 10c0 80101BE5 		ldr	r1, [fp, #-128]
 3267              	.LBE156:
 3268              	.LBE141:
 345:../reversi8.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 3269              		.loc 1 345 0
 3270 10c4 0760DEE7 		ldrb	r6, [lr, r7]	@ zero_extendqisi2
 3271              	.LVL227:
 346:../reversi8.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 3272              		.loc 1 346 0
 3273 10c8 08008EE2 		add	r0, lr, #8
 3274              	.LBB140:
 3275              	.LBB143:
 232:../reversi8.c **** 	FA = FA + SF;
 3276              		.loc 1 232 0
 3277 10cc 013086E0 		add	r3, r6, r1
 3278              	.LBE143:
 3279              	.LBE140:
 346:../reversi8.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 3280              		.loc 1 346 0
 3281 10d0 0750D0E7 		ldrb	r5, [r0, r7]	@ zero_extendqisi2
 3282              	.LVL228:
 3283              	.LBB139:
 3284              	.LBB157:
 233:../reversi8.c **** 	CA = CA + SC;
 3285              		.loc 1 233 0
 3286 10d4 7C101BE5 		ldr	r1, [fp, #-124]
 3287 10d8 018085E0 		add	r8, r5, r1
 232:../reversi8.c **** 	FA = FA + SF;
 3288              		.loc 1 232 0
 3289 10dc FF2003E2 		and	r2, r3, #255
 3290              	.LVL229:
 233:../reversi8.c **** 	CA = CA + SC;
 3291              		.loc 1 233 0
 3292 10e0 FF3008E2 		and	r3, r8, #255
 3293              	.LVL230:
 3294              	.LBB152:
 3295              	.LBB153:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 3296              		.loc 1 202 0
 3297 10e4 070053E3 		cmp	r3, #7
 3298 10e8 07005293 		cmpls	r2, #7
 3299 10ec 0000A083 		movhi	r0, #0
 3300 10f0 0100A093 		movls	r0, #1
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 3301              		.loc 1 210 0
 3302 10f4 0010A081 		movhi	r1, r0
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 3303              		.loc 1 202 0
 3304 10f8 0500008A 		bhi	.L189
 3305 10fc 828184E0 		add	r8, r4, r2, asl #3
 3306 1100 03C088E0 		add	ip, r8, r3
 3307 1104 0810DCE5 		ldrb	r1, [ip, #8]	@ zero_extendqisi2
 204:../reversi8.c ****         *posicion_valida = 1;
 3308              		.loc 1 204 0
 3309 1108 000051E3 		cmp	r1, #0
 3310 110c 0100A001 		moveq	r0, r1
 3311 1110 0100A013 		movne	r0, #1
 3312              	.L189:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 3313              		.loc 1 202 0
 3314 1114 062082E0 		add	r2, r2, r6
 3315              	.LVL231:
 3316 1118 053083E0 		add	r3, r3, r5
 3317              	.LVL232:
 3318 111c FF2002E2 		and	r2, r2, #255
 3319 1120 FF3003E2 		and	r3, r3, #255
 3320              	.LBE153:
 3321              	.LBE152:
 3322              	.LBB154:
 3323              	.LBB148:
 204:../reversi8.c ****         *posicion_valida = 1;
 3324              		.loc 1 204 0
 3325 1124 00C0A0E3 		mov	ip, #0
 3326 1128 0780A0E1 		mov	r8, r7
 3327 112c 100000EA 		b	.L190
 3328              	.LVL233:
 3329              	.L192:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 3330              		.loc 1 202 0
 3331 1130 070053E3 		cmp	r3, #7
 3332 1134 07005293 		cmpls	r2, #7
 3333 1138 0000A083 		movhi	r0, #0
 3334 113c 0100A093 		movls	r0, #1
 3335              	.LBE148:
 3336              	.LBE154:
 241:../reversi8.c **** 		*longitud = *longitud + 1;
 3337              		.loc 1 241 0
 3338 1140 01C08CE2 		add	ip, ip, #1
 3339              	.LVL234:
 3340              	.LBB155:
 3341              	.LBB151:
 210:../reversi8.c ****         ficha = CASILLA_VACIA;
 3342              		.loc 1 210 0
 3343 1144 0010A081 		movhi	r1, r0
 3344              	.LVL235:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 3345              		.loc 1 202 0
 3346 1148 0500008A 		bhi	.L191
 3347 114c 821184E0 		add	r1, r4, r2, asl #3
 3348 1150 037081E0 		add	r7, r1, r3
 3349 1154 0810D7E5 		ldrb	r1, [r7, #8]	@ zero_extendqisi2
 204:../reversi8.c ****         *posicion_valida = 1;
 3350              		.loc 1 204 0
 3351 1158 000051E3 		cmp	r1, #0
 3352 115c 0100A001 		moveq	r0, r1
 3353 1160 0100A013 		movne	r0, #1
 3354              	.L191:
 202:../reversi8.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 3355              		.loc 1 202 0
 3356 1164 062082E0 		add	r2, r2, r6
 3357              	.LVL236:
 3358 1168 05E083E0 		add	lr, r3, r5
 3359 116c FF2002E2 		and	r2, r2, #255
 3360 1170 FF300EE2 		and	r3, lr, #255
 3361              	.LVL237:
 3362              	.L190:
 3363              	.LBE151:
 3364              	.LBE155:
 235:../reversi8.c **** 	while ((posicion_valida == 1) && (casilla != color))
 3365              		.loc 1 235 0
 3366 1174 FF0000E2 		and	r0, r0, #255
 3367              	.LVL238:
 3368 1178 010051E3 		cmp	r1, #1
 3369 117c 0070A003 		moveq	r7, #0
 3370 1180 01700012 		andne	r7, r0, #1
 3371 1184 000057E3 		cmp	r7, #0
 3372 1188 E8FFFF1A 		bne	.L192
 246:../reversi8.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0)) {
 3373              		.loc 1 246 0
 3374 118c 010051E3 		cmp	r1, #1
 3375 1190 0000A013 		movne	r0, #0
 3376 1194 01000002 		andeq	r0, r0, #1
 3377 1198 000050E3 		cmp	r0, #0
 3378 119c 0870A0E1 		mov	r7, r8
 3379 11a0 2000000A 		beq	.L193
 3380 11a4 00005CE3 		cmp	ip, #0
 3381 11a8 1E00000A 		beq	.L193
 3382              	.LBE157:
 3383              	.LBE139:
 357:../reversi8.c ****                             if (tabla_valor[i][j] > mejor)
 3384              		.loc 1 357 0
 3385              	.LVL239:
 3386 11ac 8C004BE2 		sub	r0, fp, #140
 3387 11b0 011090E8 		ldmia	r0, {r0, ip}	@ phole ldm
 3388 11b4 0A30DCE7 		ldrb	r3, [ip, sl]	@ zero_extendqisi2
 3389 11b8 000053E1 		cmp	r3, r0
 3390 11bc 0A80A0E1 		mov	r8, sl
 3391              	.LVL240:
 3392 11c0 AEFFFF9A 		bls	.L188
 3393 11c4 8C300BE5 		str	r3, [fp, #-140]
 332:../reversi8.c ****         for (j=0; j<DIM; j++)
 3394              		.loc 1 332 0
 3395 11c8 018088E2 		add	r8, r8, #1
 357:../reversi8.c ****                             if (tabla_valor[i][j] > mejor)
 3396              		.loc 1 357 0
 3397 11cc 84301BE5 		ldr	r3, [fp, #-132]
 332:../reversi8.c ****         for (j=0; j<DIM; j++)
 3398              		.loc 1 332 0
 3399 11d0 080058E3 		cmp	r8, #8
 357:../reversi8.c ****                             if (tabla_valor[i][j] > mejor)
 3400              		.loc 1 357 0
 3401 11d4 94A00BE5 		str	sl, [fp, #-148]
 3402 11d8 90300BE5 		str	r3, [fp, #-144]
 3403              	.LVL241:
 332:../reversi8.c ****         for (j=0; j<DIM; j++)
 3404              		.loc 1 332 0
 3405 11dc 019089E2 		add	r9, r9, #1
 3406 11e0 AAFFFF1A 		bne	.L196
 3407              	.LVL242:
 3408              	.L212:
 330:../reversi8.c ****     for (i=0; i<DIM; i++)
 3409              		.loc 1 330 0
 3410 11e4 84001BE5 		ldr	r0, [fp, #-132]
 3411 11e8 88E01BE5 		ldr	lr, [fp, #-136]
 3412 11ec 012080E2 		add	r2, r0, #1
 3413 11f0 08108EE2 		add	r1, lr, #8
 3414 11f4 080052E3 		cmp	r2, #8
 3415 11f8 84200BE5 		str	r2, [fp, #-132]
 3416              	.LVL243:
 3417 11fc 88100BE5 		str	r1, [fp, #-136]
 3418 1200 91FFFF1A 		bne	.L187
 3419              	.LVL244:
 3420              	.LBE137:
 3421              	.LBE162:
 493:../reversi8.c ****         }
 494:../reversi8.c **** 
 495:../reversi8.c ****         // escribe el movimiento en las variables globales fila columna
 496:../reversi8.c ****         done = elegir_mov(candidatas, tablero, &f, &c);
 497:../reversi8.c ****         if (done == -1)
 3422              		.loc 1 497 0
 3423 1204 90C01BE5 		ldr	ip, [fp, #-144]
 3424 1208 01007CE3 		cmn	ip, #1
 3425 120c 0A00001A 		bne	.L198
 498:../reversi8.c ****         {
 499:../reversi8.c ****             if (move == 0)
 3426              		.loc 1 499 0
 3427 1210 98301BE5 		ldr	r3, [fp, #-152]
 3428 1214 000053E3 		cmp	r3, #0
 3429 1218 60FFFF1A 		bne	.L211
 500:../reversi8.c ****                 fin = 1;
 501:../reversi8.c ****         }
 502:../reversi8.c ****         else
 503:../reversi8.c ****         {
 504:../reversi8.c ****             tablero[f][c] = FICHA_BLANCA;
 505:../reversi8.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 506:../reversi8.c ****             actualizar_candidatas(candidatas, f, c);
 507:../reversi8.c ****         }
 508:../reversi8.c ****     }
 509:../reversi8.c ****     contar(tablero, &blancas, &negras);
 510:../reversi8.c **** 
 511:../reversi8.c **** }
 3430              		.loc 1 511 0
 3431 121c 28D04BE2 		sub	sp, fp, #40
 3432 1220 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 3433 1224 1EFF2FE1 		bx	lr
 3434              	.LVL245:
 3435              	.L193:
 3436              	.LBB163:
 3437              	.LBB160:
 364:../reversi8.c ****                         k++;
 3438              		.loc 1 364 0
 3439 1228 017087E2 		add	r7, r7, #1
 3440              	.LVL246:
 343:../reversi8.c ****                     while ((found == 0) && (k < DIM))
 3441              		.loc 1 343 0
 3442 122c 080057E3 		cmp	r7, #8
 3443 1230 A1FFFF1A 		bne	.L195
 3444 1234 0A80A0E1 		mov	r8, sl
 3445 1238 90FFFFEA 		b	.L188
 3446              	.LVL247:
 3447              	.L198:
 371:../reversi8.c ****     *f = (char) mf;
 3448              		.loc 1 371 0
 3449 123c 94504BE2 		sub	r5, fp, #148
 3450 1240 600095E8 		ldmia	r5, {r5, r6}	@ phole ldm
 3451 1244 FF6006E2 		and	r6, r6, #255
 372:../reversi8.c ****     *c = (char) mc;
 3452              		.loc 1 372 0
 3453 1248 FF5005E2 		and	r5, r5, #255
 3454              	.LBE160:
 3455              	.LBE163:
 504:../reversi8.c ****             tablero[f][c] = FICHA_BLANCA;
 3456              		.loc 1 504 0
 3457 124c 861184E0 		add	r1, r4, r6, asl #3
 3458 1250 0190A0E3 		mov	r9, #1
 3459 1254 058081E0 		add	r8, r1, r5
 3460              	.LVL248:
 505:../reversi8.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 3461              		.loc 1 505 0
 3462 1258 0920A0E1 		mov	r2, r9
 3463              	.LVL249:
 3464 125c 0510A0E1 		mov	r1, r5
 3465 1260 0600A0E1 		mov	r0, r6
 504:../reversi8.c ****             tablero[f][c] = FICHA_BLANCA;
 3466              		.loc 1 504 0
 3467 1264 0890C8E5 		strb	r9, [r8, #8]
 505:../reversi8.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 3468              		.loc 1 505 0
 3469 1268 6DFBFFEB 		bl	actualizar_tablero.clone.0
 506:../reversi8.c ****             actualizar_candidatas(candidatas, f, c);
 3470              		.loc 1 506 0
 3471 126c 74004BE2 		sub	r0, fp, #116
 3472              	.LVL250:
 3473 1270 0610A0E1 		mov	r1, r6
 3474 1274 0520A0E1 		mov	r2, r5
 3475 1278 FEFFFFEB 		bl	actualizar_candidatas
 3476              	.LVL251:
 3477 127c 47FFFFEA 		b	.L211
 3478              	.L214:
 3479              		.align	2
 3480              	.L213:
 3481 1280 00000000 		.word	.LANCHOR0
 3482 1284 10000000 		.word	.LANCHOR1+16
 3483 1288 08000000 		.word	.LANCHOR0+8
 3484 128c 00000000 		.word	.LANCHOR1
 3485              		.cfi_endproc
 3486              	.LFE10:
 3488              		.align	2
 3489              		.global	matriscopy
 3491              	matriscopy:
 3492              	.LFB11:
 512:../reversi8.c **** 
 513:../reversi8.c **** void matriscopy (int destmat[][DIM], int srcmat[][DIM])
 514:../reversi8.c **** {
 3493              		.loc 1 514 0
 3494              		.cfi_startproc
 3495              		@ Function supports interworking.
 3496              		@ args = 0, pretend = 0, frame = 0
 3497              		@ frame_needed = 0, uses_anonymous_args = 0
 3498              		@ link register save eliminated.
 3499              	.LVL252:
 515:../reversi8.c ****   int i, j;
 516:../reversi8.c ****   for (i=0; i<DIM; i=i+1) /* rad-nr */
 517:../reversi8.c ****     for (j=0; j<DIM; j=j+1) /* kolumn-nr */
 518:../reversi8.c ****       destmat[i][j] = srcmat[i][j];
 3500              		.loc 1 518 0
 3501 1290 002091E5 		ldr	r2, [r1, #0]
 3502 1294 002080E5 		str	r2, [r0, #0]
 3503              	.LVL253:
 3504 1298 043091E5 		ldr	r3, [r1, #4]
 3505 129c 043080E5 		str	r3, [r0, #4]
 3506              	.LVL254:
 3507 12a0 08C091E5 		ldr	ip, [r1, #8]
 3508 12a4 08C080E5 		str	ip, [r0, #8]
 3509              	.LVL255:
 3510 12a8 0C2091E5 		ldr	r2, [r1, #12]
 3511 12ac 0C2080E5 		str	r2, [r0, #12]
 3512              	.LVL256:
 3513 12b0 103091E5 		ldr	r3, [r1, #16]
 3514 12b4 103080E5 		str	r3, [r0, #16]
 3515              	.LVL257:
 3516 12b8 14C091E5 		ldr	ip, [r1, #20]
 3517 12bc 14C080E5 		str	ip, [r0, #20]
 3518              	.LVL258:
 3519 12c0 182091E5 		ldr	r2, [r1, #24]
 3520 12c4 182080E5 		str	r2, [r0, #24]
 3521              	.LVL259:
 3522 12c8 1C3091E5 		ldr	r3, [r1, #28]
 3523 12cc 1C3080E5 		str	r3, [r0, #28]
 3524              	.LVL260:
 3525 12d0 20C091E5 		ldr	ip, [r1, #32]
 3526 12d4 20C080E5 		str	ip, [r0, #32]
 3527              	.LVL261:
 3528 12d8 242091E5 		ldr	r2, [r1, #36]
 3529 12dc 242080E5 		str	r2, [r0, #36]
 3530              	.LVL262:
 3531 12e0 283091E5 		ldr	r3, [r1, #40]
 3532 12e4 283080E5 		str	r3, [r0, #40]
 3533              	.LVL263:
 3534 12e8 2CC091E5 		ldr	ip, [r1, #44]
 3535 12ec 2CC080E5 		str	ip, [r0, #44]
 3536              	.LVL264:
 3537 12f0 302091E5 		ldr	r2, [r1, #48]
 3538 12f4 302080E5 		str	r2, [r0, #48]
 3539              	.LVL265:
 3540 12f8 343091E5 		ldr	r3, [r1, #52]
 3541 12fc 343080E5 		str	r3, [r0, #52]
 3542              	.LVL266:
 3543 1300 38C091E5 		ldr	ip, [r1, #56]
 3544 1304 38C080E5 		str	ip, [r0, #56]
 3545              	.LVL267:
 3546 1308 3C2091E5 		ldr	r2, [r1, #60]
 3547 130c 3C2080E5 		str	r2, [r0, #60]
 3548              	.LVL268:
 3549 1310 403091E5 		ldr	r3, [r1, #64]
 3550 1314 403080E5 		str	r3, [r0, #64]
 3551              	.LVL269:
 3552 1318 44C091E5 		ldr	ip, [r1, #68]
 3553 131c 44C080E5 		str	ip, [r0, #68]
 3554              	.LVL270:
 3555 1320 482091E5 		ldr	r2, [r1, #72]
 3556 1324 482080E5 		str	r2, [r0, #72]
 3557              	.LVL271:
 3558 1328 4CC091E5 		ldr	ip, [r1, #76]
 3559 132c 4CC080E5 		str	ip, [r0, #76]
 3560              	.LVL272:
 3561 1330 503091E5 		ldr	r3, [r1, #80]
 3562 1334 503080E5 		str	r3, [r0, #80]
 3563              	.LVL273:
 3564 1338 542091E5 		ldr	r2, [r1, #84]
 3565 133c 542080E5 		str	r2, [r0, #84]
 3566              	.LVL274:
 3567 1340 58C091E5 		ldr	ip, [r1, #88]
 3568 1344 58C080E5 		str	ip, [r0, #88]
 3569              	.LVL275:
 3570 1348 5C3091E5 		ldr	r3, [r1, #92]
 3571 134c 5C3080E5 		str	r3, [r0, #92]
 3572              	.LVL276:
 3573 1350 602091E5 		ldr	r2, [r1, #96]
 3574 1354 602080E5 		str	r2, [r0, #96]
 3575              	.LVL277:
 3576 1358 64C091E5 		ldr	ip, [r1, #100]
 3577 135c 64C080E5 		str	ip, [r0, #100]
 3578              	.LVL278:
 3579 1360 683091E5 		ldr	r3, [r1, #104]
 3580 1364 683080E5 		str	r3, [r0, #104]
 3581              	.LVL279:
 3582 1368 6C2091E5 		ldr	r2, [r1, #108]
 3583 136c 6C2080E5 		str	r2, [r0, #108]
 3584              	.LVL280:
 3585 1370 70C091E5 		ldr	ip, [r1, #112]
 3586 1374 70C080E5 		str	ip, [r0, #112]
 3587              	.LVL281:
 3588 1378 743091E5 		ldr	r3, [r1, #116]
 3589 137c 743080E5 		str	r3, [r0, #116]
 3590              	.LVL282:
 3591 1380 782091E5 		ldr	r2, [r1, #120]
 3592 1384 782080E5 		str	r2, [r0, #120]
 3593              	.LVL283:
 3594 1388 7CC091E5 		ldr	ip, [r1, #124]
 3595 138c 7CC080E5 		str	ip, [r0, #124]
 3596              	.LVL284:
 3597 1390 803091E5 		ldr	r3, [r1, #128]
 3598 1394 803080E5 		str	r3, [r0, #128]
 3599              	.LVL285:
 3600 1398 842091E5 		ldr	r2, [r1, #132]
 3601 139c 842080E5 		str	r2, [r0, #132]
 3602              	.LVL286:
 3603 13a0 88C091E5 		ldr	ip, [r1, #136]
 3604 13a4 88C080E5 		str	ip, [r0, #136]
 3605              	.LVL287:
 3606 13a8 8C2091E5 		ldr	r2, [r1, #140]
 3607 13ac 8C2080E5 		str	r2, [r0, #140]
 3608              	.LVL288:
 3609 13b0 903091E5 		ldr	r3, [r1, #144]
 3610 13b4 903080E5 		str	r3, [r0, #144]
 3611              	.LVL289:
 3612 13b8 94C091E5 		ldr	ip, [r1, #148]
 3613 13bc 94C080E5 		str	ip, [r0, #148]
 3614              	.LVL290:
 3615 13c0 982091E5 		ldr	r2, [r1, #152]
 3616 13c4 982080E5 		str	r2, [r0, #152]
 3617              	.LVL291:
 3618 13c8 9C3091E5 		ldr	r3, [r1, #156]
 3619 13cc 9C3080E5 		str	r3, [r0, #156]
 3620              	.LVL292:
 3621 13d0 A0C091E5 		ldr	ip, [r1, #160]
 3622 13d4 A0C080E5 		str	ip, [r0, #160]
 3623              	.LVL293:
 3624 13d8 A42091E5 		ldr	r2, [r1, #164]
 3625 13dc A42080E5 		str	r2, [r0, #164]
 3626              	.LVL294:
 3627 13e0 A83091E5 		ldr	r3, [r1, #168]
 3628 13e4 A83080E5 		str	r3, [r0, #168]
 3629              	.LVL295:
 3630 13e8 ACC091E5 		ldr	ip, [r1, #172]
 3631 13ec ACC080E5 		str	ip, [r0, #172]
 3632              	.LVL296:
 3633 13f0 B02091E5 		ldr	r2, [r1, #176]
 3634 13f4 B02080E5 		str	r2, [r0, #176]
 3635              	.LVL297:
 3636 13f8 B43091E5 		ldr	r3, [r1, #180]
 3637 13fc B43080E5 		str	r3, [r0, #180]
 3638              	.LVL298:
 3639 1400 B8C091E5 		ldr	ip, [r1, #184]
 3640 1404 B8C080E5 		str	ip, [r0, #184]
 3641              	.LVL299:
 3642 1408 BC2091E5 		ldr	r2, [r1, #188]
 3643 140c BC2080E5 		str	r2, [r0, #188]
 3644              	.LVL300:
 3645 1410 C03091E5 		ldr	r3, [r1, #192]
 3646 1414 C03080E5 		str	r3, [r0, #192]
 3647              	.LVL301:
 3648 1418 C4C091E5 		ldr	ip, [r1, #196]
 3649 141c C4C080E5 		str	ip, [r0, #196]
 3650              	.LVL302:
 3651 1420 C82091E5 		ldr	r2, [r1, #200]
 3652 1424 C82080E5 		str	r2, [r0, #200]
 3653              	.LVL303:
 3654 1428 CC3091E5 		ldr	r3, [r1, #204]
 3655 142c CC3080E5 		str	r3, [r0, #204]
 3656              	.LVL304:
 3657 1430 D0C091E5 		ldr	ip, [r1, #208]
 3658 1434 D0C080E5 		str	ip, [r0, #208]
 3659              	.LVL305:
 3660 1438 D42091E5 		ldr	r2, [r1, #212]
 3661 143c D42080E5 		str	r2, [r0, #212]
 3662              	.LVL306:
 3663 1440 D83091E5 		ldr	r3, [r1, #216]
 3664 1444 D83080E5 		str	r3, [r0, #216]
 3665              	.LVL307:
 3666 1448 DCC091E5 		ldr	ip, [r1, #220]
 3667 144c DCC080E5 		str	ip, [r0, #220]
 3668              	.LVL308:
 3669 1450 E02091E5 		ldr	r2, [r1, #224]
 3670 1454 E02080E5 		str	r2, [r0, #224]
 3671              	.LVL309:
 3672 1458 E43091E5 		ldr	r3, [r1, #228]
 3673 145c E43080E5 		str	r3, [r0, #228]
 3674              	.LVL310:
 3675 1460 E8C091E5 		ldr	ip, [r1, #232]
 3676 1464 E8C080E5 		str	ip, [r0, #232]
 3677              	.LVL311:
 3678 1468 EC2091E5 		ldr	r2, [r1, #236]
 3679 146c EC2080E5 		str	r2, [r0, #236]
 3680              	.LVL312:
 3681 1470 F03091E5 		ldr	r3, [r1, #240]
 3682 1474 F03080E5 		str	r3, [r0, #240]
 3683              	.LVL313:
 3684 1478 F4C091E5 		ldr	ip, [r1, #244]
 3685 147c F4C080E5 		str	ip, [r0, #244]
 3686              	.LVL314:
 3687 1480 F82091E5 		ldr	r2, [r1, #248]
 3688 1484 F82080E5 		str	r2, [r0, #248]
 3689              	.LVL315:
 3690 1488 FC3091E5 		ldr	r3, [r1, #252]
 3691 148c FC3080E5 		str	r3, [r0, #252]
 3692              	.LVL316:
 519:../reversi8.c **** }
 3693              		.loc 1 519 0
 3694 1490 1EFF2FE1 		bx	lr
 3695              		.cfi_endproc
 3696              	.LFE11:
 3698              		.align	2
 3699              		.global	comprobar_tableros
 3701              	comprobar_tableros:
 3702              	.LFB12:
 520:../reversi8.c **** 
 521:../reversi8.c **** int comprobar_tableros(char tablero1[][DIM], char tablero2[][DIM], char tablero3[][DIM]) {
 3703              		.loc 1 521 0
 3704              		.cfi_startproc
 3705              		@ Function supports interworking.
 3706              		@ args = 0, pretend = 0, frame = 0
 3707              		@ frame_needed = 0, uses_anonymous_args = 0
 3708              		@ link register save eliminated.
 3709              	.LVL317:
 3710 1494 70002DE9 		stmfd	sp!, {r4, r5, r6}
 3711              	.LCFI16:
 3712              		.cfi_def_cfa_offset 12
 522:../reversi8.c **** 	int i = 0;
 523:../reversi8.c **** 	int j = 0;
 524:../reversi8.c **** 
 525:../reversi8.c **** 	for (i = 0; i < DIM; i++) {
 526:../reversi8.c **** 		for (j = 0; j < DIM; j++) {
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3713              		.loc 1 527 0
 3714 1498 00C0D0E5 		ldrb	ip, [r0, #0]	@ zero_extendqisi2
 3715 149c 0030D1E5 		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 3716 14a0 0C0053E1 		cmp	r3, ip
 528:../reversi8.c **** 				return TABLEROS_NO_IGUALES;
 3717              		.loc 1 528 0
 3718 14a4 0000A013 		movne	r0, #0
 3719              	.LVL318:
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3720              		.loc 1 527 0
 3721 14a8 3D02001A 		bne	.L217
 3722              		.cfi_offset 6, -4
 3723              		.cfi_offset 5, -8
 3724              		.cfi_offset 4, -12
 3725 14ac 00C0D2E5 		ldrb	ip, [r2, #0]	@ zero_extendqisi2
 3726 14b0 03005CE1 		cmp	ip, r3
 3727              		.loc 1 528 0
 3728 14b4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3729              		.loc 1 527 0
 3730 14b8 3902001A 		bne	.L217
 3731              	.LVL319:
 3732 14bc 01C0D0E5 		ldrb	ip, [r0, #1]	@ zero_extendqisi2
 3733 14c0 0130D1E5 		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3734 14c4 0C0053E1 		cmp	r3, ip
 3735              		.loc 1 528 0
 3736 14c8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3737              		.loc 1 527 0
 3738 14cc 3402001A 		bne	.L217
 3739 14d0 01C0D2E5 		ldrb	ip, [r2, #1]	@ zero_extendqisi2
 3740 14d4 03005CE1 		cmp	ip, r3
 3741              		.loc 1 528 0
 3742 14d8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3743              		.loc 1 527 0
 3744 14dc 3002001A 		bne	.L217
 3745              	.LVL320:
 3746 14e0 02C0D0E5 		ldrb	ip, [r0, #2]	@ zero_extendqisi2
 3747 14e4 0230D1E5 		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 3748 14e8 0C0053E1 		cmp	r3, ip
 3749              		.loc 1 528 0
 3750 14ec 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3751              		.loc 1 527 0
 3752 14f0 2B02001A 		bne	.L217
 3753 14f4 02C0D2E5 		ldrb	ip, [r2, #2]	@ zero_extendqisi2
 3754 14f8 03005CE1 		cmp	ip, r3
 3755              		.loc 1 528 0
 3756 14fc 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3757              		.loc 1 527 0
 3758 1500 2702001A 		bne	.L217
 3759              	.LVL321:
 3760 1504 03C0D0E5 		ldrb	ip, [r0, #3]	@ zero_extendqisi2
 3761 1508 0330D1E5 		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 3762 150c 0C0053E1 		cmp	r3, ip
 3763              		.loc 1 528 0
 3764 1510 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3765              		.loc 1 527 0
 3766 1514 2202001A 		bne	.L217
 3767 1518 03C0D2E5 		ldrb	ip, [r2, #3]	@ zero_extendqisi2
 3768 151c 03005CE1 		cmp	ip, r3
 3769              		.loc 1 528 0
 3770 1520 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3771              		.loc 1 527 0
 3772 1524 1E02001A 		bne	.L217
 3773              	.LVL322:
 3774 1528 04C0D0E5 		ldrb	ip, [r0, #4]	@ zero_extendqisi2
 3775 152c 0430D1E5 		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 3776 1530 0C0053E1 		cmp	r3, ip
 3777              		.loc 1 528 0
 3778 1534 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3779              		.loc 1 527 0
 3780 1538 1902001A 		bne	.L217
 3781 153c 04C0D2E5 		ldrb	ip, [r2, #4]	@ zero_extendqisi2
 3782 1540 03005CE1 		cmp	ip, r3
 3783              		.loc 1 528 0
 3784 1544 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3785              		.loc 1 527 0
 3786 1548 1502001A 		bne	.L217
 3787              	.LVL323:
 3788 154c 05C0D0E5 		ldrb	ip, [r0, #5]	@ zero_extendqisi2
 3789 1550 0530D1E5 		ldrb	r3, [r1, #5]	@ zero_extendqisi2
 3790 1554 0C0053E1 		cmp	r3, ip
 3791              		.loc 1 528 0
 3792 1558 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3793              		.loc 1 527 0
 3794 155c 1002001A 		bne	.L217
 3795 1560 05C0D2E5 		ldrb	ip, [r2, #5]	@ zero_extendqisi2
 3796 1564 03005CE1 		cmp	ip, r3
 3797              		.loc 1 528 0
 3798 1568 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3799              		.loc 1 527 0
 3800 156c 0C02001A 		bne	.L217
 3801              	.LVL324:
 3802 1570 06C0D0E5 		ldrb	ip, [r0, #6]	@ zero_extendqisi2
 3803 1574 0630D1E5 		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 3804 1578 0C0053E1 		cmp	r3, ip
 3805              		.loc 1 528 0
 3806 157c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3807              		.loc 1 527 0
 3808 1580 0702001A 		bne	.L217
 3809 1584 06C0D2E5 		ldrb	ip, [r2, #6]	@ zero_extendqisi2
 3810 1588 03005CE1 		cmp	ip, r3
 3811              		.loc 1 528 0
 3812 158c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3813              		.loc 1 527 0
 3814 1590 0302001A 		bne	.L217
 3815              	.LVL325:
 3816 1594 07C0D0E5 		ldrb	ip, [r0, #7]	@ zero_extendqisi2
 3817 1598 0730D1E5 		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 3818 159c 0C0053E1 		cmp	r3, ip
 3819              		.loc 1 528 0
 3820 15a0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3821              		.loc 1 527 0
 3822 15a4 FE01001A 		bne	.L217
 3823 15a8 07C0D2E5 		ldrb	ip, [r2, #7]	@ zero_extendqisi2
 3824 15ac 03005CE1 		cmp	ip, r3
 3825              		.loc 1 528 0
 3826 15b0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3827              		.loc 1 527 0
 3828 15b4 FA01001A 		bne	.L217
 3829              	.LVL326:
 3830 15b8 0830D0E5 		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 3831 15bc 0840D1E5 		ldrb	r4, [r1, #8]	@ zero_extendqisi2
 3832 15c0 030054E1 		cmp	r4, r3
 3833              		.loc 1 528 0
 3834 15c4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3835              		.loc 1 527 0
 3836 15c8 F501001A 		bne	.L217
 3837 15cc 0850D2E5 		ldrb	r5, [r2, #8]	@ zero_extendqisi2
 3838 15d0 040055E1 		cmp	r5, r4
 3839              		.loc 1 528 0
 3840 15d4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3841              		.loc 1 527 0
 3842 15d8 F101001A 		bne	.L217
 3843              	.LVL327:
 3844 15dc 0960D0E5 		ldrb	r6, [r0, #9]	@ zero_extendqisi2
 3845 15e0 0950D1E5 		ldrb	r5, [r1, #9]	@ zero_extendqisi2
 3846 15e4 060055E1 		cmp	r5, r6
 3847              		.loc 1 528 0
 3848 15e8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3849              		.loc 1 527 0
 3850 15ec EC01001A 		bne	.L217
 3851 15f0 0960D2E5 		ldrb	r6, [r2, #9]	@ zero_extendqisi2
 3852 15f4 050056E1 		cmp	r6, r5
 3853              		.loc 1 528 0
 3854 15f8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3855              		.loc 1 527 0
 3856 15fc E801001A 		bne	.L217
 3857              	.LVL328:
 3858 1600 0A60D0E5 		ldrb	r6, [r0, #10]	@ zero_extendqisi2
 3859 1604 0A50D1E5 		ldrb	r5, [r1, #10]	@ zero_extendqisi2
 3860 1608 060055E1 		cmp	r5, r6
 3861              		.loc 1 528 0
 3862 160c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3863              		.loc 1 527 0
 3864 1610 E301001A 		bne	.L217
 3865 1614 0A60D2E5 		ldrb	r6, [r2, #10]	@ zero_extendqisi2
 3866 1618 050056E1 		cmp	r6, r5
 3867              		.loc 1 528 0
 3868 161c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3869              		.loc 1 527 0
 3870 1620 DF01001A 		bne	.L217
 3871              	.LVL329:
 3872 1624 0B60D0E5 		ldrb	r6, [r0, #11]	@ zero_extendqisi2
 3873 1628 0B50D1E5 		ldrb	r5, [r1, #11]	@ zero_extendqisi2
 3874 162c 060055E1 		cmp	r5, r6
 3875              		.loc 1 528 0
 3876 1630 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3877              		.loc 1 527 0
 3878 1634 DA01001A 		bne	.L217
 3879 1638 0B60D2E5 		ldrb	r6, [r2, #11]	@ zero_extendqisi2
 3880 163c 050056E1 		cmp	r6, r5
 3881              		.loc 1 528 0
 3882 1640 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3883              		.loc 1 527 0
 3884 1644 D601001A 		bne	.L217
 3885              	.LVL330:
 3886 1648 0C60D0E5 		ldrb	r6, [r0, #12]	@ zero_extendqisi2
 3887 164c 0C50D1E5 		ldrb	r5, [r1, #12]	@ zero_extendqisi2
 3888 1650 060055E1 		cmp	r5, r6
 3889              		.loc 1 528 0
 3890 1654 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3891              		.loc 1 527 0
 3892 1658 D101001A 		bne	.L217
 3893 165c 0C60D2E5 		ldrb	r6, [r2, #12]	@ zero_extendqisi2
 3894 1660 050056E1 		cmp	r6, r5
 3895              		.loc 1 528 0
 3896 1664 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3897              		.loc 1 527 0
 3898 1668 CD01001A 		bne	.L217
 3899              	.LVL331:
 3900 166c 0D60D0E5 		ldrb	r6, [r0, #13]	@ zero_extendqisi2
 3901 1670 0D50D1E5 		ldrb	r5, [r1, #13]	@ zero_extendqisi2
 3902 1674 060055E1 		cmp	r5, r6
 3903              		.loc 1 528 0
 3904 1678 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3905              		.loc 1 527 0
 3906 167c C801001A 		bne	.L217
 3907 1680 0D60D2E5 		ldrb	r6, [r2, #13]	@ zero_extendqisi2
 3908 1684 050056E1 		cmp	r6, r5
 3909              		.loc 1 528 0
 3910 1688 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3911              		.loc 1 527 0
 3912 168c C401001A 		bne	.L217
 3913              	.LVL332:
 3914 1690 0E60D0E5 		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 3915 1694 0E50D1E5 		ldrb	r5, [r1, #14]	@ zero_extendqisi2
 3916 1698 060055E1 		cmp	r5, r6
 3917              		.loc 1 528 0
 3918 169c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3919              		.loc 1 527 0
 3920 16a0 BF01001A 		bne	.L217
 3921 16a4 0E60D2E5 		ldrb	r6, [r2, #14]	@ zero_extendqisi2
 3922 16a8 050056E1 		cmp	r6, r5
 3923              		.loc 1 528 0
 3924 16ac 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3925              		.loc 1 527 0
 3926 16b0 BB01001A 		bne	.L217
 3927              	.LVL333:
 3928 16b4 0FC0D0E5 		ldrb	ip, [r0, #15]	@ zero_extendqisi2
 3929 16b8 0F30D1E5 		ldrb	r3, [r1, #15]	@ zero_extendqisi2
 3930 16bc 0C0053E1 		cmp	r3, ip
 3931              		.loc 1 528 0
 3932 16c0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3933              		.loc 1 527 0
 3934 16c4 B601001A 		bne	.L217
 3935 16c8 0FC0D2E5 		ldrb	ip, [r2, #15]	@ zero_extendqisi2
 3936 16cc 03005CE1 		cmp	ip, r3
 3937              		.loc 1 528 0
 3938 16d0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3939              		.loc 1 527 0
 3940 16d4 B201001A 		bne	.L217
 3941              	.LVL334:
 3942 16d8 1030D0E5 		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 3943 16dc 1040D1E5 		ldrb	r4, [r1, #16]	@ zero_extendqisi2
 3944 16e0 030054E1 		cmp	r4, r3
 3945              		.loc 1 528 0
 3946 16e4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3947              		.loc 1 527 0
 3948 16e8 AD01001A 		bne	.L217
 3949 16ec 1050D2E5 		ldrb	r5, [r2, #16]	@ zero_extendqisi2
 3950 16f0 040055E1 		cmp	r5, r4
 3951              		.loc 1 528 0
 3952 16f4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3953              		.loc 1 527 0
 3954 16f8 A901001A 		bne	.L217
 3955              	.LVL335:
 3956 16fc 1160D0E5 		ldrb	r6, [r0, #17]	@ zero_extendqisi2
 3957 1700 1150D1E5 		ldrb	r5, [r1, #17]	@ zero_extendqisi2
 3958 1704 060055E1 		cmp	r5, r6
 3959              		.loc 1 528 0
 3960 1708 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3961              		.loc 1 527 0
 3962 170c A401001A 		bne	.L217
 3963 1710 1160D2E5 		ldrb	r6, [r2, #17]	@ zero_extendqisi2
 3964 1714 050056E1 		cmp	r6, r5
 3965              		.loc 1 528 0
 3966 1718 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3967              		.loc 1 527 0
 3968 171c A001001A 		bne	.L217
 3969              	.LVL336:
 3970 1720 1260D0E5 		ldrb	r6, [r0, #18]	@ zero_extendqisi2
 3971 1724 1250D1E5 		ldrb	r5, [r1, #18]	@ zero_extendqisi2
 3972 1728 060055E1 		cmp	r5, r6
 3973              		.loc 1 528 0
 3974 172c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3975              		.loc 1 527 0
 3976 1730 9B01001A 		bne	.L217
 3977 1734 1260D2E5 		ldrb	r6, [r2, #18]	@ zero_extendqisi2
 3978 1738 050056E1 		cmp	r6, r5
 3979              		.loc 1 528 0
 3980 173c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3981              		.loc 1 527 0
 3982 1740 9701001A 		bne	.L217
 3983              	.LVL337:
 3984 1744 1360D0E5 		ldrb	r6, [r0, #19]	@ zero_extendqisi2
 3985 1748 1350D1E5 		ldrb	r5, [r1, #19]	@ zero_extendqisi2
 3986 174c 060055E1 		cmp	r5, r6
 3987              		.loc 1 528 0
 3988 1750 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3989              		.loc 1 527 0
 3990 1754 9201001A 		bne	.L217
 3991 1758 1360D2E5 		ldrb	r6, [r2, #19]	@ zero_extendqisi2
 3992 175c 050056E1 		cmp	r6, r5
 3993              		.loc 1 528 0
 3994 1760 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 3995              		.loc 1 527 0
 3996 1764 8E01001A 		bne	.L217
 3997              	.LVL338:
 3998 1768 1460D0E5 		ldrb	r6, [r0, #20]	@ zero_extendqisi2
 3999 176c 1450D1E5 		ldrb	r5, [r1, #20]	@ zero_extendqisi2
 4000 1770 060055E1 		cmp	r5, r6
 4001              		.loc 1 528 0
 4002 1774 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4003              		.loc 1 527 0
 4004 1778 8901001A 		bne	.L217
 4005 177c 1460D2E5 		ldrb	r6, [r2, #20]	@ zero_extendqisi2
 4006 1780 050056E1 		cmp	r6, r5
 4007              		.loc 1 528 0
 4008 1784 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4009              		.loc 1 527 0
 4010 1788 8501001A 		bne	.L217
 4011              	.LVL339:
 4012 178c 1560D0E5 		ldrb	r6, [r0, #21]	@ zero_extendqisi2
 4013 1790 1550D1E5 		ldrb	r5, [r1, #21]	@ zero_extendqisi2
 4014 1794 060055E1 		cmp	r5, r6
 4015              		.loc 1 528 0
 4016 1798 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4017              		.loc 1 527 0
 4018 179c 8001001A 		bne	.L217
 4019 17a0 1560D2E5 		ldrb	r6, [r2, #21]	@ zero_extendqisi2
 4020 17a4 050056E1 		cmp	r6, r5
 4021              		.loc 1 528 0
 4022 17a8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4023              		.loc 1 527 0
 4024 17ac 7C01001A 		bne	.L217
 4025              	.LVL340:
 4026 17b0 1660D0E5 		ldrb	r6, [r0, #22]	@ zero_extendqisi2
 4027 17b4 1650D1E5 		ldrb	r5, [r1, #22]	@ zero_extendqisi2
 4028 17b8 060055E1 		cmp	r5, r6
 4029              		.loc 1 528 0
 4030 17bc 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4031              		.loc 1 527 0
 4032 17c0 7701001A 		bne	.L217
 4033 17c4 1660D2E5 		ldrb	r6, [r2, #22]	@ zero_extendqisi2
 4034 17c8 050056E1 		cmp	r6, r5
 4035              		.loc 1 528 0
 4036 17cc 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4037              		.loc 1 527 0
 4038 17d0 7301001A 		bne	.L217
 4039              	.LVL341:
 4040 17d4 17C0D0E5 		ldrb	ip, [r0, #23]	@ zero_extendqisi2
 4041 17d8 1730D1E5 		ldrb	r3, [r1, #23]	@ zero_extendqisi2
 4042 17dc 0C0053E1 		cmp	r3, ip
 4043              		.loc 1 528 0
 4044 17e0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4045              		.loc 1 527 0
 4046 17e4 6E01001A 		bne	.L217
 4047 17e8 17C0D2E5 		ldrb	ip, [r2, #23]	@ zero_extendqisi2
 4048 17ec 03005CE1 		cmp	ip, r3
 4049              		.loc 1 528 0
 4050 17f0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4051              		.loc 1 527 0
 4052 17f4 6A01001A 		bne	.L217
 4053              	.LVL342:
 4054 17f8 1830D0E5 		ldrb	r3, [r0, #24]	@ zero_extendqisi2
 4055 17fc 1840D1E5 		ldrb	r4, [r1, #24]	@ zero_extendqisi2
 4056 1800 030054E1 		cmp	r4, r3
 4057              		.loc 1 528 0
 4058 1804 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4059              		.loc 1 527 0
 4060 1808 6501001A 		bne	.L217
 4061 180c 1850D2E5 		ldrb	r5, [r2, #24]	@ zero_extendqisi2
 4062 1810 040055E1 		cmp	r5, r4
 4063              		.loc 1 528 0
 4064 1814 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4065              		.loc 1 527 0
 4066 1818 6101001A 		bne	.L217
 4067              	.LVL343:
 4068 181c 1960D0E5 		ldrb	r6, [r0, #25]	@ zero_extendqisi2
 4069 1820 1950D1E5 		ldrb	r5, [r1, #25]	@ zero_extendqisi2
 4070 1824 060055E1 		cmp	r5, r6
 4071              		.loc 1 528 0
 4072 1828 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4073              		.loc 1 527 0
 4074 182c 5C01001A 		bne	.L217
 4075 1830 1960D2E5 		ldrb	r6, [r2, #25]	@ zero_extendqisi2
 4076 1834 050056E1 		cmp	r6, r5
 4077              		.loc 1 528 0
 4078 1838 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4079              		.loc 1 527 0
 4080 183c 5801001A 		bne	.L217
 4081              	.LVL344:
 4082 1840 1A60D0E5 		ldrb	r6, [r0, #26]	@ zero_extendqisi2
 4083 1844 1A50D1E5 		ldrb	r5, [r1, #26]	@ zero_extendqisi2
 4084 1848 060055E1 		cmp	r5, r6
 4085              		.loc 1 528 0
 4086 184c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4087              		.loc 1 527 0
 4088 1850 5301001A 		bne	.L217
 4089 1854 1A60D2E5 		ldrb	r6, [r2, #26]	@ zero_extendqisi2
 4090 1858 050056E1 		cmp	r6, r5
 4091              		.loc 1 528 0
 4092 185c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4093              		.loc 1 527 0
 4094 1860 4F01001A 		bne	.L217
 4095              	.LVL345:
 4096 1864 1B60D0E5 		ldrb	r6, [r0, #27]	@ zero_extendqisi2
 4097 1868 1B50D1E5 		ldrb	r5, [r1, #27]	@ zero_extendqisi2
 4098 186c 060055E1 		cmp	r5, r6
 4099              		.loc 1 528 0
 4100 1870 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4101              		.loc 1 527 0
 4102 1874 4A01001A 		bne	.L217
 4103 1878 1B60D2E5 		ldrb	r6, [r2, #27]	@ zero_extendqisi2
 4104 187c 050056E1 		cmp	r6, r5
 4105              		.loc 1 528 0
 4106 1880 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4107              		.loc 1 527 0
 4108 1884 4601001A 		bne	.L217
 4109              	.LVL346:
 4110 1888 1C60D0E5 		ldrb	r6, [r0, #28]	@ zero_extendqisi2
 4111 188c 1C50D1E5 		ldrb	r5, [r1, #28]	@ zero_extendqisi2
 4112 1890 060055E1 		cmp	r5, r6
 4113              		.loc 1 528 0
 4114 1894 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4115              		.loc 1 527 0
 4116 1898 4101001A 		bne	.L217
 4117 189c 1C60D2E5 		ldrb	r6, [r2, #28]	@ zero_extendqisi2
 4118 18a0 050056E1 		cmp	r6, r5
 4119              		.loc 1 528 0
 4120 18a4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4121              		.loc 1 527 0
 4122 18a8 3D01001A 		bne	.L217
 4123              	.LVL347:
 4124 18ac 1D60D0E5 		ldrb	r6, [r0, #29]	@ zero_extendqisi2
 4125 18b0 1D50D1E5 		ldrb	r5, [r1, #29]	@ zero_extendqisi2
 4126 18b4 060055E1 		cmp	r5, r6
 4127              		.loc 1 528 0
 4128 18b8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4129              		.loc 1 527 0
 4130 18bc 3801001A 		bne	.L217
 4131 18c0 1D60D2E5 		ldrb	r6, [r2, #29]	@ zero_extendqisi2
 4132 18c4 050056E1 		cmp	r6, r5
 4133              		.loc 1 528 0
 4134 18c8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4135              		.loc 1 527 0
 4136 18cc 3401001A 		bne	.L217
 4137              	.LVL348:
 4138 18d0 1E60D0E5 		ldrb	r6, [r0, #30]	@ zero_extendqisi2
 4139 18d4 1E50D1E5 		ldrb	r5, [r1, #30]	@ zero_extendqisi2
 4140 18d8 060055E1 		cmp	r5, r6
 4141              		.loc 1 528 0
 4142 18dc 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4143              		.loc 1 527 0
 4144 18e0 2F01001A 		bne	.L217
 4145 18e4 1E60D2E5 		ldrb	r6, [r2, #30]	@ zero_extendqisi2
 4146 18e8 050056E1 		cmp	r6, r5
 4147              		.loc 1 528 0
 4148 18ec 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4149              		.loc 1 527 0
 4150 18f0 2B01001A 		bne	.L217
 4151              	.LVL349:
 4152 18f4 1FC0D0E5 		ldrb	ip, [r0, #31]	@ zero_extendqisi2
 4153 18f8 1F30D1E5 		ldrb	r3, [r1, #31]	@ zero_extendqisi2
 4154 18fc 0C0053E1 		cmp	r3, ip
 4155              		.loc 1 528 0
 4156 1900 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4157              		.loc 1 527 0
 4158 1904 2601001A 		bne	.L217
 4159 1908 1FC0D2E5 		ldrb	ip, [r2, #31]	@ zero_extendqisi2
 4160 190c 03005CE1 		cmp	ip, r3
 4161              		.loc 1 528 0
 4162 1910 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4163              		.loc 1 527 0
 4164 1914 2201001A 		bne	.L217
 4165              	.LVL350:
 4166 1918 2030D0E5 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 4167 191c 2040D1E5 		ldrb	r4, [r1, #32]	@ zero_extendqisi2
 4168 1920 030054E1 		cmp	r4, r3
 4169              		.loc 1 528 0
 4170 1924 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4171              		.loc 1 527 0
 4172 1928 1D01001A 		bne	.L217
 4173 192c 2050D2E5 		ldrb	r5, [r2, #32]	@ zero_extendqisi2
 4174 1930 040055E1 		cmp	r5, r4
 4175              		.loc 1 528 0
 4176 1934 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4177              		.loc 1 527 0
 4178 1938 1901001A 		bne	.L217
 4179              	.LVL351:
 4180 193c 2160D0E5 		ldrb	r6, [r0, #33]	@ zero_extendqisi2
 4181 1940 2150D1E5 		ldrb	r5, [r1, #33]	@ zero_extendqisi2
 4182 1944 060055E1 		cmp	r5, r6
 4183              		.loc 1 528 0
 4184 1948 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4185              		.loc 1 527 0
 4186 194c 1401001A 		bne	.L217
 4187 1950 2160D2E5 		ldrb	r6, [r2, #33]	@ zero_extendqisi2
 4188 1954 050056E1 		cmp	r6, r5
 4189              		.loc 1 528 0
 4190 1958 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4191              		.loc 1 527 0
 4192 195c 1001001A 		bne	.L217
 4193              	.LVL352:
 4194 1960 2260D0E5 		ldrb	r6, [r0, #34]	@ zero_extendqisi2
 4195 1964 2250D1E5 		ldrb	r5, [r1, #34]	@ zero_extendqisi2
 4196 1968 060055E1 		cmp	r5, r6
 4197              		.loc 1 528 0
 4198 196c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4199              		.loc 1 527 0
 4200 1970 0B01001A 		bne	.L217
 4201 1974 2260D2E5 		ldrb	r6, [r2, #34]	@ zero_extendqisi2
 4202 1978 050056E1 		cmp	r6, r5
 4203              		.loc 1 528 0
 4204 197c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4205              		.loc 1 527 0
 4206 1980 0701001A 		bne	.L217
 4207              	.LVL353:
 4208 1984 2360D0E5 		ldrb	r6, [r0, #35]	@ zero_extendqisi2
 4209 1988 2350D1E5 		ldrb	r5, [r1, #35]	@ zero_extendqisi2
 4210 198c 060055E1 		cmp	r5, r6
 4211              		.loc 1 528 0
 4212 1990 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4213              		.loc 1 527 0
 4214 1994 0201001A 		bne	.L217
 4215 1998 2360D2E5 		ldrb	r6, [r2, #35]	@ zero_extendqisi2
 4216 199c 050056E1 		cmp	r6, r5
 4217              		.loc 1 528 0
 4218 19a0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4219              		.loc 1 527 0
 4220 19a4 FE00001A 		bne	.L217
 4221              	.LVL354:
 4222 19a8 2460D0E5 		ldrb	r6, [r0, #36]	@ zero_extendqisi2
 4223 19ac 2450D1E5 		ldrb	r5, [r1, #36]	@ zero_extendqisi2
 4224 19b0 060055E1 		cmp	r5, r6
 4225              		.loc 1 528 0
 4226 19b4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4227              		.loc 1 527 0
 4228 19b8 F900001A 		bne	.L217
 4229 19bc 2460D2E5 		ldrb	r6, [r2, #36]	@ zero_extendqisi2
 4230 19c0 050056E1 		cmp	r6, r5
 4231              		.loc 1 528 0
 4232 19c4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4233              		.loc 1 527 0
 4234 19c8 F500001A 		bne	.L217
 4235              	.LVL355:
 4236 19cc 2560D0E5 		ldrb	r6, [r0, #37]	@ zero_extendqisi2
 4237 19d0 2550D1E5 		ldrb	r5, [r1, #37]	@ zero_extendqisi2
 4238 19d4 060055E1 		cmp	r5, r6
 4239              		.loc 1 528 0
 4240 19d8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4241              		.loc 1 527 0
 4242 19dc F000001A 		bne	.L217
 4243 19e0 2560D2E5 		ldrb	r6, [r2, #37]	@ zero_extendqisi2
 4244 19e4 050056E1 		cmp	r6, r5
 4245              		.loc 1 528 0
 4246 19e8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4247              		.loc 1 527 0
 4248 19ec EC00001A 		bne	.L217
 4249              	.LVL356:
 4250 19f0 2660D0E5 		ldrb	r6, [r0, #38]	@ zero_extendqisi2
 4251 19f4 2650D1E5 		ldrb	r5, [r1, #38]	@ zero_extendqisi2
 4252 19f8 060055E1 		cmp	r5, r6
 4253              		.loc 1 528 0
 4254 19fc 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4255              		.loc 1 527 0
 4256 1a00 E700001A 		bne	.L217
 4257 1a04 2660D2E5 		ldrb	r6, [r2, #38]	@ zero_extendqisi2
 4258 1a08 050056E1 		cmp	r6, r5
 4259              		.loc 1 528 0
 4260 1a0c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4261              		.loc 1 527 0
 4262 1a10 E300001A 		bne	.L217
 4263              	.LVL357:
 4264 1a14 27C0D0E5 		ldrb	ip, [r0, #39]	@ zero_extendqisi2
 4265 1a18 2730D1E5 		ldrb	r3, [r1, #39]	@ zero_extendqisi2
 4266 1a1c 0C0053E1 		cmp	r3, ip
 4267              		.loc 1 528 0
 4268 1a20 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4269              		.loc 1 527 0
 4270 1a24 DE00001A 		bne	.L217
 4271 1a28 27C0D2E5 		ldrb	ip, [r2, #39]	@ zero_extendqisi2
 4272 1a2c 03005CE1 		cmp	ip, r3
 4273              		.loc 1 528 0
 4274 1a30 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4275              		.loc 1 527 0
 4276 1a34 DA00001A 		bne	.L217
 4277              	.LVL358:
 4278 1a38 2830D0E5 		ldrb	r3, [r0, #40]	@ zero_extendqisi2
 4279 1a3c 2840D1E5 		ldrb	r4, [r1, #40]	@ zero_extendqisi2
 4280 1a40 030054E1 		cmp	r4, r3
 4281              		.loc 1 528 0
 4282 1a44 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4283              		.loc 1 527 0
 4284 1a48 D500001A 		bne	.L217
 4285 1a4c 2850D2E5 		ldrb	r5, [r2, #40]	@ zero_extendqisi2
 4286 1a50 040055E1 		cmp	r5, r4
 4287              		.loc 1 528 0
 4288 1a54 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4289              		.loc 1 527 0
 4290 1a58 D100001A 		bne	.L217
 4291              	.LVL359:
 4292 1a5c 2960D0E5 		ldrb	r6, [r0, #41]	@ zero_extendqisi2
 4293 1a60 2950D1E5 		ldrb	r5, [r1, #41]	@ zero_extendqisi2
 4294 1a64 060055E1 		cmp	r5, r6
 4295              		.loc 1 528 0
 4296 1a68 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4297              		.loc 1 527 0
 4298 1a6c CC00001A 		bne	.L217
 4299 1a70 2960D2E5 		ldrb	r6, [r2, #41]	@ zero_extendqisi2
 4300 1a74 050056E1 		cmp	r6, r5
 4301              		.loc 1 528 0
 4302 1a78 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4303              		.loc 1 527 0
 4304 1a7c C800001A 		bne	.L217
 4305              	.LVL360:
 4306 1a80 2A60D0E5 		ldrb	r6, [r0, #42]	@ zero_extendqisi2
 4307 1a84 2A50D1E5 		ldrb	r5, [r1, #42]	@ zero_extendqisi2
 4308 1a88 060055E1 		cmp	r5, r6
 4309              		.loc 1 528 0
 4310 1a8c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4311              		.loc 1 527 0
 4312 1a90 C300001A 		bne	.L217
 4313 1a94 2A60D2E5 		ldrb	r6, [r2, #42]	@ zero_extendqisi2
 4314 1a98 050056E1 		cmp	r6, r5
 4315              		.loc 1 528 0
 4316 1a9c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4317              		.loc 1 527 0
 4318 1aa0 BF00001A 		bne	.L217
 4319              	.LVL361:
 4320 1aa4 2B60D0E5 		ldrb	r6, [r0, #43]	@ zero_extendqisi2
 4321 1aa8 2B50D1E5 		ldrb	r5, [r1, #43]	@ zero_extendqisi2
 4322 1aac 060055E1 		cmp	r5, r6
 4323              		.loc 1 528 0
 4324 1ab0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4325              		.loc 1 527 0
 4326 1ab4 BA00001A 		bne	.L217
 4327 1ab8 2B60D2E5 		ldrb	r6, [r2, #43]	@ zero_extendqisi2
 4328 1abc 050056E1 		cmp	r6, r5
 4329              		.loc 1 528 0
 4330 1ac0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4331              		.loc 1 527 0
 4332 1ac4 B600001A 		bne	.L217
 4333              	.LVL362:
 4334 1ac8 2C60D0E5 		ldrb	r6, [r0, #44]	@ zero_extendqisi2
 4335 1acc 2C50D1E5 		ldrb	r5, [r1, #44]	@ zero_extendqisi2
 4336 1ad0 060055E1 		cmp	r5, r6
 4337              		.loc 1 528 0
 4338 1ad4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4339              		.loc 1 527 0
 4340 1ad8 B100001A 		bne	.L217
 4341 1adc 2C60D2E5 		ldrb	r6, [r2, #44]	@ zero_extendqisi2
 4342 1ae0 050056E1 		cmp	r6, r5
 4343              		.loc 1 528 0
 4344 1ae4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4345              		.loc 1 527 0
 4346 1ae8 AD00001A 		bne	.L217
 4347              	.LVL363:
 4348 1aec 2D60D0E5 		ldrb	r6, [r0, #45]	@ zero_extendqisi2
 4349 1af0 2D50D1E5 		ldrb	r5, [r1, #45]	@ zero_extendqisi2
 4350 1af4 060055E1 		cmp	r5, r6
 4351              		.loc 1 528 0
 4352 1af8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4353              		.loc 1 527 0
 4354 1afc A800001A 		bne	.L217
 4355 1b00 2D60D2E5 		ldrb	r6, [r2, #45]	@ zero_extendqisi2
 4356 1b04 050056E1 		cmp	r6, r5
 4357              		.loc 1 528 0
 4358 1b08 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4359              		.loc 1 527 0
 4360 1b0c A400001A 		bne	.L217
 4361              	.LVL364:
 4362 1b10 2E60D0E5 		ldrb	r6, [r0, #46]	@ zero_extendqisi2
 4363 1b14 2E50D1E5 		ldrb	r5, [r1, #46]	@ zero_extendqisi2
 4364 1b18 060055E1 		cmp	r5, r6
 4365              		.loc 1 528 0
 4366 1b1c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4367              		.loc 1 527 0
 4368 1b20 9F00001A 		bne	.L217
 4369 1b24 2E60D2E5 		ldrb	r6, [r2, #46]	@ zero_extendqisi2
 4370 1b28 050056E1 		cmp	r6, r5
 4371              		.loc 1 528 0
 4372 1b2c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4373              		.loc 1 527 0
 4374 1b30 9B00001A 		bne	.L217
 4375              	.LVL365:
 4376 1b34 2FC0D0E5 		ldrb	ip, [r0, #47]	@ zero_extendqisi2
 4377 1b38 2F30D1E5 		ldrb	r3, [r1, #47]	@ zero_extendqisi2
 4378 1b3c 0C0053E1 		cmp	r3, ip
 4379              		.loc 1 528 0
 4380 1b40 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4381              		.loc 1 527 0
 4382 1b44 9600001A 		bne	.L217
 4383 1b48 2FC0D2E5 		ldrb	ip, [r2, #47]	@ zero_extendqisi2
 4384 1b4c 03005CE1 		cmp	ip, r3
 4385              		.loc 1 528 0
 4386 1b50 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4387              		.loc 1 527 0
 4388 1b54 9200001A 		bne	.L217
 4389              	.LVL366:
 4390 1b58 30C0D0E5 		ldrb	ip, [r0, #48]	@ zero_extendqisi2
 4391 1b5c 3030D1E5 		ldrb	r3, [r1, #48]	@ zero_extendqisi2
 4392 1b60 0C0053E1 		cmp	r3, ip
 4393              		.loc 1 528 0
 4394 1b64 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4395              		.loc 1 527 0
 4396 1b68 8D00001A 		bne	.L217
 4397 1b6c 3050D2E5 		ldrb	r5, [r2, #48]	@ zero_extendqisi2
 4398 1b70 030055E1 		cmp	r5, r3
 4399              		.loc 1 528 0
 4400 1b74 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4401              		.loc 1 527 0
 4402 1b78 8900001A 		bne	.L217
 4403              	.LVL367:
 4404 1b7c 3160D0E5 		ldrb	r6, [r0, #49]	@ zero_extendqisi2
 4405 1b80 3150D1E5 		ldrb	r5, [r1, #49]	@ zero_extendqisi2
 4406 1b84 060055E1 		cmp	r5, r6
 4407              		.loc 1 528 0
 4408 1b88 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4409              		.loc 1 527 0
 4410 1b8c 8400001A 		bne	.L217
 4411 1b90 3160D2E5 		ldrb	r6, [r2, #49]	@ zero_extendqisi2
 4412 1b94 050056E1 		cmp	r6, r5
 4413              		.loc 1 528 0
 4414 1b98 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4415              		.loc 1 527 0
 4416 1b9c 8000001A 		bne	.L217
 4417              	.LVL368:
 4418 1ba0 3260D0E5 		ldrb	r6, [r0, #50]	@ zero_extendqisi2
 4419 1ba4 3250D1E5 		ldrb	r5, [r1, #50]	@ zero_extendqisi2
 4420 1ba8 060055E1 		cmp	r5, r6
 4421              		.loc 1 528 0
 4422 1bac 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4423              		.loc 1 527 0
 4424 1bb0 7B00001A 		bne	.L217
 4425 1bb4 3260D2E5 		ldrb	r6, [r2, #50]	@ zero_extendqisi2
 4426 1bb8 050056E1 		cmp	r6, r5
 4427              		.loc 1 528 0
 4428 1bbc 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4429              		.loc 1 527 0
 4430 1bc0 7700001A 		bne	.L217
 4431              	.LVL369:
 4432 1bc4 3360D0E5 		ldrb	r6, [r0, #51]	@ zero_extendqisi2
 4433 1bc8 3350D1E5 		ldrb	r5, [r1, #51]	@ zero_extendqisi2
 4434 1bcc 060055E1 		cmp	r5, r6
 4435              		.loc 1 528 0
 4436 1bd0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4437              		.loc 1 527 0
 4438 1bd4 7200001A 		bne	.L217
 4439 1bd8 3360D2E5 		ldrb	r6, [r2, #51]	@ zero_extendqisi2
 4440 1bdc 050056E1 		cmp	r6, r5
 4441              		.loc 1 528 0
 4442 1be0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4443              		.loc 1 527 0
 4444 1be4 6E00001A 		bne	.L217
 4445              	.LVL370:
 4446 1be8 3460D0E5 		ldrb	r6, [r0, #52]	@ zero_extendqisi2
 4447 1bec 3450D1E5 		ldrb	r5, [r1, #52]	@ zero_extendqisi2
 4448 1bf0 060055E1 		cmp	r5, r6
 4449              		.loc 1 528 0
 4450 1bf4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4451              		.loc 1 527 0
 4452 1bf8 6900001A 		bne	.L217
 4453 1bfc 3460D2E5 		ldrb	r6, [r2, #52]	@ zero_extendqisi2
 4454 1c00 050056E1 		cmp	r6, r5
 4455              		.loc 1 528 0
 4456 1c04 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4457              		.loc 1 527 0
 4458 1c08 6500001A 		bne	.L217
 4459              	.LVL371:
 4460 1c0c 3560D0E5 		ldrb	r6, [r0, #53]	@ zero_extendqisi2
 4461 1c10 3550D1E5 		ldrb	r5, [r1, #53]	@ zero_extendqisi2
 4462 1c14 060055E1 		cmp	r5, r6
 4463              		.loc 1 528 0
 4464 1c18 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4465              		.loc 1 527 0
 4466 1c1c 6000001A 		bne	.L217
 4467 1c20 3560D2E5 		ldrb	r6, [r2, #53]	@ zero_extendqisi2
 4468 1c24 050056E1 		cmp	r6, r5
 4469              		.loc 1 528 0
 4470 1c28 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4471              		.loc 1 527 0
 4472 1c2c 5C00001A 		bne	.L217
 4473              	.LVL372:
 4474 1c30 3660D0E5 		ldrb	r6, [r0, #54]	@ zero_extendqisi2
 4475 1c34 3650D1E5 		ldrb	r5, [r1, #54]	@ zero_extendqisi2
 4476 1c38 060055E1 		cmp	r5, r6
 4477              		.loc 1 528 0
 4478 1c3c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4479              		.loc 1 527 0
 4480 1c40 5700001A 		bne	.L217
 4481 1c44 3660D2E5 		ldrb	r6, [r2, #54]	@ zero_extendqisi2
 4482 1c48 050056E1 		cmp	r6, r5
 4483              		.loc 1 528 0
 4484 1c4c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4485              		.loc 1 527 0
 4486 1c50 5300001A 		bne	.L217
 4487              	.LVL373:
 4488 1c54 3740D0E5 		ldrb	r4, [r0, #55]	@ zero_extendqisi2
 4489 1c58 37C0D1E5 		ldrb	ip, [r1, #55]	@ zero_extendqisi2
 4490 1c5c 04005CE1 		cmp	ip, r4
 4491              		.loc 1 528 0
 4492 1c60 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4493              		.loc 1 527 0
 4494 1c64 4E00001A 		bne	.L217
 4495 1c68 3730D2E5 		ldrb	r3, [r2, #55]	@ zero_extendqisi2
 4496 1c6c 0C0053E1 		cmp	r3, ip
 4497              		.loc 1 528 0
 4498 1c70 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4499              		.loc 1 527 0
 4500 1c74 4A00001A 		bne	.L217
 4501              	.LVL374:
 4502 1c78 38C0D0E5 		ldrb	ip, [r0, #56]	@ zero_extendqisi2
 4503 1c7c 3830D1E5 		ldrb	r3, [r1, #56]	@ zero_extendqisi2
 4504 1c80 0C0053E1 		cmp	r3, ip
 4505 1c84 380080E2 		add	r0, r0, #56
 4506 1c88 381081E2 		add	r1, r1, #56
 4507              	.LVL375:
 4508              		.loc 1 528 0
 4509 1c8c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4510              		.loc 1 527 0
 4511 1c90 4300001A 		bne	.L217
 4512 1c94 38C0D2E5 		ldrb	ip, [r2, #56]	@ zero_extendqisi2
 4513 1c98 03005CE1 		cmp	ip, r3
 4514 1c9c 382082E2 		add	r2, r2, #56
 4515              	.LVL376:
 4516              		.loc 1 528 0
 4517 1ca0 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4518              		.loc 1 527 0
 4519 1ca4 3E00001A 		bne	.L217
 4520              	.LVL377:
 4521 1ca8 01C0D0E5 		ldrb	ip, [r0, #1]	@ zero_extendqisi2
 4522 1cac 0130D1E5 		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 4523 1cb0 0C0053E1 		cmp	r3, ip
 4524              		.loc 1 528 0
 4525 1cb4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4526              		.loc 1 527 0
 4527 1cb8 3900001A 		bne	.L217
 4528 1cbc 01C0D2E5 		ldrb	ip, [r2, #1]	@ zero_extendqisi2
 4529 1cc0 03005CE1 		cmp	ip, r3
 4530              		.loc 1 528 0
 4531 1cc4 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4532              		.loc 1 527 0
 4533 1cc8 3500001A 		bne	.L217
 4534              	.LVL378:
 4535 1ccc 02C0D0E5 		ldrb	ip, [r0, #2]	@ zero_extendqisi2
 4536 1cd0 0230D1E5 		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 4537 1cd4 0C0053E1 		cmp	r3, ip
 4538              		.loc 1 528 0
 4539 1cd8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4540              		.loc 1 527 0
 4541 1cdc 3000001A 		bne	.L217
 4542 1ce0 02C0D2E5 		ldrb	ip, [r2, #2]	@ zero_extendqisi2
 4543 1ce4 03005CE1 		cmp	ip, r3
 4544              		.loc 1 528 0
 4545 1ce8 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4546              		.loc 1 527 0
 4547 1cec 2C00001A 		bne	.L217
 4548              	.LVL379:
 4549 1cf0 03C0D0E5 		ldrb	ip, [r0, #3]	@ zero_extendqisi2
 4550 1cf4 0330D1E5 		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 4551 1cf8 0C0053E1 		cmp	r3, ip
 4552              		.loc 1 528 0
 4553 1cfc 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4554              		.loc 1 527 0
 4555 1d00 2700001A 		bne	.L217
 4556 1d04 03C0D2E5 		ldrb	ip, [r2, #3]	@ zero_extendqisi2
 4557 1d08 03005CE1 		cmp	ip, r3
 4558              		.loc 1 528 0
 4559 1d0c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4560              		.loc 1 527 0
 4561 1d10 2300001A 		bne	.L217
 4562              	.LVL380:
 4563 1d14 04C0D0E5 		ldrb	ip, [r0, #4]	@ zero_extendqisi2
 4564 1d18 0430D1E5 		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 4565 1d1c 0C0053E1 		cmp	r3, ip
 4566              		.loc 1 528 0
 4567 1d20 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4568              		.loc 1 527 0
 4569 1d24 1E00001A 		bne	.L217
 4570 1d28 04C0D2E5 		ldrb	ip, [r2, #4]	@ zero_extendqisi2
 4571 1d2c 03005CE1 		cmp	ip, r3
 4572              		.loc 1 528 0
 4573 1d30 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4574              		.loc 1 527 0
 4575 1d34 1A00001A 		bne	.L217
 4576              	.LVL381:
 4577 1d38 05C0D0E5 		ldrb	ip, [r0, #5]	@ zero_extendqisi2
 4578 1d3c 0530D1E5 		ldrb	r3, [r1, #5]	@ zero_extendqisi2
 4579 1d40 0C0053E1 		cmp	r3, ip
 4580              		.loc 1 528 0
 4581 1d44 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4582              		.loc 1 527 0
 4583 1d48 1500001A 		bne	.L217
 4584 1d4c 05C0D2E5 		ldrb	ip, [r2, #5]	@ zero_extendqisi2
 4585 1d50 03005CE1 		cmp	ip, r3
 4586              		.loc 1 528 0
 4587 1d54 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4588              		.loc 1 527 0
 4589 1d58 1100001A 		bne	.L217
 4590              	.LVL382:
 4591 1d5c 06C0D0E5 		ldrb	ip, [r0, #6]	@ zero_extendqisi2
 4592 1d60 0630D1E5 		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 4593 1d64 0C0053E1 		cmp	r3, ip
 4594              		.loc 1 528 0
 4595 1d68 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4596              		.loc 1 527 0
 4597 1d6c 0C00001A 		bne	.L217
 4598 1d70 06C0D2E5 		ldrb	ip, [r2, #6]	@ zero_extendqisi2
 4599 1d74 03005CE1 		cmp	ip, r3
 4600              		.loc 1 528 0
 4601 1d78 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4602              		.loc 1 527 0
 4603 1d7c 0800001A 		bne	.L217
 4604              	.LVL383:
 4605 1d80 0700D0E5 		ldrb	r0, [r0, #7]	@ zero_extendqisi2
 4606 1d84 0730D1E5 		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 4607 1d88 000053E1 		cmp	r3, r0
 4608              		.loc 1 528 0
 4609 1d8c 0000A013 		movne	r0, #0
 527:../reversi8.c **** 			if(tablero1[i][j] != tablero2[i][j] || tablero2[i][j] != tablero3[i][j] || tablero1[i][j] != tab
 4610              		.loc 1 527 0
 4611 1d90 0300001A 		bne	.L217
 521:../reversi8.c **** int comprobar_tableros(char tablero1[][DIM], char tablero2[][DIM], char tablero3[][DIM]) {
 4612              		.loc 1 521 0
 4613 1d94 0720D2E5 		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 4614              	.LVL384:
 4615 1d98 021063E0 		rsb	r1, r3, r2
 4616              	.LVL385:
 4617 1d9c 000071E2 		rsbs	r0, r1, #0
 4618 1da0 0100A0E0 		adc	r0, r0, r1
 4619              	.LVL386:
 4620              	.L217:
 529:../reversi8.c **** 			}
 530:../reversi8.c **** 		}
 531:../reversi8.c **** 	}
 532:../reversi8.c **** 	return TABLEROS_IGUALES;
 533:../reversi8.c **** }
 4621              		.loc 1 533 0
 4622 1da4 7000BDE8 		ldmfd	sp!, {r4, r5, r6}
 4623 1da8 1EFF2FE1 		bx	lr
 4624              		.cfi_endproc
 4625              	.LFE12:
 4627              		.align	2
 4628              		.global	comprobar_patrones
 4630              	comprobar_patrones:
 4631              	.LFB13:
 534:../reversi8.c **** 
 535:../reversi8.c **** int comprobar_patrones(int patron1, int patron2, int patron3) {
 4632              		.loc 1 535 0
 4633              		.cfi_startproc
 4634              		@ Function supports interworking.
 4635              		@ args = 0, pretend = 0, frame = 0
 4636              		@ frame_needed = 0, uses_anonymous_args = 0
 4637              		@ link register save eliminated.
 4638              	.LVL387:
 536:../reversi8.c **** 	if (patron1 == patron2 || patron1 == patron3 || patron2 == patron3) {
 4639              		.loc 1 536 0
 4640 1dac 010050E1 		cmp	r0, r1
 4641 1db0 02005011 		cmpne	r0, r2
 4642 1db4 0200000A 		beq	.L347
 537:../reversi8.c **** 		return PATRONES_IGUALES;
 4643              		.loc 1 537 0 discriminator 1
 4644 1db8 020051E0 		subs	r0, r1, r2
 4645              	.LVL388:
 4646 1dbc 0100A013 		movne	r0, #1
 4647 1dc0 1EFF2FE1 		bx	lr
 4648              	.LVL389:
 4649              	.L347:
 4650              		.loc 1 537 0 is_stmt 0
 4651 1dc4 0000A0E3 		mov	r0, #0
 4652              	.LVL390:
 538:../reversi8.c **** 	}
 539:../reversi8.c **** 	return PATRONES_NO_IGUALES;
 540:../reversi8.c **** }
 4653              		.loc 1 540 0 is_stmt 1
 4654 1dc8 1EFF2FE1 		bx	lr
 4655              		.cfi_endproc
 4656              	.LFE13:
 4658              		.global	NO
 4659              		.global	SI
 4660              		.global	CASILLA_OCUPADA
 4661              		.global	vSF
 4662              		.global	vSC
 4663              		.section	.rodata
 4664              		.align	3
 4665              		.set	.LANCHOR1,. + 0
 4668              	vSF:
 4669 0000 FF       		.byte	-1
 4670 0001 FF       		.byte	-1
 4671 0002 00       		.byte	0
 4672 0003 01       		.byte	1
 4673 0004 01       		.byte	1
 4674 0005 01       		.byte	1
 4675 0006 00       		.byte	0
 4676 0007 FF       		.byte	-1
 4679              	vSC:
 4680 0008 00       		.byte	0
 4681 0009 01       		.byte	1
 4682 000a 01       		.byte	1
 4683 000b 01       		.byte	1
 4684 000c 00       		.byte	0
 4685 000d FF       		.byte	-1
 4686 000e FF       		.byte	-1
 4687 000f FF       		.byte	-1
 4690              	tabla_valor:
 4691 0010 08       		.byte	8
 4692 0011 02       		.byte	2
 4693 0012 07       		.byte	7
 4694 0013 03       		.byte	3
 4695 0014 03       		.byte	3
 4696 0015 07       		.byte	7
 4697 0016 02       		.byte	2
 4698 0017 08       		.byte	8
 4699 0018 02       		.byte	2
 4700 0019 01       		.byte	1
 4701 001a 04       		.byte	4
 4702 001b 04       		.byte	4
 4703 001c 04       		.byte	4
 4704 001d 04       		.byte	4
 4705 001e 01       		.byte	1
 4706 001f 02       		.byte	2
 4707 0020 07       		.byte	7
 4708 0021 04       		.byte	4
 4709 0022 06       		.byte	6
 4710 0023 05       		.byte	5
 4711 0024 05       		.byte	5
 4712 0025 06       		.byte	6
 4713 0026 04       		.byte	4
 4714 0027 07       		.byte	7
 4715 0028 03       		.byte	3
 4716 0029 04       		.byte	4
 4717 002a 05       		.byte	5
 4718 002b 00       		.byte	0
 4719 002c 00       		.byte	0
 4720 002d 05       		.byte	5
 4721 002e 04       		.byte	4
 4722 002f 03       		.byte	3
 4723 0030 03       		.byte	3
 4724 0031 04       		.byte	4
 4725 0032 05       		.byte	5
 4726 0033 00       		.byte	0
 4727 0034 00       		.byte	0
 4728 0035 05       		.byte	5
 4729 0036 04       		.byte	4
 4730 0037 03       		.byte	3
 4731 0038 07       		.byte	7
 4732 0039 04       		.byte	4
 4733 003a 06       		.byte	6
 4734 003b 05       		.byte	5
 4735 003c 05       		.byte	5
 4736 003d 06       		.byte	6
 4737 003e 04       		.byte	4
 4738 003f 07       		.byte	7
 4739 0040 02       		.byte	2
 4740 0041 01       		.byte	1
 4741 0042 04       		.byte	4
 4742 0043 04       		.byte	4
 4743 0044 04       		.byte	4
 4744 0045 04       		.byte	4
 4745 0046 01       		.byte	1
 4746 0047 02       		.byte	2
 4747 0048 08       		.byte	8
 4748 0049 02       		.byte	2
 4749 004a 07       		.byte	7
 4750 004b 03       		.byte	3
 4751 004c 03       		.byte	3
 4752 004d 07       		.byte	7
 4753 004e 02       		.byte	2
 4754 004f 08       		.byte	8
 4757              	NO:
 4758 0050 00       		.space	1
 4761              	SI:
 4762 0051 01       		.byte	1
 4765              	CASILLA_OCUPADA:
 4766 0052 02       		.byte	2
 4767 0053 00000000 		.bss
 4767      00
 4768              		.align	3
 4769              		.set	.LANCHOR0,. + 0
 4772              	fila:
 4773 0000 00       		.space	1
 4776              	columna:
 4777 0001 00       		.space	1
 4780              	ready:
 4781 0002 00       		.space	1
 4782 0003 00000000 		.space	5
 4782      00
 4785              	tablero:
 4786 0008 00000000 		.space	64
 4786      00000000 
 4786      00000000 
 4786      00000000 
 4786      00000000 
 4787              		.text
 4788              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8.c
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:965    .text:00000000 $a
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:968    .text:00000000 autoasignar
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:994    .text:00000020 $d
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:998    .text:00000024 $a
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:1000   .text:00000024 actualizar_tablero.clone.0
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:1339   .text:000002b8 $d
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:1344   .text:000002c0 $a
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:1347   .text:000002c0 init_table
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:1602   .text:000004d0 esperar_mov
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:1645   .text:00000508 ficha_valida
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:1687   .text:00000540 patron_volteo
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:1835   .text:00000608 voltear
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:2003   .text:00000760 actualizar_tablero
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:2322   .text:000009cc $d
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:2326   .text:000009d0 $a
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:2329   .text:000009d0 elegir_mov
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:2612   .text:00000bc4 $d
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:2617   .text:00000bcc $a
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:2620   .text:00000bcc contar
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:2865   .text:00000dd0 actualizar_candidatas
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:2998   .text:00000edc reversi8
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:3481   .text:00001280 $d
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:3488   .text:00001290 $a
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:3491   .text:00001290 matriscopy
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:3701   .text:00001494 comprobar_tableros
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4630   .text:00001dac comprobar_patrones
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4757   .rodata:00000050 NO
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4761   .rodata:00000051 SI
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4765   .rodata:00000052 CASILLA_OCUPADA
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4668   .rodata:00000000 vSF
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4679   .rodata:00000008 vSC
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4664   .rodata:00000000 $d
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4690   .rodata:00000010 tabla_valor
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4768   .bss:00000000 $d
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4772   .bss:00000000 fila
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4776   .bss:00000001 columna
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4780   .bss:00000002 ready
C:\Users\danie\AppData\Local\Temp\cciPsdbC.s:4785   .bss:00000008 tablero
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timer2_inicializar
timer2_empezar
timer2_parar
memset
