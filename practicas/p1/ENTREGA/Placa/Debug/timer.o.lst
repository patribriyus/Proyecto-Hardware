   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"timer.c"
  21              	.Ltext0:
  22              		.file 1 "../timer.c"
 1879              		.align	2
 1880              		.global	timer_ISR
 1882              	timer_ISR:
 1883              	.LFB0:
   1:../timer.c    **** /*********************************************************************************************
   2:../timer.c    **** * Fichero:		timer.c
   3:../timer.c    **** * Autor:
   4:../timer.c    **** * Descrip:		funciones de control del timer0 del s3c44b0x
   5:../timer.c    **** * Version:
   6:../timer.c    **** *********************************************************************************************/
   7:../timer.c    **** 
   8:../timer.c    **** /*--- ficheros de cabecera ---*/
   9:../timer.c    **** #include "timer.h"
  10:../timer.c    **** #include "44b.h"
  11:../timer.c    **** #include "44blib.h"
  12:../timer.c    **** 
  13:../timer.c    **** /*--- variables globales ---*/
  14:../timer.c    **** int switch_leds = 0;
  15:../timer.c    **** 
  16:../timer.c    **** /* declaración de función que es rutina de servicio de interrupción
  17:../timer.c    ****  * https://gcc.gnu.org/onlinedocs/gcc/ARM-Function-Attributes.html */
  18:../timer.c    **** void timer_ISR(void) __attribute__((interrupt("IRQ")));
  19:../timer.c    **** 
  20:../timer.c    **** /*--- codigo de las funciones ---*/
  21:../timer.c    **** // Cuando llega a 0. El timer LANZA LA INTERRPUCIÓN
  22:../timer.c    **** void timer_ISR(void)
  23:../timer.c    **** {
 1884              		.loc 1 23 0
 1885              		.cfi_startproc
 1886              		@ Interrupt Service Routine.
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
 1890 0000 0F002DE9 		stmfd	sp!, {r0, r1, r2, r3}
 1891              	.LCFI0:
 1892              		.cfi_def_cfa_offset 16
  24:../timer.c    **** 	switch_leds = 1; // El main está pendiente de este valor
  25:../timer.c    **** 
  26:../timer.c    **** 	/* borrar bit en I_ISPC para desactivar la solicitud de interrupción*/
  27:../timer.c    **** 	rI_ISPC |= BIT_TIMER0; // BIT_TIMER0 está definido en 44b.h y pone un uno en el bit 13 que correpo
 1893              		.loc 1 27 0
 1894 0004 1E36A0E3 		mov	r3, #31457280
 1895              		.cfi_offset 3, -4
 1896              		.cfi_offset 2, -8
 1897              		.cfi_offset 1, -12
 1898              		.cfi_offset 0, -16
 1899 0008 242093E5 		ldr	r2, [r3, #36]
  24:../timer.c    **** 	switch_leds = 1; // El main está pendiente de este valor
 1900              		.loc 1 24 0
 1901 000c 14109FE5 		ldr	r1, .L2
 1902              		.loc 1 27 0
 1903 0010 022A82E3 		orr	r2, r2, #8192
  24:../timer.c    **** 	switch_leds = 1; // El main está pendiente de este valor
 1904              		.loc 1 24 0
 1905 0014 0100A0E3 		mov	r0, #1
 1906 0018 000081E5 		str	r0, [r1, #0]
 1907              		.loc 1 27 0
 1908 001c 242083E5 		str	r2, [r3, #36]
  28:../timer.c    **** }
 1909              		.loc 1 28 0
 1910 0020 0F00BDE8 		ldmfd	sp!, {r0, r1, r2, r3}
 1911 0024 04F05EE2 		subs	pc, lr, #4
 1912              	.L3:
 1913              		.align	2
 1914              	.L2:
 1915 0028 00000000 		.word	.LANCHOR0
 1916              		.cfi_endproc
 1917              	.LFE0:
 1919              		.align	2
 1920              		.global	timer_init
 1922              	timer_init:
 1923              	.LFB1:
  29:../timer.c    **** // -- Se definen valores de los registros del controlador de interrupciones con las igualdades --
  30:../timer.c    **** 
  31:../timer.c    **** void timer_init(void)
  32:../timer.c    **** {
 1924              		.loc 1 32 0
 1925              		.cfi_startproc
 1926              		@ Function supports interworking.
 1927              		@ args = 0, pretend = 0, frame = 0
 1928              		@ frame_needed = 0, uses_anonymous_args = 0
 1929              		@ link register save eliminated.
  33:../timer.c    **** 	/* Configuraion controlador de interrupciones */
  34:../timer.c    **** 	rINTMOD = 0x0; // Configura las linas como de tipo IRQ											--- INTERRPUT MODE REGISTER 	(*(v
 1930              		.loc 1 34 0
 1931 002c 1E26A0E3 		mov	r2, #31457280
 1932 0030 0010A0E3 		mov	r1, #0
  35:../timer.c    **** 	rINTCON = 0x1; // Habilita int. vectorizadas y la linea IRQ (FIQ no)							--- INTERRUPT CONTROL R
 1933              		.loc 1 35 0
 1934 0034 0130A0E3 		mov	r3, #1
  34:../timer.c    **** 	rINTMOD = 0x0; // Configura las linas como de tipo IRQ											--- INTERRPUT MODE REGISTER 	(*(v
 1935              		.loc 1 34 0
 1936 0038 081082E5 		str	r1, [r2, #8]
 1937              		.loc 1 35 0
 1938 003c 003082E5 		str	r3, [r2, #0]
  36:../timer.c    **** 	rINTMSK &= ~(BIT_TIMER0); // habilitamos en vector de mascaras de interrupcion el Timer0 		--- INT
 1939              		.loc 1 36 0
 1940 0040 0CC092E5 		ldr	ip, [r2, #12]
 1941 0044 020ACCE3 		bic	r0, ip, #8192
 1942 0048 0C0082E5 		str	r0, [r2, #12]
  37:../timer.c    **** 							//(bits 26 y 13, BIT_GLOBAL y BIT_TIMER0 están definidos en 44b.h)		--- BIT_TIMER0: (0x1<<13
  38:../timer.c    **** 
  39:../timer.c    **** 	// &= ELIMINA BITS
  40:../timer.c    **** 
  41:../timer.c    **** 	/* Establece la rutina de servicio para TIMER0 */
  42:../timer.c    **** 	pISR_TIMER0 = (unsigned) timer_ISR;
  43:../timer.c    **** 
  44:../timer.c    **** 	/* Configura el Timer0 */
  45:../timer.c    **** 	rTCFG0 = 255; // ajusta el preescalado															--- (*(volatile unsigned *)0x1d50000)
 1943              		.loc 1 45 0
 1944 004c 38309FE5 		ldr	r3, .L5
  42:../timer.c    **** 	pISR_TIMER0 = (unsigned) timer_ISR;
 1945              		.loc 1 42 0
 1946 0050 38009FE5 		ldr	r0, .L5+4
 1947 0054 38C09FE5 		ldr	ip, .L5+8
 1948              		.loc 1 45 0
 1949 0058 FF20A0E3 		mov	r2, #255
  42:../timer.c    **** 	pISR_TIMER0 = (unsigned) timer_ISR;
 1950              		.loc 1 42 0
 1951 005c AB000CE5 		str	r0, [ip, #-171]
 1952              		.loc 1 45 0
 1953 0060 002083E5 		str	r2, [r3, #0]
  46:../timer.c    **** 	rTCFG1 = 0x0; // selecciona la entrada del mux que proporciona el reloj.						--- (*(volatile unsi
  47:../timer.c    **** 				  // La 00 corresponde a un divisor de 1/2.
  48:../timer.c    **** 	rTCNTB0 = 65535;// valor inicial de cuenta (la cuenta es descendente)
 1954              		.loc 1 48 0
 1955 0064 FFCC82E2 		add	ip, r2, #65280
  46:../timer.c    **** 	rTCFG1 = 0x0; // selecciona la entrada del mux que proporciona el reloj.						--- (*(volatile unsi
 1956              		.loc 1 46 0
 1957 0068 041083E5 		str	r1, [r3, #4]
  49:../timer.c    **** 	rTCMPB0 = 12800;// valor de comparación
  50:../timer.c    **** 	/* establecer update=manual (bit 1) + inverter=on (¿? será inverter off un cero en el bit 2 pone e
  51:../timer.c    **** 	rTCON = 0x2;
 1958              		.loc 1 51 0
 1959 006c 0200A0E3 		mov	r0, #2
  49:../timer.c    **** 	rTCMPB0 = 12800;// valor de comparación
 1960              		.loc 1 49 0
 1961 0070 321CA0E3 		mov	r1, #12800
  52:../timer.c    **** 	/* iniciar timer (bit 0) con auto-reload (bit 3)*/
  53:../timer.c    **** 	rTCON = 0x09;
 1962              		.loc 1 53 0
 1963 0074 0920A0E3 		mov	r2, #9
  48:../timer.c    **** 	rTCNTB0 = 65535;// valor inicial de cuenta (la cuenta es descendente)
 1964              		.loc 1 48 0
 1965 0078 0CC083E5 		str	ip, [r3, #12]
  49:../timer.c    **** 	rTCMPB0 = 12800;// valor de comparación
 1966              		.loc 1 49 0
 1967 007c 101083E5 		str	r1, [r3, #16]
  51:../timer.c    **** 	rTCON = 0x2;
 1968              		.loc 1 51 0
 1969 0080 080083E5 		str	r0, [r3, #8]
 1970              		.loc 1 53 0
 1971 0084 082083E5 		str	r2, [r3, #8]
  54:../timer.c    **** }
 1972              		.loc 1 54 0
 1973 0088 1EFF2FE1 		bx	lr
 1974              	.L6:
 1975              		.align	2
 1976              	.L5:
 1977 008c 0000D501 		.word	30736384
 1978 0090 00000000 		.word	timer_ISR
 1979 0094 FFFF7F0C 		.word	209715199
 1980              		.cfi_endproc
 1981              	.LFE1:
 1983              		.global	switch_leds
 1984              		.bss
 1985              		.align	2
 1986              		.set	.LANCHOR0,. + 0
 1989              	switch_leds:
 1990 0000 00000000 		.space	4
 1991              		.text
 1992              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
C:\Users\danie\AppData\Local\Temp\ccoWwshH.s:1879   .text:00000000 $a
C:\Users\danie\AppData\Local\Temp\ccoWwshH.s:1882   .text:00000000 timer_ISR
C:\Users\danie\AppData\Local\Temp\ccoWwshH.s:1915   .text:00000028 $d
C:\Users\danie\AppData\Local\Temp\ccoWwshH.s:1919   .text:0000002c $a
C:\Users\danie\AppData\Local\Temp\ccoWwshH.s:1922   .text:0000002c timer_init
C:\Users\danie\AppData\Local\Temp\ccoWwshH.s:1977   .text:0000008c $d
C:\Users\danie\AppData\Local\Temp\ccoWwshH.s:1989   .bss:00000000 switch_leds
C:\Users\danie\AppData\Local\Temp\ccoWwshH.s:1985   .bss:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
