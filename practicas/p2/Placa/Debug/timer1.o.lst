   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"timer1.c"
  21              	.Ltext0:
  22              		.file 1 "../timer1.c"
 2132              		.align	2
 2133              		.global	timer1_ISR
 2135              	timer1_ISR:
 2136              	.LFB0:
   1:../timer1.c   **** /*********************************************************************************************
   2:../timer1.c   **** * Fichero:		timer.c
   3:../timer1.c   **** * Autor:
   4:../timer1.c   **** * Descrip:		funciones de control del timer0 del s3c44b0x
   5:../timer1.c   **** * Version:
   6:../timer1.c   **** *********************************************************************************************/
   7:../timer1.c   **** 
   8:../timer1.c   **** /*--- ficheros de cabecera ---*/
   9:../timer1.c   **** #include "timer1.h"
  10:../timer1.c   **** #include "44b.h"
  11:../timer1.c   **** #include "44blib.h"
  12:../timer1.c   **** #include "pila.h"
  13:../timer1.c   **** /* declaración de función que es rutina de servicio de interrupción
  14:../timer1.c   ****  * https://gcc.gnu.org/onlinedocs/gcc/ARM-Function-Attributes.html */
  15:../timer1.c   **** void timer1_ISR(void) __attribute__((interrupt("IRQ")));
  16:../timer1.c   **** /*--- codigo de las funciones ---*/
  17:../timer1.c   **** // Cuando llega a 0. El timer LANZA LA INTERRPUCIÓN
  18:../timer1.c   **** void timer1_ISR(void) {
 2137              		.loc 1 18 0
 2138              		.cfi_startproc
 2139              		@ Interrupt Service Routine.
 2140              		@ args = 0, pretend = 0, frame = 0
 2141              		@ frame_needed = 1, uses_anonymous_args = 0
 2142 0000 04C02DE5 		str	ip, [sp, #-4]!
 2143 0004 0DC0A0E1 		mov	ip, sp
 2144              	.LCFI0:
 2145              		.cfi_def_cfa_register 12
 2146 0008 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2147 000c 04B04CE2 		sub	fp, ip, #4
 2148              		.cfi_offset 14, -8
 2149              		.cfi_offset 13, -12
 2150              		.cfi_offset 11, -16
 2151              		.cfi_offset 3, -20
 2152              		.cfi_offset 2, -24
 2153              		.cfi_offset 1, -28
 2154              		.cfi_offset 0, -32
 2155              	.LCFI1:
 2156              		.cfi_def_cfa 11, 4
  19:../timer1.c   **** 	//push_debug(ev_timer0, 0);
  20:../timer1.c   **** 	push_debug(ev_timer1, 0);
 2157              		.loc 1 20 0
 2158 0010 0E00A0E3 		mov	r0, #14
 2159 0014 0010A0E3 		mov	r1, #0
 2160 0018 FEFFFFEB 		bl	push_debug
  21:../timer1.c   **** 	/* borrar bit en I_ISPC para desactivar la solicitud de interrupción*/
  22:../timer1.c   **** 	rI_ISPC |= BIT_TIMER1; // BIT_TIMER0 está definido en 44b.h y pone un uno en el bit 13 que correpo
 2161              		.loc 1 22 0
 2162 001c 1C309FE5 		ldr	r3, .L2
 2163 0020 18209FE5 		ldr	r2, .L2
 2164 0024 002092E5 		ldr	r2, [r2, #0]
 2165 0028 012A82E3 		orr	r2, r2, #4096
 2166 002c 002083E5 		str	r2, [r3, #0]
  23:../timer1.c   **** }
 2167              		.loc 1 23 0
 2168 0030 1CD04BE2 		sub	sp, fp, #28
 2169 0034 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2170 0038 04C09DE4 		ldmfd	sp!, {ip}
 2171 003c 04F05EE2 		subs	pc, lr, #4
 2172              	.L3:
 2173              		.align	2
 2174              	.L2:
 2175 0040 2400E001 		.word	31457316
 2176              		.cfi_endproc
 2177              	.LFE0:
 2179              		.align	2
 2180              		.global	timer1_init
 2182              	timer1_init:
 2183              	.LFB1:
  24:../timer1.c   **** // -- Se definen valores de los registros del controlador de interrupciones con las igualdades --
  25:../timer1.c   **** 
  26:../timer1.c   **** void timer1_init(void)
  27:../timer1.c   **** {
 2184              		.loc 1 27 0
 2185              		.cfi_startproc
 2186              		@ Function supports interworking.
 2187              		@ args = 0, pretend = 0, frame = 0
 2188              		@ frame_needed = 1, uses_anonymous_args = 0
 2189 0044 0DC0A0E1 		mov	ip, sp
 2190              	.LCFI2:
 2191              		.cfi_def_cfa_register 12
 2192 0048 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2193 004c 04B04CE2 		sub	fp, ip, #4
 2194              		.cfi_offset 14, -8
 2195              		.cfi_offset 13, -12
 2196              		.cfi_offset 11, -16
 2197              	.LCFI3:
 2198              		.cfi_def_cfa 11, 4
  28:../timer1.c   **** 	/* Configuraion controlador de interrupciones */
  29:../timer1.c   **** 	rINTMOD = 0x0; // Configura las linas como de tipo IRQ											--- INTERRPUT MODE REGISTER 	(*(v
 2199              		.loc 1 29 0
 2200 0050 78309FE5 		ldr	r3, .L5
 2201 0054 0020A0E3 		mov	r2, #0
 2202 0058 002083E5 		str	r2, [r3, #0]
  30:../timer1.c   **** 	rINTCON = 0x1; // Habilita int. vectorizadas y la linea IRQ (FIQ no)							--- INTERRUPT CONTROL R
 2203              		.loc 1 30 0
 2204 005c 1E36A0E3 		mov	r3, #31457280
 2205 0060 0120A0E3 		mov	r2, #1
 2206 0064 002083E5 		str	r2, [r3, #0]
  31:../timer1.c   **** 	rINTMSK &= ~(BIT_TIMER1); // habilitamos en vector de mascaras de interrupcion el Timer0 		--- INT
 2207              		.loc 1 31 0
 2208 0068 64309FE5 		ldr	r3, .L5+4
 2209 006c 60209FE5 		ldr	r2, .L5+4
 2210 0070 002092E5 		ldr	r2, [r2, #0]
 2211 0074 012AC2E3 		bic	r2, r2, #4096
 2212 0078 002083E5 		str	r2, [r3, #0]
  32:../timer1.c   **** 							//(bits 26 y 13, BIT_GLOBAL y BIT_TIMER0 están definidos en 44b.h)		--- BIT_TIMER0: (0x1<<13
  33:../timer1.c   **** 	// &= ELIMINA BITS
  34:../timer1.c   **** 
  35:../timer1.c   **** 	/* Establece la rutina de servicio para TIMER0 */
  36:../timer1.c   **** 	pISR_TIMER1 = (unsigned) timer1_ISR;
 2213              		.loc 1 36 0
 2214 007c 54309FE5 		ldr	r3, .L5+8
 2215 0080 54209FE5 		ldr	r2, .L5+12
 2216 0084 002083E5 		str	r2, [r3, #0]
  37:../timer1.c   **** 
  38:../timer1.c   **** 	/* Configura el Timer0 */
  39:../timer1.c   **** 	rTCFG0 |= (0xE); // PREESCALADO: 14 ajusta el preescalado															--- (*(volatile unsigned *
 2217              		.loc 1 39 0
 2218 0088 50309FE5 		ldr	r3, .L5+16
 2219 008c 4C209FE5 		ldr	r2, .L5+16
 2220 0090 002092E5 		ldr	r2, [r2, #0]
 2221 0094 0E2082E3 		orr	r2, r2, #14
 2222 0098 002083E5 		str	r2, [r3, #0]
  40:../timer1.c   **** 	rTCFG1 |= (0x0); // selecciona la entrada del mux que proporciona el reloj.						--- (*(volatile u
 2223              		.loc 1 40 0
 2224 009c 40309FE5 		ldr	r3, .L5+20
 2225 00a0 3C209FE5 		ldr	r2, .L5+20
 2226 00a4 002092E5 		ldr	r2, [r2, #0]
 2227 00a8 002083E5 		str	r2, [r3, #0]
  41:../timer1.c   **** 				  	  // DIVISOR 2: La 00 corresponde a un divisor de 1/2.
  42:../timer1.c   **** 	rTCNTB1 = 35555;// valor inicial de cuenta (la cuenta es descendente)
 2228              		.loc 1 42 0
 2229 00ac 34309FE5 		ldr	r3, .L5+24
 2230 00b0 34209FE5 		ldr	r2, .L5+28
 2231 00b4 002083E5 		str	r2, [r3, #0]
  43:../timer1.c   **** 	rTCMPB1 = 0;// valor de comparación
 2232              		.loc 1 43 0
 2233 00b8 30309FE5 		ldr	r3, .L5+32
 2234 00bc 0020A0E3 		mov	r2, #0
 2235 00c0 002083E5 		str	r2, [r3, #0]
  44:../timer1.c   **** 
  45:../timer1.c   **** }
 2236              		.loc 1 45 0
 2237 00c4 0CD04BE2 		sub	sp, fp, #12
 2238 00c8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2239 00cc 1EFF2FE1 		bx	lr
 2240              	.L6:
 2241              		.align	2
 2242              	.L5:
 2243 00d0 0800E001 		.word	31457288
 2244 00d4 0C00E001 		.word	31457292
 2245 00d8 50FF7F0C 		.word	209715024
 2246 00dc 00000000 		.word	timer1_ISR
 2247 00e0 0000D501 		.word	30736384
 2248 00e4 0400D501 		.word	30736388
 2249 00e8 1800D501 		.word	30736408
 2250 00ec E38A0000 		.word	35555
 2251 00f0 1C00D501 		.word	30736412
 2252              		.cfi_endproc
 2253              	.LFE1:
 2255              		.align	2
 2256              		.global	timer1_stop
 2258              	timer1_stop:
 2259              	.LFB2:
  46:../timer1.c   **** 
  47:../timer1.c   **** void timer1_stop() {
 2260              		.loc 1 47 0
 2261              		.cfi_startproc
 2262              		@ Function supports interworking.
 2263              		@ args = 0, pretend = 0, frame = 0
 2264              		@ frame_needed = 1, uses_anonymous_args = 0
 2265 00f4 0DC0A0E1 		mov	ip, sp
 2266              	.LCFI4:
 2267              		.cfi_def_cfa_register 12
 2268 00f8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2269 00fc 04B04CE2 		sub	fp, ip, #4
 2270              		.cfi_offset 14, -8
 2271              		.cfi_offset 13, -12
 2272              		.cfi_offset 11, -16
 2273              	.LCFI5:
 2274              		.cfi_def_cfa 11, 4
  48:../timer1.c   **** 	rINTMSK |= BIT_TIMER1;
 2275              		.loc 1 48 0
 2276 0100 2C309FE5 		ldr	r3, .L8
 2277 0104 28209FE5 		ldr	r2, .L8
 2278 0108 002092E5 		ldr	r2, [r2, #0]
 2279 010c 012A82E3 		orr	r2, r2, #4096
 2280 0110 002083E5 		str	r2, [r3, #0]
  49:../timer1.c   **** 	rTCON &= ~(0x100);
 2281              		.loc 1 49 0
 2282 0114 1C309FE5 		ldr	r3, .L8+4
 2283 0118 18209FE5 		ldr	r2, .L8+4
 2284 011c 002092E5 		ldr	r2, [r2, #0]
 2285 0120 012CC2E3 		bic	r2, r2, #256
 2286 0124 002083E5 		str	r2, [r3, #0]
  50:../timer1.c   **** }
 2287              		.loc 1 50 0
 2288 0128 0CD04BE2 		sub	sp, fp, #12
 2289 012c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2290 0130 1EFF2FE1 		bx	lr
 2291              	.L9:
 2292              		.align	2
 2293              	.L8:
 2294 0134 0C00E001 		.word	31457292
 2295 0138 0800D501 		.word	30736392
 2296              		.cfi_endproc
 2297              	.LFE2:
 2299              		.align	2
 2300              		.global	timer1_empezar
 2302              	timer1_empezar:
 2303              	.LFB3:
  51:../timer1.c   **** 
  52:../timer1.c   **** void timer1_empezar() {
 2304              		.loc 1 52 0
 2305              		.cfi_startproc
 2306              		@ Function supports interworking.
 2307              		@ args = 0, pretend = 0, frame = 0
 2308              		@ frame_needed = 1, uses_anonymous_args = 0
 2309 013c 0DC0A0E1 		mov	ip, sp
 2310              	.LCFI6:
 2311              		.cfi_def_cfa_register 12
 2312 0140 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2313 0144 04B04CE2 		sub	fp, ip, #4
 2314              		.cfi_offset 14, -8
 2315              		.cfi_offset 13, -12
 2316              		.cfi_offset 11, -16
 2317              	.LCFI7:
 2318              		.cfi_def_cfa 11, 4
  53:../timer1.c   **** 	rINTMSK &= ~(BIT_TIMER1);
 2319              		.loc 1 53 0
 2320 0148 54309FE5 		ldr	r3, .L11
 2321 014c 50209FE5 		ldr	r2, .L11
 2322 0150 002092E5 		ldr	r2, [r2, #0]
 2323 0154 012AC2E3 		bic	r2, r2, #4096
 2324 0158 002083E5 		str	r2, [r3, #0]
  54:../timer1.c   **** 	rTCON |= 0x200;
 2325              		.loc 1 54 0
 2326 015c 44309FE5 		ldr	r3, .L11+4
 2327 0160 40209FE5 		ldr	r2, .L11+4
 2328 0164 002092E5 		ldr	r2, [r2, #0]
 2329 0168 022C82E3 		orr	r2, r2, #512
 2330 016c 002083E5 		str	r2, [r3, #0]
  55:../timer1.c   **** 	/* iniciar timer (bit 0) con auto-reload (bit 3)*/
  56:../timer1.c   **** 	rTCON |= 0x900;
 2331              		.loc 1 56 0
 2332 0170 30309FE5 		ldr	r3, .L11+4
 2333 0174 2C209FE5 		ldr	r2, .L11+4
 2334 0178 002092E5 		ldr	r2, [r2, #0]
 2335 017c 092C82E3 		orr	r2, r2, #2304
 2336 0180 002083E5 		str	r2, [r3, #0]
  57:../timer1.c   **** 	rTCON &= ~(0x200);
 2337              		.loc 1 57 0
 2338 0184 1C309FE5 		ldr	r3, .L11+4
 2339 0188 18209FE5 		ldr	r2, .L11+4
 2340 018c 002092E5 		ldr	r2, [r2, #0]
 2341 0190 022CC2E3 		bic	r2, r2, #512
 2342 0194 002083E5 		str	r2, [r3, #0]
  58:../timer1.c   **** }
 2343              		.loc 1 58 0
 2344 0198 0CD04BE2 		sub	sp, fp, #12
 2345 019c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2346 01a0 1EFF2FE1 		bx	lr
 2347              	.L12:
 2348              		.align	2
 2349              	.L11:
 2350 01a4 0C00E001 		.word	31457292
 2351 01a8 0800D501 		.word	30736392
 2352              		.cfi_endproc
 2353              	.LFE3:
 2355              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 timer1.c
                            *COM*:00000004 switch_leds
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2132   .text:00000000 $a
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2135   .text:00000000 timer1_ISR
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2175   .text:00000040 $d
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2179   .text:00000044 $a
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2182   .text:00000044 timer1_init
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2243   .text:000000d0 $d
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2255   .text:000000f4 $a
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2258   .text:000000f4 timer1_stop
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2294   .text:00000134 $d
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2299   .text:0000013c $a
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2302   .text:0000013c timer1_empezar
C:\Users\danie\AppData\Local\Temp\ccZCsFfF.s:2350   .text:000001a4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
push_debug
